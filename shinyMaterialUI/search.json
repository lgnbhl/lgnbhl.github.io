[{"path":"https://felixluginbuhl.com/shinyMaterialUI/articles/button.html","id":"button","dir":"Articles","previous_headings":"","what":"Button","title":"Button","text":"Buttons allow users take actions, make choices, single tap. Buttons communicate actions users can take. typically placed throughout UI, places like: Modal windows Forms Cards Toolbars","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/articles/button.html","id":"basic-button","dir":"Articles","previous_headings":"Button","what":"Basic button","title":"Button","text":"Button comes three variants: text (default), contained, outlined.","code":"CssBaseline(   Stack(     spacing = 2,      direction = \"row\",     Button(variant = \"text\", \"Text\"),     Button(variant = \"contained\", \"Contained\"),     Button(variant = \"outlined\", \"Outlined\")   ) ) import * as React from 'react'; import Stack from '@mui/material/Stack'; import Button from '@mui/material/Button';  export default function BasicButtons() {   return (     <Stack spacing={2} direction=\"row\">       <Button variant=\"text\">Text<\/Button>       <Button variant=\"contained\">Contained<\/Button>       <Button variant=\"outlined\">Outlined<\/Button>     <\/Stack>   ); }"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/articles/button.html","id":"text-button","dir":"Articles","previous_headings":"Button","what":"Text button","title":"Button","text":"Text buttons typically used less-pronounced actions, including located: dialogs, cards. cards, text buttons help maintain emphasis card content.","code":"CssBaseline(   Stack(     direction = \"row\",      spacing = 2,     Button(\"Primary\"),     Button(disabled = TRUE, \"Disabled\"),     Button(href = \"#text-buttons\", \"Link\")   ) ) import * as React from 'react'; import Button from '@mui/material/Button'; import Stack from '@mui/material/Stack';  export default function TextButtons() {   return (     <Stack direction=\"row\" spacing={2}>       <Button>Primary<\/Button>       <Button disabled>Disabled<\/Button>       <Button href=\"#text-buttons\">Link<\/Button>     <\/Stack>   ); }"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/articles/button.html","id":"contained-button","dir":"Articles","previous_headings":"Button","what":"Contained button","title":"Button","text":"Contained buttons high-emphasis, distinguished use elevation fill. contain actions primary app. can remove elevation disableElevation prop.","code":"CssBaseline(   Stack(     direction = \"row\",      spacing = 2,     Button(variant = \"contained\", \"Contained\"),     Button(variant = \"contained\", disabled = TRUE, \"Disabled\"),     Button(variant = \"contained\", href = \"#contained-buttons\", \"Link\")   ) ) import * as React from 'react'; import Button from '@mui/material/Button'; import Stack from '@mui/material/Stack';  export default function ContainedButtons() {   return (     <Stack direction=\"row\" spacing={2}>       <Button variant=\"contained\">Contained<\/Button>       <Button variant=\"contained\" disabled>         Disabled       <\/Button>       <Button variant=\"contained\" href=\"#contained-buttons\">         Link       <\/Button>     <\/Stack>   ); } CssBaseline(   Button(variant = \"contained\", disableElevation = TRUE, \"Disable elevation\") ) import * as React from 'react'; import Button from '@mui/material/Button';  export default function DisableElevation() {   return (     <Button variant=\"contained\" disableElevation>       Disable elevation     <\/Button>   ); }"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/articles/button.html","id":"outlined-button","dir":"Articles","previous_headings":"Button","what":"Outlined button","title":"Button","text":"Outlined buttons medium-emphasis buttons. contain actions important aren’t primary action app. Outlined buttons also lower emphasis alternative contained buttons, higher emphasis alternative text buttons.","code":"CssBaseline(   Stack(     direction = \"row\",      spacing = 2,     Button(variant = \"outlined\", \"Primary\"),     Button(variant = \"outlined\", disabled = TRUE, \"Disabled\"),     Button(variant = \"outlined\", href = \"#outlined-buttons\", \"Link\")   ) ) import * as React from 'react'; import Button from '@mui/material/Button'; import Stack from '@mui/material/Stack';  export default function OutlinedButtons() {   return (     <Stack direction=\"row\" spacing={2}>       <Button variant=\"outlined\">Primary<\/Button>       <Button variant=\"outlined\" disabled>         Disabled       <\/Button>       <Button variant=\"outlined\" href=\"#outlined-buttons\">         Link       <\/Button>     <\/Stack>   ); }"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/articles/button.html","id":"handling-clicks","dir":"Articles","previous_headings":"Button","what":"Handling clicks","title":"Button","text":"components accept onClick handler applied root DOM element. Note documentation avoids mentioning native props (lot) API section components.","code":"ui <- shinyMaterialUIPage(   Button.shinyInput(     inputId = \"clickButton\",     \"Click me\"   ) )  server <- function(input, output, session) {   observeEvent(input$clickButton, {     showModal(modalDialog(       title = \"Clicked\",       \"Button was clicked\"     ))   }) }  shinyApp(ui, server) <Button   onClick={() => {     alert('clicked');   }} >   Click me <\/Button>"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/articles/button.html","id":"color","dir":"Articles","previous_headings":"Button","what":"Color","title":"Button","text":"addition using default button colors, can add custom ones, disable don’t need. See Adding new colors examples info.","code":"CssBaseline(   Stack(     direction = \"row\",      spacing = 2,     Button(color = \"secondary\", \"Secondary\"),     Button(variant = \"contained\", color = \"success\", \"Success\"),     Button(variant = \"outlined\", color = \"error\", \"Error\")   ) ) import * as React from 'react'; import Stack from '@mui/material/Stack'; import Button from '@mui/material/Button';  export default function ColorButtons() {   return (     <Stack direction=\"row\" spacing={2}>       <Button color=\"secondary\">Secondary<\/Button>       <Button variant=\"contained\" color=\"success\">         Success       <\/Button>       <Button variant=\"outlined\" color=\"error\">         Error       <\/Button>     <\/Stack>   ); }"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/articles/button.html","id":"sizes","dir":"Articles","previous_headings":"Button","what":"Sizes","title":"Button","text":"larger smaller buttons, use size prop.","code":"CssBaseline(   Box(     sx = list('& button' = list(m = 1)),     div(       Button(size = \"small\", \"Small\"),       Button(size = \"medium\", \"Medium\"),       Button(size = \"large\", \"Large\")     ),     div(       Button(variant = \"outlined\", size = \"small\", \"Small\"),       Button(variant = \"outlined\", size = \"medium\", \"Medium\"),       Button(variant = \"outlined\", size = \"large\", \"Large\")     ),     div(       Button(variant = \"contained\", size = \"small\", \"Small\"),       Button(variant = \"contained\", size = \"medium\", \"Medium\"),       Button(variant = \"contained\", size = \"large\", \"Large\")     )   ) ) import * as React from 'react'; import Box from '@mui/material/Box'; import Button from '@mui/material/Button';  export default function ButtonSizes() {   return (     <Box sx={{ '& button': { m: 1 } }}>       <div>         <Button size=\"small\">Small<\/Button>         <Button size=\"medium\">Medium<\/Button>         <Button size=\"large\">Large<\/Button>       <\/div>       <div>         <Button variant=\"outlined\" size=\"small\">           Small         <\/Button>         <Button variant=\"outlined\" size=\"medium\">           Medium         <\/Button>         <Button variant=\"outlined\" size=\"large\">           Large         <\/Button>       <\/div>       <div>         <Button variant=\"contained\" size=\"small\">           Small         <\/Button>         <Button variant=\"contained\" size=\"medium\">           Medium         <\/Button>         <Button variant=\"contained\" size=\"large\">           Large         <\/Button>       <\/div>     <\/Box>   ); }"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/articles/button.html","id":"buttons-with-icons-and-label","dir":"Articles","previous_headings":"Button","what":"Buttons with icons and label","title":"Button","text":"Sometimes might want icons certain buttons enhance UX application recognize logos easily plain text. example, delete button can label dustbin icon.","code":"CssBaseline(   Stack(     direction = \"row\",      spacing = 2,     Button(       variant = \"outlined\",        startIcon = shiny::icon(\"trash\"),       \"Delete\"     ),     Button(       variant = \"contained\",        endIcon = shiny::icon(\"paper-plane\"),       \"Send\"     )   ) ) import * as React from 'react'; import Button from '@mui/material/Button'; import DeleteIcon from '@mui/icons-material/Delete'; import SendIcon from '@mui/icons-material/Send'; import Stack from '@mui/material/Stack';  export default function IconLabelButtons() {   return (     <Stack direction=\"row\" spacing={2}>       <Button variant=\"outlined\" startIcon={<DeleteIcon />}>         Delete       <\/Button>       <Button variant=\"contained\" endIcon={<SendIcon />}>         Send       <\/Button>     <\/Stack>   ); }"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/articles/button.html","id":"icon-button","dir":"Articles","previous_headings":"Button","what":"Icon button","title":"Button","text":"Icon buttons commonly found app bars toolbars. Icons also appropriate toggle buttons allow single choice selected deselected, adding removing star item.","code":"CssBaseline(   Stack(     direction = \"row\",      spacing = 1,     IconButton(       `aria-label` = \"delete\",       shiny::icon(\"trash\")     ),     IconButton(       `aria-label` = \"delete\",        disabled = TRUE,        color = \"primary\",       shiny::icon(\"trash\")     ),     IconButton(       color = \"secondary\",        `aria-label` = \"add an alarm\",       shiny::icon(\"clock\")     ),     IconButton(       color = \"primary\",        `aria-label` = \"add to shopping cart\",       shiny::icon(\"shopping-cart\")     )   ) ) import * as React from 'react'; import IconButton from '@mui/material/IconButton'; import Stack from '@mui/material/Stack'; import DeleteIcon from '@mui/icons-material/Delete'; import AlarmIcon from '@mui/icons-material/Alarm'; import AddShoppingCartIcon from '@mui/icons-material/AddShoppingCart';  export default function IconButtons() {   return (     <Stack direction=\"row\" spacing={1}>       <IconButton aria-label=\"delete\">         <DeleteIcon />       <\/IconButton>       <IconButton aria-label=\"delete\" disabled color=\"primary\">         <DeleteIcon />       <\/IconButton>       <IconButton color=\"secondary\" aria-label=\"add an alarm\">         <AlarmIcon />       <\/IconButton>       <IconButton color=\"primary\" aria-label=\"add to shopping cart\">         <AddShoppingCartIcon />       <\/IconButton>     <\/Stack>   ); }"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/articles/button.html","id":"sizes-1","dir":"Articles","previous_headings":"Button","what":"Sizes","title":"Button","text":"larger smaller icon buttons, use size prop.","code":"CssBaseline(   Stack(     direction = \"row\",      spacing = 1,      sx = list(alignItems = \"center\"),     IconButton(       `aria-label` = \"delete\",        size = \"small\",       shiny::icon(\"trash\")     ),     IconButton(       `aria-label` = \"delete\",        size = \"small\",       shiny::icon(\"trash\", class = \"fa-sm\")     ),     IconButton(       `aria-label` = \"delete\",        size = \"large\",       shiny::icon(\"trash\")     ),     IconButton(       `aria-label` = \"delete\",        size = \"large\",       shiny::icon(\"trash\", class = \"fa-lg\")     )   ) ) import * as React from 'react'; import Stack from '@mui/material/Stack'; import IconButton from '@mui/material/IconButton'; import DeleteIcon from '@mui/icons-material/Delete';  export default function IconButtonSizes() {   return (     <Stack direction=\"row\" spacing={1} sx={{ alignItems: 'center' }}>       <IconButton aria-label=\"delete\" size=\"small\">         <DeleteIcon fontSize=\"inherit\" />       <\/IconButton>       <IconButton aria-label=\"delete\" size=\"small\">         <DeleteIcon fontSize=\"small\" />       <\/IconButton>       <IconButton aria-label=\"delete\" size=\"large\">         <DeleteIcon />       <\/IconButton>       <IconButton aria-label=\"delete\" size=\"large\">         <DeleteIcon fontSize=\"inherit\" />       <\/IconButton>     <\/Stack>   ); }"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/articles/button.html","id":"colors","dir":"Articles","previous_headings":"Button","what":"Colors","title":"Button","text":"Use color prop apply theme color palette component.","code":"CssBaseline(   Stack(     direction = \"row\",      spacing = 1,     IconButton(       `aria-label` = \"fingerprint\",        color = \"secondary\",       shiny::icon(\"fingerprint\")     ),     IconButton(       `aria-label` = \"fingerprint\",        color = \"success\",       shiny::icon(\"fingerprint\")     )   ) ) import * as React from 'react'; import Stack from '@mui/material/Stack'; import IconButton from '@mui/material/IconButton'; import Fingerprint from '@mui/icons-material/Fingerprint';  export default function IconButtonColors() {   return (     <Stack direction=\"row\" spacing={1}>       <IconButton aria-label=\"fingerprint\" color=\"secondary\">         <Fingerprint />       <\/IconButton>       <IconButton aria-label=\"fingerprint\" color=\"success\">         <Fingerprint />       <\/IconButton>     <\/Stack>   ); }"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/articles/button.html","id":"loading","dir":"Articles","previous_headings":"Button","what":"Loading","title":"Button","text":"Starting v6.4.0, use loading prop set icon buttons loading state disable interactions.","code":"ui <- shinyMaterialUIPage(   Tooltip(     title = \"Click to see loading\",     IconButton.shinyInput(       inputId = \"loadingButton\",       shiny::icon(\"shopping-cart\")     )   ) )  server <- function(input, output, session) {   observeEvent(input$loadingButton, {     updateIconButton.shinyInput(       inputId = \"loadingButton\",       loading = TRUE     )          # Reset after 2 seconds     Sys.sleep(2)     updateIconButton.shinyInput(       inputId = \"loadingButton\",       loading = FALSE     )   }) }  shinyApp(ui, server) import * as React from 'react'; import Tooltip from '@mui/material/Tooltip'; import IconButton from '@mui/material/IconButton'; import ShoppingCartIcon from '@mui/icons-material/ShoppingCart';  export default function LoadingIconButton() {   const [loading, setLoading] = React.useState(false);   React.useEffect(() => {     const timeout = setTimeout(() => {       setLoading(false);     }, 2000);     return () => clearTimeout(timeout);   });   return (     <Tooltip title=\"Click to see loading\">       <IconButton onClick={() => setLoading(true)} loading={loading}>         <ShoppingCartIcon />       <\/IconButton>     <\/Tooltip>   ); }"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/articles/button.html","id":"badge","dir":"Articles","previous_headings":"Button","what":"Badge","title":"Button","text":"can use Badge component add badge IconButton.","code":"CssBaseline(   IconButton(     shiny::icon(\"shopping-cart\", class = \"fa-sm\"),     Badge(       badgeContent = 2,        color = \"primary\",        overlap = \"circular\",       sx = list(         \"& .MuiBadge-badge\" = list(           top = \"-12px\",           right = \"-6px\"         )       )     )   ) ) import * as React from 'react'; import { styled } from '@mui/material/styles'; import IconButton from '@mui/material/IconButton'; import Badge, { badgeClasses } from '@mui/material/Badge'; import ShoppingCartIcon from '@mui/icons-material/ShoppingCartOutlined';  const CartBadge = styled(Badge)`   & .${badgeClasses.badge} {     top: -12px;     right: -6px;   } `;  export default function IconButtonWithBadge() {   return (     <IconButton>       <ShoppingCartIcon fontSize=\"small\" />       <CartBadge badgeContent={2} color=\"primary\" overlap=\"circular\" />     <\/IconButton>   ); }"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/articles/button.html","id":"file-upload","dir":"Articles","previous_headings":"Button","what":"File upload","title":"Button","text":"create file upload button, turn button label using component=“label” create visually-hidden input type file.","code":"ui <- shinyMaterialUIPage(   Button(     component = \"label\",     role = NULL,     variant = \"contained\",     tabIndex = -1,     startIcon = shiny::icon(\"cloud-upload-alt\"),     \"Upload files\",     tags$input(       type = \"file\",       id = \"fileUpload\",       style = \"clip: rect(0 0 0 0); clipPath: inset(50%); height: 1px; overflow: hidden; position: absolute; bottom: 0; left: 0; whiteSpace: nowrap; width: 1px;\",       multiple = TRUE     )   ) )  server <- function(input, output, session) {   observeEvent(input$fileUpload, {     # Handle file upload     req(input$fileUpload)     print(input$fileUpload$name)   }) }  shinyApp(ui, server) import * as React from 'react'; import { styled } from '@mui/material/styles'; import Button from '@mui/material/Button'; import CloudUploadIcon from '@mui/icons-material/CloudUpload';  const VisuallyHiddenInput = styled('input')({   clip: 'rect(0 0 0 0)',   clipPath: 'inset(50%)',   height: 1,   overflow: 'hidden',   position: 'absolute',   bottom: 0,   left: 0,   whiteSpace: 'nowrap',   width: 1, });  export default function InputFileUpload() {   return (     <Button       component=\"label\"       role={undefined}       variant=\"contained\"       tabIndex={-1}       startIcon={<CloudUploadIcon />}     >       Upload files       <VisuallyHiddenInput         type=\"file\"         onChange={(event) => console.log(event.target.files)}         multiple       />     <\/Button>   ); }"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/articles/button.html","id":"loading-1","dir":"Articles","previous_headings":"Button","what":"Loading","title":"Button","text":"Starting v6.4.0, use loading prop set buttons loading state disable interactions. Toggle loading switch see transition different states.","code":"CssBaseline(   Stack(     spacing = 2,     Stack(       direction = \"row\",        spacing = 2,       Button(loading = TRUE, variant = \"outlined\", \"Submit\"),       Button(loading = TRUE, loadingIndicator = \"Loading…\", variant = \"outlined\", \"Fetch data\"),       Button(         loading = TRUE,         loadingPosition = \"start\",         startIcon = shiny::icon(\"save\"),         variant = \"outlined\",         \"Save\"       )     ),     Button(       fullWidth = TRUE,       loading = TRUE,       loadingPosition = \"start\",       startIcon = shiny::icon(\"save\"),       variant = \"outlined\",       \"Full width\"     ),     Button(       fullWidth = TRUE,       loading = TRUE,       loadingPosition = \"end\",       endIcon = shiny::icon(\"save\"),       variant = \"outlined\",       \"Full width\"     ),     Stack(       direction = \"row\",        spacing = 2,       Button(loading = TRUE, variant = \"outlined\", loadingPosition = \"start\", \"Submit\"),       Button(loading = TRUE, variant = \"outlined\", loadingPosition = \"end\", \"Submit\"),       Button(         loading = TRUE,         variant = \"outlined\",         loadingPosition = \"end\",         startIcon = shiny::icon(\"save\"),         \"Save\"       )     )   ) ) import * as React from 'react'; import Button from '@mui/material/Button'; import SaveIcon from '@mui/icons-material/Save'; import Stack from '@mui/material/Stack';  export default function LoadingButtons() {   return (     <Stack spacing={2}>       <Stack direction=\"row\" spacing={2}>         <Button loading variant=\"outlined\">           Submit         <\/Button>         <Button loading loadingIndicator=\"Loading…\" variant=\"outlined\">           Fetch data         <\/Button>         <Button           loading           loadingPosition=\"start\"           startIcon={<SaveIcon />}           variant=\"outlined\"         >           Save         <\/Button>       <\/Stack>       <Button         fullWidth         loading         loadingPosition=\"start\"         startIcon={<SaveIcon />}         variant=\"outlined\"       >         Full width       <\/Button>       <Button         fullWidth         loading         loadingPosition=\"end\"         endIcon={<SaveIcon />}         variant=\"outlined\"       >         Full width       <\/Button>       <Stack direction=\"row\" spacing={2}>         <Button loading variant=\"outlined\" loadingPosition=\"start\">           Submit         <\/Button>         <Button loading variant=\"outlined\" loadingPosition=\"end\">           Submit         <\/Button>         <Button           loading           variant=\"outlined\"           loadingPosition=\"end\"           startIcon={<SaveIcon />}         >           Save         <\/Button>       <\/Stack>     <\/Stack>   ); }"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/articles/button.html","id":"loading-2","dir":"Articles","previous_headings":"Button","what":"Loading","title":"Button","text":"loading prop set boolean, loading wrapper always present DOM prevent Google Translation Crash. loading value always null boolean. pattern recommended can cause Google Translation crash:","code":"ui <- shinyMaterialUIPage(   div(     FormControlLabel(       sx = list(display = \"block\"),       control = Switch.shinyInput(         inputId = \"loadingSwitch\",         value = TRUE,         name = \"loading\",         color = \"primary\"       ),       label = \"Loading\"     ),     Box(       sx = list(\"& > button\" = list(m = 1)),       Button.shinyInput(         inputId = \"basicButton\",         size = \"small\",         loading = TRUE,         variant = \"outlined\",         disabled = TRUE,         \"Disabled\"       ),       Button.shinyInput(         inputId = \"fetchButton\",         size = \"small\",         loading = TRUE,         loadingIndicator = \"Loading…\",         variant = \"outlined\",         \"Fetch data\"       ),       Button.shinyInput(         inputId = \"sendButton\",         size = \"small\",         endIcon = shiny::icon(\"paper-plane\"),         loading = TRUE,         loadingPosition = \"end\",         variant = \"contained\",         \"Send\"       ),       Button.shinyInput(         inputId = \"saveButton\",         size = \"small\",         color = \"secondary\",         loading = TRUE,         loadingPosition = \"start\",         startIcon = shiny::icon(\"save\"),         variant = \"contained\",         \"Save\"       )     ),     Box(       sx = list(\"& > button\" = list(m = 1)),       Button.shinyInput(         inputId = \"basicButton2\",         loading = TRUE,          variant = \"outlined\",          disabled = TRUE,         \"Disabled\"       ),       Button.shinyInput(         inputId = \"fetchButtonLarge\",         loading = TRUE,         loadingIndicator = \"Loading…\",         variant = \"outlined\",         \"Fetch data\"       ),       Button.shinyInput(         inputId = \"sendButtonLarge\",         endIcon = shiny::icon(\"paper-plane\"),         loading = TRUE,         loadingPosition = \"end\",         variant = \"contained\",         \"Send\"       ),       Button.shinyInput(         inputId = \"saveButtonLarge\",         color = \"secondary\",         loading = TRUE,         loadingPosition = \"start\",         startIcon = shiny::icon(\"save\"),         variant = \"contained\",         \"Save\"       )     )   ) )  server <- function(input, output, session) {   observe({     loading <- input$loadingSwitch          updateButton.shinyInput(inputId = \"basicButton\", loading = loading)     updateButton.shinyInput(inputId = \"fetchButton\", loading = loading)     updateButton.shinyInput(inputId = \"sendButton\", loading = loading)     updateButton.shinyInput(inputId = \"saveButton\", loading = loading)     updateButton.shinyInput(inputId = \"basicButton2\", loading = loading)     updateButton.shinyInput(inputId = \"fetchButtonLarge\", loading = loading)     updateButton.shinyInput(inputId = \"sendButtonLarge\", loading = loading)     updateButton.shinyInput(inputId = \"saveButtonLarge\", loading = loading)   }) }  shinyApp(ui, server) import * as React from 'react'; import Button from '@mui/material/Button'; import Box from '@mui/material/Box'; import FormControlLabel from '@mui/material/FormControlLabel'; import Switch from '@mui/material/Switch'; import SaveIcon from '@mui/icons-material/Save'; import SendIcon from '@mui/icons-material/Send';  export default function LoadingButtonsTransition() {   const [loading, setLoading] = React.useState(true);   function handleClick() {     setLoading(true);   }    return (     <div>       <FormControlLabel         sx={{ display: 'block' }}         control={           <Switch             checked={loading}             onChange={() => setLoading(!loading)}             name=\"loading\"             color=\"primary\"           />         }         label=\"Loading\"       />       <Box sx={{ '& > button': { m: 1 } }}>         <Button           size=\"small\"           onClick={handleClick}           loading={loading}           variant=\"outlined\"           disabled         >           Disabled         <\/Button>         <Button           size=\"small\"           onClick={handleClick}           loading={loading}           loadingIndicator=\"Loading…\"           variant=\"outlined\"         >           Fetch data         <\/Button>         <Button           size=\"small\"           onClick={handleClick}           endIcon={<SendIcon />}           loading={loading}           loadingPosition=\"end\"           variant=\"contained\"         >           Send         <\/Button>         <Button           size=\"small\"           color=\"secondary\"           onClick={handleClick}           loading={loading}           loadingPosition=\"start\"           startIcon={<SaveIcon />}           variant=\"contained\"         >           Save         <\/Button>       <\/Box>       <Box sx={{ '& > button': { m: 1 } }}>         <Button onClick={handleClick} loading={loading} variant=\"outlined\" disabled>           Disabled         <\/Button>         <Button           onClick={handleClick}           loading={loading}           loadingIndicator=\"Loading…\"           variant=\"outlined\"         >           Fetch data         <\/Button>         <Button           onClick={handleClick}           endIcon={<SendIcon />}           loading={loading}           loadingPosition=\"end\"           variant=\"contained\"         >           Send         <\/Button>         <Button           color=\"secondary\"           onClick={handleClick}           loading={loading}           loadingPosition=\"start\"           startIcon={<SaveIcon />}           variant=\"contained\"         >           Save         <\/Button>       <\/Box>     <\/div>   ); } <Button {...(isFetching && { loading: true })}> // ❌ Don't do this"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/articles/button.html","id":"customization","dir":"Articles","previous_headings":"Button","what":"Customization","title":"Button","text":"examples customizing component. can learn overrides documentation page.","code":"import * as React from 'react'; import { styled } from '@mui/material/styles'; import Button from '@mui/material/Button'; import Stack from '@mui/material/Stack'; import { purple } from '@mui/material/colors';  const BootstrapButton = styled(Button)({   boxShadow: 'none',   textTransform: 'none',   fontSize: 16,   padding: '6px 12px',   border: '1px solid',   lineHeight: 1.5,   backgroundColor: '#0063cc',   borderColor: '#0063cc',   fontFamily: [     '-apple-system',     'BlinkMacSystemFont',     '\"Segoe UI\"',     'Roboto',     '\"Helvetica Neue\"',     'Arial',     'sans-serif',     '\"Apple Color Emoji\"',     '\"Segoe UI Emoji\"',     '\"Segoe UI Symbol\"',   ].join(','),   '&:hover': {     backgroundColor: '#0069d9',     borderColor: '#0062cc',     boxShadow: 'none',   },   '&:active': {     boxShadow: 'none',     backgroundColor: '#0062cc',     borderColor: '#005cbf',   },   '&:focus': {     boxShadow: '0 0 0 0.2rem rgba(0,123,255,.5)',   }, });  const ColorButton = styled(Button)(({ theme }) => ({   color: theme.palette.getContrastText(purple[500]),   backgroundColor: purple[500],   '&:hover': {     backgroundColor: purple[700],   }, }));  export default function CustomizedButtons() {   return (     <Stack spacing={2} direction=\"row\">       <ColorButton variant=\"contained\">Custom CSS<\/ColorButton>       <BootstrapButton variant=\"contained\" disableRipple>         Bootstrap       <\/BootstrapButton>     <\/Stack>   ); } library(shiny)  CustomizedButtons <- function() {   CssBaseline(     ThemeProvider(       theme = list(         components = list(           MuiButton = list(             styleOverrides = list(               root = list(                 \"&.bootstrap-button\" = list(                   boxShadow = \"none\",                   textTransform = \"none\",                   fontSize = 16,                   padding = \"6px 12px\",                   border = \"1px solid\",                   lineHeight = 1.5,                   backgroundColor = \"#0063cc\",                   borderColor = \"#0063cc\",                   fontFamily = paste(                     \"-apple-system\",                     \"BlinkMacSystemFont\",                     '\"Segoe UI\"',                     \"Roboto\",                     '\"Helvetica Neue\"',                     \"Arial\",                     \"sans-serif\",                     '\"Apple Color Emoji\"',                     '\"Segoe UI Emoji\"',                     '\"Segoe UI Symbol\"',                     sep = \",\"                   ),                   \"&:hover\" = list(                     backgroundColor = \"#0069d9\",                     borderColor = \"#0062cc\",                     boxShadow = \"none\"                   ),                   \"&:active\" = list(                     boxShadow = \"none\",                     backgroundColor = \"#0062cc\",                     borderColor = \"#005cbf\"                   ),                   \"&:focus\" = list(                     boxShadow = \"0 0 0 0.2rem rgba(0,123,255,.5)\"                   )                 ),                 \"&.color-button\" = list(                   color = \"#fff\",                   backgroundColor = \"#9c27b0\",                   \"&:hover\" = list(                     backgroundColor = \"#7b1fa2\"                   )                 )               )             )           )         )       ),       Stack(         spacing = 2,         direction = \"row\",         Button(           variant = \"contained\",           className = \"color-button\",           \"Custom CSS\"         ),         Button(           variant = \"contained\",           className = \"bootstrap-button\",           disableRipple = TRUE,           \"Bootstrap\"         )       )     )   ) } CustomizedButtons()"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/articles/button.html","id":"complex-button","dir":"Articles","previous_headings":"Button","what":"Complex button","title":"Button","text":"Text Buttons, Contained Buttons, Floating Action Buttons Icon Buttons built top component: ButtonBase. can take advantage lower-level component build custom interactions.","code":"import * as React from 'react'; import Box from '@mui/material/Box'; import ButtonBase from '@mui/material/ButtonBase'; import Typography from '@mui/material/Typography';  const images = [   {     url: '/static/images/buttons/breakfast.jpg',     title: 'Breakfast',     width: '40%',   },   {     url: '/static/images/buttons/burgers.jpg',     title: 'Burgers',     width: '30%',   },   {     url: '/static/images/buttons/camera.jpg',     title: 'Camera',     width: '30%',   }, ];  export default function ButtonBaseDemo() {   return (     <Box sx={{ display: 'flex', flexWrap: 'wrap', minWidth: 300, width: '100%' }}>       {images.map((image) => (         <ButtonBase           focusRipple           key={image.title}           sx={{             position: 'relative',             width: image.width,             height: 200,             '&:hover, &.Mui-focusVisible': {               zIndex: 1,               '& .MuiImageBackdrop-root': {                 opacity: 0.15,               },               '& .MuiImageMarked-root': {                 opacity: 0,               },               '& .MuiTypography-root': {                 border: '4px solid currentColor',               },             },           }}         >           <Box             sx={{               position: 'absolute',               left: 0,               right: 0,               top: 0,               bottom: 0,               backgroundSize: 'cover',               backgroundPosition: 'center 40%',               backgroundImage: `url(${image.url})`,             }}           />           <Box             className=\"MuiImageBackdrop-root\"             sx={{               position: 'absolute',               left: 0,               right: 0,               top: 0,               bottom: 0,               backgroundColor: 'common.black',               opacity: 0.4,               transition: 'opacity 0.3s',             }}           />           <Box             sx={{               position: 'absolute',               left: 0,               right: 0,               top: 0,               bottom: 0,               display: 'flex',               alignItems: 'center',               justifyContent: 'center',               color: 'common.white',             }}           >             <Typography               component=\"span\"               variant=\"subtitle1\"               color=\"inherit\"               sx={{                 position: 'relative',                 p: 4,                 pt: 2,                 pb: (theme) => `calc(${theme.spacing(1)} + 6px)`,               }}             >               {image.title}               <Box                 className=\"MuiImageMarked-root\"                 sx={{                   height: 3,                   width: 18,                   backgroundColor: 'common.white',                   position: 'absolute',                   bottom: -2,                   left: 'calc(50% - 9px)',                   transition: 'opacity 0.3s',                 }}               />             <\/Typography>           <\/Box>         <\/ButtonBase>       ))}     <\/Box>   ); } library(shiny)  ButtonBaseDemo <- function() {   images <- list(     list(       url = \"https://mui.com/static/images/buttons/breakfast.jpg\",       title = \"Breakfast\",       width = \"40%\"     ),     list(       url = \"https://mui.com/static/images/buttons/burgers.jpg\",       title = \"Burgers\",       width = \"30%\"     ),     list(       url = \"https://mui.com/static/images/buttons/camera.jpg\",       title = \"Camera\",       width = \"30%\"     )   )      CssBaseline(     Box(       sx = list(         display = \"flex\",         flexWrap = \"wrap\",         minWidth = 300,         width = \"100%\"       ),       lapply(images, function(image) {         ButtonBase(           focusRipple = TRUE,           key = image$title,           sx = list(             position = \"relative\",             width = image$width,             height = 200,             \"&:hover, &.Mui-focusVisible\" = list(               zIndex = 1,               \"& .MuiImageBackdrop-root\" = list(                 opacity = 0.15               ),               \"& .MuiImageMarked-root\" = list(                 opacity = 0               ),               \"& .MuiTypography-root\" = list(                 border = \"4px solid currentColor\"               )             )           ),           Box(             sx = list(               position = \"absolute\",               left = 0,               right = 0,               top = 0,               bottom = 0,               backgroundSize = \"cover\",               backgroundPosition = \"center 40%\",               backgroundImage = paste0(\"url(\", image$url, \")\")             )           ),           Box(             className = \"MuiImageBackdrop-root\",             sx = list(               position = \"absolute\",               left = 0,               right = 0,               top = 0,               bottom = 0,               backgroundColor = \"common.black\",               opacity = 0.4,               transition = \"opacity 0.3s\"             )           ),           Box(             sx = list(               position = \"absolute\",               left = 0,               right = 0,               top = 0,               bottom = 0,               display = \"flex\",               alignItems = \"center\",               justifyContent = \"center\",               color = \"common.white\"             ),             Typography(               component = \"span\",               variant = \"subtitle1\",               color = \"inherit\",               sx = list(                 position = \"relative\",                 p = 4,                 pt = 2,                 pb = \"calc(8px + 6px)\"               ),               image$title,               Box(                 className = \"MuiImageMarked-root\",                 sx = list(                   height = 3,                   width = 18,                   backgroundColor = \"common.white\",                   position = \"absolute\",                   bottom = -2,                   left = \"calc(50% - 9px)\",                   transition = \"opacity 0.3s\"                 )               )             )           )         )       })     )   ) } ButtonBaseDemo()"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/articles/checkbox.html","id":"checkbox","dir":"Articles","previous_headings":"","what":"Checkbox","title":"Checkbox","text":"Checkboxes allow user select one items set. Checkboxes can used turn option . multiple options appearing list, can preserve space using checkboxes instead /switches. single option, avoid using checkbox use /switch instead.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/articles/checkbox.html","id":"basic-checkboxes","dir":"Articles","previous_headings":"Checkbox","what":"Basic checkboxes","title":"Checkbox","text":"","code":"import * as React from 'react'; import Checkbox from '@mui/material/Checkbox';  const label = { inputProps: { 'aria-label': 'Checkbox demo' } };  export default function Checkboxes() {   return (     <div>       <Checkbox {...label} defaultChecked />       <Checkbox {...label} />       <Checkbox {...label} disabled />       <Checkbox {...label} disabled checked />     <\/div>   ); } ui <- CssBaseline(   div(     Checkbox.shinyInput(inputId = \"checkbox1\", value = TRUE,                          inputProps = list(\"aria-label\" = \"Checkbox demo\")),     Checkbox.shinyInput(inputId = \"checkbox2\",                          inputProps = list(\"aria-label\" = \"Checkbox demo\")),     Checkbox.shinyInput(inputId = \"checkbox3\",                          inputProps = list(\"aria-label\" = \"Checkbox demo\"),                          disabled = TRUE),     Checkbox.shinyInput(inputId = \"checkbox4\", value = TRUE,                          inputProps = list(\"aria-label\" = \"Checkbox demo\"),                          disabled = TRUE)   ) )  server <- function(input, output, session) {}  shinyApp(ui, server)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/articles/checkbox.html","id":"label","dir":"Articles","previous_headings":"Checkbox","what":"Label","title":"Checkbox","text":"can provide label Checkbox thanks FormControlLabel component.","code":"import * as React from 'react'; import FormGroup from '@mui/material/FormGroup'; import FormControlLabel from '@mui/material/FormControlLabel'; import Checkbox from '@mui/material/Checkbox';  export default function CheckboxLabels() {   return (     <FormGroup>       <FormControlLabel control={<Checkbox defaultChecked />} label=\"Label\" />       <FormControlLabel required control={<Checkbox />} label=\"Required\" />       <FormControlLabel disabled control={<Checkbox />} label=\"Disabled\" />     <\/FormGroup>   ); } ui <- CssBaseline(   FormGroup(     FormControlLabel(       control = Checkbox.shinyInput(inputId = \"labeledCheckbox1\", value = TRUE),       label = \"Label\"     ),     FormControlLabel(       required = TRUE,       control = Checkbox.shinyInput(inputId = \"labeledCheckbox2\"),       label = \"Required\"     ),     FormControlLabel(       disabled = TRUE,       control = Checkbox.shinyInput(inputId = \"labeledCheckbox3\"),       label = \"Disabled\"     )   ) )  server <- function(input, output, session) {}  shinyApp(ui, server)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/articles/checkbox.html","id":"size","dir":"Articles","previous_headings":"Checkbox","what":"Size","title":"Checkbox","text":"Use size prop customize font size svg icons change size checkboxes.","code":"import * as React from 'react'; import Checkbox from '@mui/material/Checkbox';  const label = { inputProps: { 'aria-label': 'Checkbox demo' } };  export default function SizeCheckboxes() {   return (     <div>       <Checkbox {...label} defaultChecked size=\"small\" />       <Checkbox {...label} defaultChecked />       <Checkbox         {...label}         defaultChecked         sx={{ '& .MuiSvgIcon-root': { fontSize: 28 } }}       />     <\/div>   ); } ui <- CssBaseline(   div(     Checkbox.shinyInput(       inputId = \"sizeCheckbox1\",        value = TRUE,       size = \"small\",       inputProps = list(\"aria-label\" = \"Checkbox demo\")     ),     Checkbox.shinyInput(       inputId = \"sizeCheckbox2\",        value = TRUE,       inputProps = list(\"aria-label\" = \"Checkbox demo\")     ),     Checkbox.shinyInput(       inputId = \"sizeCheckbox3\",        value = TRUE,       inputProps = list(\"aria-label\" = \"Checkbox demo\"),       sx = list(\"& .MuiSvgIcon-root\" = list(fontSize = 28))     )   ) )  server <- function(input, output, session) {}  shinyApp(ui, server)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/articles/checkbox.html","id":"color","dir":"Articles","previous_headings":"Checkbox","what":"Color","title":"Checkbox","text":"","code":"import * as React from 'react'; import { pink } from '@mui/material/colors'; import Checkbox from '@mui/material/Checkbox';  const label = { inputProps: { 'aria-label': 'Checkbox demo' } };  export default function ColorCheckboxes() {   return (     <div>       <Checkbox {...label} defaultChecked />       <Checkbox {...label} defaultChecked color=\"secondary\" />       <Checkbox {...label} defaultChecked color=\"success\" />       <Checkbox {...label} defaultChecked color=\"default\" />       <Checkbox         {...label}         defaultChecked         sx={{           color: pink[800],           '&.Mui-checked': {             color: pink[600],           },         }}       />     <\/div>   ); } ui <- CssBaseline(   div(     Checkbox.shinyInput(       inputId = \"colorCheckbox1\",        value = TRUE,       inputProps = list(\"aria-label\" = \"Checkbox demo\")     ),     Checkbox.shinyInput(       inputId = \"colorCheckbox2\",        value = TRUE,       color = \"secondary\",       inputProps = list(\"aria-label\" = \"Checkbox demo\")     ),     Checkbox.shinyInput(       inputId = \"colorCheckbox3\",        value = TRUE,       color = \"success\",       inputProps = list(\"aria-label\" = \"Checkbox demo\")     ),     Checkbox.shinyInput(       inputId = \"colorCheckbox4\",        value = TRUE,       color = \"default\",       inputProps = list(\"aria-label\" = \"Checkbox demo\")     ),     Checkbox.shinyInput(       inputId = \"colorCheckbox5\",        value = TRUE,       inputProps = list(\"aria-label\" = \"Checkbox demo\"),       sx = list(         color = \"#ad1457\", # pink[800] equivalent         \"&.Mui-checked\" = list(           color = \"#ec407a\" # pink[600] equivalent         )       )     )   ) )  server <- function(input, output, session) {}  shinyApp(ui, server)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/articles/checkbox.html","id":"icon","dir":"Articles","previous_headings":"Checkbox","what":"Icon","title":"Checkbox","text":"","code":"import * as React from 'react'; import Checkbox from '@mui/material/Checkbox'; import FavoriteBorder from '@mui/icons-material/FavoriteBorder'; import Favorite from '@mui/icons-material/Favorite'; import BookmarkBorderIcon from '@mui/icons-material/BookmarkBorder'; import BookmarkIcon from '@mui/icons-material/Bookmark';  const label = { inputProps: { 'aria-label': 'Checkbox demo' } };  export default function IconCheckboxes() {   return (     <div>       <Checkbox {...label} icon={<FavoriteBorder />} checkedIcon={<Favorite />} />       <Checkbox         {...label}         icon={<BookmarkBorderIcon />}         checkedIcon={<BookmarkIcon />}       />     <\/div>   ); } ui <- CssBaseline(   div(     Checkbox.shinyInput(       inputId = \"iconCheckbox1\",       inputProps = list(\"aria-label\" = \"Checkbox demo\"),       icon = shiny::icon(\"heart\"),       checkedIcon = shiny::icon(\"heart\", class = \"fa-solid\")     ),     Checkbox.shinyInput(       inputId = \"iconCheckbox2\",       inputProps = list(\"aria-label\" = \"Checkbox demo\"),       icon = shiny::icon(\"bookmark\"),       checkedIcon = shiny::icon(\"bookmark\", class = \"fa-solid\")     )   ) )   server <- function(input, output, session) {}  shinyApp(ui, server)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/articles/checkbox.html","id":"controlled","dir":"Articles","previous_headings":"Checkbox","what":"Controlled","title":"Checkbox","text":"can control checkbox checked onChange props:","code":"import * as React from 'react'; import Checkbox from '@mui/material/Checkbox';  export default function ControlledCheckbox() {   const [checked, setChecked] = React.useState(true);    const handleChange = (event) => {     setChecked(event.target.checked);   };    return (     <Checkbox       checked={checked}       onChange={handleChange}       inputProps={{ 'aria-label': 'controlled' }}     />   ); } ui <- shinyMaterialUIPage(   Checkbox.shinyInput(     inputId = \"controlledCheckbox\",     value = TRUE,     inputProps = list(\"aria-label\" = \"controlled\")   ) )  server <- function(input, output, session) {   observeEvent(input$controlledCheckbox, {     # Handle the checkbox value change     print(paste(\"Checkbox value:\", input$controlledCheckbox))   }) }  shinyApp(ui, server)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/articles/checkbox.html","id":"indeterminate","dir":"Articles","previous_headings":"Checkbox","what":"Indeterminate","title":"Checkbox","text":"checkbox input can two states form: checked unchecked. either submits value doesn’t. Visually, three states checkbox can : checked, unchecked, indeterminate. can change indeterminate icon using indeterminateIcon prop. indeterminate set, value checked prop impacts form submitted values. accessibility UX implications.","code":"import * as React from 'react'; import Box from '@mui/material/Box'; import Checkbox from '@mui/material/Checkbox'; import FormControlLabel from '@mui/material/FormControlLabel';  export default function IndeterminateCheckbox() {   const [checked, setChecked] = React.useState([true, false]);    const handleChange1 = (event) => {     setChecked([event.target.checked, event.target.checked]);   };    const handleChange2 = (event) => {     setChecked([event.target.checked, checked[1]]);   };    const handleChange3 = (event) => {     setChecked([checked[0], event.target.checked]);   };    const children = (     <Box sx={{ display: 'flex', flexDirection: 'column', ml: 3 }}>       <FormControlLabel         label=\"Child 1\"         control={<Checkbox checked={checked[0]} onChange={handleChange2} />}       />       <FormControlLabel         label=\"Child 2\"         control={<Checkbox checked={checked[1]} onChange={handleChange3} />}       />     <\/Box>   );    return (     <div>       <FormControlLabel         label=\"Parent\"         control={           <Checkbox             checked={checked[0] && checked[1]}             indeterminate={checked[0] !== checked[1]}             onChange={handleChange1}           />         }       />       {children}     <\/div>   ); } ui <- shinyMaterialUIPage(   div(     FormControlLabel(       label = \"Parent\",       control = Checkbox.shinyInput(         inputId = \"parentCheckbox\",         indeterminate = TRUE # Will be controlled by server logic       )     ),     Box(       sx = list(display = \"flex\", flexDirection = \"column\", ml = 3),       FormControlLabel(         label = \"Child 1\",         control = Checkbox.shinyInput(inputId = \"childCheckbox1\", value = TRUE)       ),       FormControlLabel(         label = \"Child 2\",         control = Checkbox.shinyInput(inputId = \"childCheckbox2\", value = FALSE)       )     )   ) )  server <- function(input, output, session) {   # Initialize state   checkState <- reactiveVal(c(TRUE, FALSE))      # Watch parent checkbox   observeEvent(input$parentCheckbox, {     newState <- c(input$parentCheckbox, input$parentCheckbox)     checkState(newState)          # Update children     updateCheckbox.shinyInput(session, \"childCheckbox1\", value = newState[1])     updateCheckbox.shinyInput(session, \"childCheckbox2\", value = newState[2])   })      # Watch child 1 checkbox   observeEvent(input$childCheckbox1, {     newState <- c(input$childCheckbox1, checkState()[2])     checkState(newState)          # Update parent indeterminate state     parentChecked <- all(newState)     parentIndeterminate <- newState[1] != newState[2]          updateCheckbox.shinyInput(       session, \"parentCheckbox\",        value = parentChecked,       indeterminate = parentIndeterminate     )   })      # Watch child 2 checkbox   observeEvent(input$childCheckbox2, {     newState <- c(checkState()[1], input$childCheckbox2)     checkState(newState)          # Update parent indeterminate state     parentChecked <- all(newState)     parentIndeterminate <- newState[1] != newState[2]          updateCheckbox.shinyInput(       session, \"parentCheckbox\",        value = parentChecked,       indeterminate = parentIndeterminate     )   }) }  shinyApp(ui, server)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/articles/checkbox.html","id":"formgroup","dir":"Articles","previous_headings":"Checkbox","what":"FormGroup","title":"Checkbox","text":"FormGroup helpful wrapper used group selection control components. can display error","code":"import * as React from 'react'; import Box from '@mui/material/Box'; import FormLabel from '@mui/material/FormLabel'; import FormControl from '@mui/material/FormControl'; import FormGroup from '@mui/material/FormGroup'; import FormControlLabel from '@mui/material/FormControlLabel'; import FormHelperText from '@mui/material/FormHelperText'; import Checkbox from '@mui/material/Checkbox';  export default function CheckboxesGroup() {   const [state, setState] = React.useState({     gilad: true,     jason: false,     antoine: false,   });    const handleChange = (event) => {     setState({       ...state,       [event.target.name]: event.target.checked,     });   };    const { gilad, jason, antoine } = state;   const error = [gilad, jason, antoine].filter((v) => v).length !== 2;    return (     <Box sx={{ display: 'flex' }}>       <FormControl sx={{ m: 3 }} component=\"fieldset\" variant=\"standard\">         <FormLabel component=\"legend\">Assign responsibility<\/FormLabel>         <FormGroup>           <FormControlLabel             control={               <Checkbox checked={gilad} onChange={handleChange} name=\"gilad\" />             }             label=\"Gilad Gray\"           />           <FormControlLabel             control={               <Checkbox checked={jason} onChange={handleChange} name=\"jason\" />             }             label=\"Jason Killian\"           />           <FormControlLabel             control={               <Checkbox checked={antoine} onChange={handleChange} name=\"antoine\" />             }             label=\"Antoine Llorca\"           />         <\/FormGroup>         <FormHelperText>Be careful<\/FormHelperText>       <\/FormControl>       <FormControl         required         error={error}         component=\"fieldset\"         sx={{ m: 3 }}         variant=\"standard\"       >         <FormLabel component=\"legend\">Pick two<\/FormLabel>         <FormGroup>           <FormControlLabel             control={               <Checkbox checked={gilad} onChange={handleChange} name=\"gilad\" />             }             label=\"Gilad Gray\"           />           <FormControlLabel             control={               <Checkbox checked={jason} onChange={handleChange} name=\"jason\" />             }             label=\"Jason Killian\"           />           <FormControlLabel             control={               <Checkbox checked={antoine} onChange={handleChange} name=\"antoine\" />             }             label=\"Antoine Llorca\"           />         <\/FormGroup>         <FormHelperText>You can display an error<\/FormHelperText>       <\/FormControl>     <\/Box>   ); } ui <- shinyMaterialUIPage(   Box(     sx = list(display = \"flex\"),     FormControl(       sx = list(m = 3),       component = \"fieldset\",       variant = \"standard\",       FormLabel(component = \"legend\", \"Assign responsibility\"),       FormGroup(         FormControlLabel(           control = Checkbox.shinyInput(inputId = \"gilad1\", value = TRUE),           label = \"Gilad Gray\"         ),         FormControlLabel(           control = Checkbox.shinyInput(inputId = \"jason1\", value = FALSE),           label = \"Jason Killian\"         ),         FormControlLabel(           control = Checkbox.shinyInput(inputId = \"antoine1\", value = FALSE),           label = \"Antoine Llorca\"         )       ),       FormHelperText(\"Be careful\")     ),     reactOutput(\"uiForm\")   ) )  server <- function(input, output, session) {   # Reactive to track the state   state <- reactiveValues(     gilad = TRUE,     jason = FALSE,     antoine = FALSE   )      # Update FormControl error state   observe({     # Count selected checkboxes     selectedCount <- sum(c(state$gilad, state$jason, state$antoine))     hasError <- selectedCount != 2          output$uiForm <- renderReact({       FormControl(         required = TRUE,         error = hasError, # This will be dynamically updated in the server         component = \"fieldset\",         sx = list(m = 3),         variant = \"standard\",         FormLabel(component = \"legend\", \"Pick two\"),         FormGroup(           FormControlLabel(             control = Checkbox.shinyInput(inputId = \"gilad2\", value = TRUE),             label = \"Gilad Gray\"           ),           FormControlLabel(             control = Checkbox.shinyInput(inputId = \"jason2\", value = FALSE),             label = \"Jason Killian\"           ),           FormControlLabel(             control = Checkbox.shinyInput(inputId = \"antoine2\", value = FALSE),             label = \"Antoine Llorca\"           )         ),         FormHelperText(\"You can display an error\")       )     })   })      # Watch gilad checkboxes   observeEvent(input$gilad1, {     state$gilad <- input$gilad1     updateCheckbox.shinyInput(session, \"gilad2\", value = input$gilad1)   })      observeEvent(input$gilad2, {     state$gilad <- input$gilad2     updateCheckbox.shinyInput(session, \"gilad1\", value = input$gilad2)   })      # Watch jason checkboxes   observeEvent(input$jason1, {     state$jason <- input$jason1     updateCheckbox.shinyInput(session, \"jason2\", value = input$jason1)   })      observeEvent(input$jason2, {     state$jason <- input$jason2     updateCheckbox.shinyInput(session, \"jason1\", value = input$jason2)   })      # Watch antoine checkboxes   observeEvent(input$antoine1, {     state$antoine <- input$antoine1     updateCheckbox.shinyInput(session, \"antoine2\", value = input$antoine1)   })      observeEvent(input$antoine2, {     state$antoine <- input$antoine2     updateCheckbox.shinyInput(session, \"antoine1\", value = input$antoine2)   }) }  shinyApp(ui, server)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/articles/checkbox.html","id":"label-placement","dir":"Articles","previous_headings":"Checkbox","what":"Label placement","title":"Checkbox","text":"can change placement label:","code":"import * as React from 'react'; import Checkbox from '@mui/material/Checkbox'; import FormGroup from '@mui/material/FormGroup'; import FormControlLabel from '@mui/material/FormControlLabel'; import FormControl from '@mui/material/FormControl'; import FormLabel from '@mui/material/FormLabel';  export default function FormControlLabelPosition() {   return (     <FormControl component=\"fieldset\">       <FormLabel component=\"legend\">Label placement<\/FormLabel>       <FormGroup aria-label=\"position\" row>         <FormControlLabel           value=\"bottom\"           control={<Checkbox />}           label=\"Bottom\"           labelPlacement=\"bottom\"         />         <FormControlLabel           value=\"end\"           control={<Checkbox />}           label=\"End\"           labelPlacement=\"end\"         />       <\/FormGroup>     <\/FormControl>   ); } ui <- CssBaseline(   FormControl(     component = \"fieldset\",     FormLabel(component = \"legend\", \"Label placement\"),     FormGroup(       `aria-label` = \"position\",        row = TRUE,       FormControlLabel(         value = \"bottom\",         control = Checkbox.shinyInput(inputId = \"bottomPlacement\"),         label = \"Bottom\",         labelPlacement = \"bottom\"       ),       FormControlLabel(         value = \"end\",         control = Checkbox.shinyInput(inputId = \"endPlacement\"),         label = \"End\",         labelPlacement = \"end\"       )     )   ) )  server <- function(input, output, session) {}  shinyApp(ui, server)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/articles/checkbox.html","id":"customization","dir":"Articles","previous_headings":"Checkbox","what":"Customization","title":"Checkbox","text":"example customizing component. can learn overrides documentation page.","code":"import * as React from 'react'; import { styled } from '@mui/material/styles'; import Checkbox from '@mui/material/Checkbox';  const BpIcon = styled('span')(({ theme }) => ({   borderRadius: 3,   width: 16,   height: 16,   boxShadow: 'inset 0 0 0 1px rgba(16,22,26,.2), inset 0 -1px 0 rgba(16,22,26,.1)',   backgroundColor: '#f5f8fa',   backgroundImage: 'linear-gradient(180deg,hsla(0,0%,100%,.8),hsla(0,0%,100%,0))',   '.Mui-focusVisible &': {     outline: '2px auto rgba(19,124,189,.6)',     outlineOffset: 2,   },   'input:hover ~ &': {     backgroundColor: '#ebf1f5',     ...theme.applyStyles('dark', {       backgroundColor: '#30404d',     }),   },   'input:disabled ~ &': {     boxShadow: 'none',     background: 'rgba(206,217,224,.5)',     ...theme.applyStyles('dark', {       background: 'rgba(57,75,89,.5)',     }),   },   ...theme.applyStyles('dark', {     boxShadow: '0 0 0 1px rgb(16 22 26 / 40%)',     backgroundColor: '#394b59',     backgroundImage: 'linear-gradient(180deg,hsla(0,0%,100%,.05),hsla(0,0%,100%,0))',   }), }));  const BpCheckedIcon = styled(BpIcon)({   backgroundColor: '#137cbd',   backgroundImage: 'linear-gradient(180deg,hsla(0,0%,100%,.1),hsla(0,0%,100%,0))',   '&::before': {     display: 'block',     width: 16,     height: 16,     backgroundImage:       \"url(\\\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'%3E%3Cpath\" +       \" fill-rule='evenodd' clip-rule='evenodd' d='M12 5c-.28 0-.53.11-.71.29L7 9.59l-2.29-2.3a1.003 \" +       \"1.003 0 00-1.42 1.42l3 3c.18.18.43.29.71.29s.53-.11.71-.29l5-5A1.003 1.003 0 0012 5z' fill='%23fff'/%3E%3C/svg%3E\\\")\",     content: '\"\"',   },   'input:hover ~ &': {     backgroundColor: '#106ba3',   }, });  // Inspired by blueprintjs function BpCheckbox(props) {   return (     <Checkbox       sx={{ '&:hover': { bgcolor: 'transparent' } }}       disableRipple       color=\"default\"       checkedIcon={<BpCheckedIcon />}       icon={<BpIcon />}       inputProps={{ 'aria-label': 'Checkbox demo' }}       {...props}     />   ); }  export default function CustomizedCheckbox() {   return (     <div>       <BpCheckbox />       <BpCheckbox defaultChecked />       <BpCheckbox disabled />     <\/div>   ); } # For the customized checkbox, we'll use ThemeProvider to create a custom theme # TODO"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/articles/dashboard-basic.html","id":"horizontal-dashboard","dir":"Articles","previous_headings":"","what":"Horizontal dashboard","title":"Basic Dashboarding","text":"","code":"library(shiny) library(shinyMaterialUI)  Header <- TabContext.shinyInput(   inputId = \"context\",   value = \"1\",   Box(sx = list(borderBottom = 1, borderColor = 'divider'),       TabList.shinyInput(         inputId = \"tabList\",         value = \"1\",         Tab(label=\"Item One\", value = \"1\"),         Tab(label=\"Item Two\", value = \"2\"),         Tab(label=\"Item Three\", value = \"3\")       )   ),   TabPanel.shinyInput(inputId = \"tab1\", value = \"1\", \"Content 1\"),   TabPanel.shinyInput(inputId = \"tab2\", value = \"2\", \"Content 2\"),   TabPanel.shinyInput(inputId = \"tab3\", value = \"3\", \"Content 3\") )  ui <- shinyMaterialUIPage(   suppressBootstrap = FALSE,   Header )  server <- function(input, output) {   observeEvent(input$tabList, {     updateTabContext.shinyInput(inputId = \"context\", value = input$tabList)   }) }  if (interactive()) {   shinyApp(ui = ui, server = server) }"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/articles/dashboard-basic.html","id":"vertical-dashboard","dir":"Articles","previous_headings":"","what":"Vertical dashboard","title":"Basic Dashboarding","text":"","code":"library(shiny) library(shinyMaterialUI)  Sidebar <- TabContext.shinyInput(   inputId = \"context\",   value = \"1\",   Stack(     direction=\"row\",      spacing = 2,      TabList.shinyInput(       inputId = \"tabList\",       orientation = \"vertical\",       value = \"1\",       #Typography(\"Inputs\", m = 1),       Tab(label=\"Item One\", value = \"1\"),       Tab(label=\"Item Two\", value = \"2\"),       Tab(label=\"Item Three\", value = \"3\")     ),     TabPanel.shinyInput(inputId = \"tab1\", value = \"1\", \"Content 1\"),     TabPanel.shinyInput(inputId = \"tab2\", value = \"2\", \"Content 2\"),     TabPanel.shinyInput(inputId = \"tab3\", value = \"3\", \"Content 3\")   ) )  Header <- AppBar(   position = \"static\",   Toolbar(     Typography(\"Dashboard\", variant = \"h5\", component = \"div\", sx = list(flexGrow = 1))   ) )  ui <- shinyMaterialUIPage(   suppressBootstrap = FALSE,   CssBaseline(     Header,     Sidebar   ) )  server <- function(input, output) {   observeEvent(input$tabList, {     updateTabContext.shinyInput(inputId = \"context\", value = input$tabList)   }) }  if (interactive()) {   shinyApp(ui = ui, server = server) }"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/articles/dashboard-basic.html","id":"advanced-dashboard","dir":"Articles","previous_headings":"","what":"Advanced dashboard","title":"Basic Dashboarding","text":"Reproduction official MUI’s dashboard template: https://github.com/lgnbhl/shinyMaterialUI/tree/main/inst/examples/dashboard","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/articles/rating.html","id":"controlled","dir":"Articles","previous_headings":"","what":"Controlled","title":"Rating","text":"","code":"import * as React from 'react'; import Box from '@mui/material/Box'; import Rating from '@mui/material/Rating'; import Typography from '@mui/material/Typography';  export default function BasicRating() {   const [value, setValue] = React.useState<number | null>(2);    return (     <Box sx={{ '& > legend': { mt: 2 } }}>       <Typography component=\"legend\">Controlled<\/Typography>       <Rating         name=\"simple-controlled\"         value={value}         onChange={(event, newValue) => {           setValue(newValue);         }}       />       <Typography component=\"legend\">Uncontrolled<\/Typography>       <Rating         name=\"simple-uncontrolled\"         onChange={(event, newValue) => {           console.log(newValue);         }}         defaultValue={2}       />       <Typography component=\"legend\">Read only<\/Typography>       <Rating name=\"read-only\" value={value} readOnly />       <Typography component=\"legend\">Disabled<\/Typography>       <Rating name=\"disabled\" value={value} disabled />       <Typography component=\"legend\">No rating given<\/Typography>       <Rating name=\"no-value\" value={null} />     <\/Box>   ); } library(shinyMaterialUI) library(shiny)  ui <- shinyMaterialUIPage(   Box(     sx = list('& > legend' = list(mt = 2)),          Typography(component = \"legend\", \"Controlled\"),     Rating.shinyInput(       inputId = \"simple_controlled\",       value = 2     ),          Typography(component = \"legend\", \"Uncontrolled\"),     Rating.shinyInput(       inputId = \"simple_uncontrolled\",       value = 2     ),          Typography(component = \"legend\", \"Read only\"),     Rating(       name = \"read-only\",        value = 2,        readOnly = TRUE     ),          Typography(component = \"legend\", \"Disabled\"),     Rating(       name = \"disabled\",        value = 2,        disabled = TRUE     ),          Typography(component = \"legend\", \"No rating given\"),     Rating(       name = \"no-value\",        value = NULL     )   ) )  server <- function(input, output, session) {   observeEvent(input$simple_controlled, {     # Handle the rating value change   })      observeEvent(input$simple_uncontrolled, {     # Print the new value to console     print(input$simple_uncontrolled)   }) }  shinyApp(ui, server)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/articles/rating.html","id":"rating-precision","dir":"Articles","previous_headings":"","what":"Rating precision","title":"Rating","text":"","code":"import * as React from 'react'; import Rating from '@mui/material/Rating'; import Stack from '@mui/material/Stack';  export default function HalfRating() {   return (     <Stack spacing={1}>       <Rating name=\"half-rating\" defaultValue={2.5} precision={0.5} />       <Rating name=\"half-rating-read\" defaultValue={2.5} precision={0.5} readOnly />     <\/Stack>   ); } library(shinyMaterialUI)  CssBaseline(   Stack(     spacing = 1,     Rating(       value = 2.5,       precision = 0.5     ),     Rating(       name = \"half-rating-read\",       value = 2.5,       precision = 0.5,       readOnly = TRUE     )   ) )"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/articles/rating.html","id":"hover-feedback","dir":"Articles","previous_headings":"","what":"Hover feedback","title":"Rating","text":"can display label hover help user pick correct rating value. demo uses onChangeActive prop.","code":"import * as React from 'react'; import Rating from '@mui/material/Rating'; import Box from '@mui/material/Box'; import StarIcon from '@mui/icons-material/Star';  const labels: { [index: string]: string } = {   0.5: 'Useless',   1: 'Useless+',   1.5: 'Poor',   2: 'Poor+',   2.5: 'Ok',   3: 'Ok+',   3.5: 'Good',   4: 'Good+',   4.5: 'Excellent',   5: 'Excellent+', };  function getLabelText(value: number) {   return `${value} Star${value !== 1 ? 's' : ''}, ${labels[value]}`; }  export default function HoverRating() {   const [value, setValue] = React.useState<number | null>(2);   const [hover, setHover] = React.useState(-1);    return (     <Box sx={{ width: 200, display: 'flex', alignItems: 'center' }}>       <Rating         name=\"hover-feedback\"         value={value}         precision={0.5}         getLabelText={getLabelText}         onChange={(event, newValue) => {           setValue(newValue);         }}         onChangeActive={(event, newHover) => {           setHover(newHover);         }}         emptyIcon={<StarIcon style={{ opacity: 0.55 }} fontSize=\"inherit\" />}       />       {value !== null && (         <Box sx={{ ml: 2 }}>{labels[hover !== -1 ? hover : value]}<\/Box>       )}     <\/Box>   ); } # Hover Feedback Example labels <- list(   \"0.5\" = \"Useless\",   \"1\" = \"Useless+\",   \"1.5\" = \"Poor\",   \"2\" = \"Poor+\",   \"2.5\" = \"Ok\",   \"3\" = \"Ok+\",   \"3.5\" = \"Good\",   \"4\" = \"Good+\",   \"4.5\" = \"Excellent\",   \"5\" = \"Excellent+\" )  ui <- shinyMaterialUIPage(   div(     Rating.shinyInput(       inputId = \"hover_feedback\",       value = 2,       precision = 0.5     ),     # Note: Hover feedback is more complex to replicate exactly in Shiny     textOutput(\"hover_label\")   ) )  server <- function(input, output, session) {   output$hover_label <- renderText({     req(input$hover_feedback)     labels[[as.character(input$hover_feedback)]]   }) }  shinyApp(ui, server)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/articles/rating.html","id":"sizes","dir":"Articles","previous_headings":"","what":"Sizes","title":"Rating","text":"larger smaller ratings use size prop.","code":"import * as React from 'react'; import Rating from '@mui/material/Rating'; import Stack from '@mui/material/Stack';  export default function RatingSize() {   return (     <Stack spacing={1}>       <Rating name=\"size-small\" defaultValue={2} size=\"small\" />       <Rating name=\"size-medium\" defaultValue={2} />       <Rating name=\"size-large\" defaultValue={2} size=\"large\" />     <\/Stack>   ); } library(shinyMaterialUI)  CssBaseline(   Stack(     spacing = 1,     Rating(       value = 2,       size = \"small\"     ),     Rating(       value = 2     ),     Rating(       value = 2,       size = \"large\"     )   ) )"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/articles/rating.html","id":"customization","dir":"Articles","previous_headings":"","what":"Customization","title":"Rating","text":"examples customizing component. can learn overrides documentation page.","code":"import * as React from 'react'; import { styled } from '@mui/material/styles'; import Box from '@mui/material/Box'; import Rating from '@mui/material/Rating'; import FavoriteIcon from '@mui/icons-material/Favorite'; import FavoriteBorderIcon from '@mui/icons-material/FavoriteBorder'; import Typography from '@mui/material/Typography';  const StyledRating = styled(Rating)({   '& .MuiRating-iconFilled': {     color: '#ff6d75',   },   '& .MuiRating-iconHover': {     color: '#ff3d47',   }, });  export default function CustomizedRating() {   return (     <Box sx={{ '& > legend': { mt: 2 } }}>       <Typography component=\"legend\">Custom icon and color<\/Typography>       <StyledRating         name=\"customized-color\"         defaultValue={2}         getLabelText={(value: number) => `${value} Heart${value !== 1 ? 's' : ''}`}         precision={0.5}         icon={<FavoriteIcon fontSize=\"inherit\" />}         emptyIcon={<FavoriteBorderIcon fontSize=\"inherit\" />}       />       <Typography component=\"legend\">10 stars<\/Typography>       <Rating name=\"customized-10\" defaultValue={2} max={10} />     <\/Box>   ); } shinyMaterialUIPage(   CssBaseline(     ThemeProvider(       theme = list(         components = list(           MuiRating = list(             styleOverrides = list(               iconFilled = list(                 color = \"#ff6d75\"               ),               iconHover = list(                 color = \"#ff3d47\"               )             )           )         )       ),       Box(         sx = list('& > legend' = list(mt = 2)),         Typography(\"Custom icon and color\", component = \"legend\"),         Rating(           name = \"customized_color\",           defaultValue = 2,           precision = 0.5,           icon = shiny::icon(\"heart\"),           emptyIcon = shiny::icon(\"heart\", class = \"far\")         ),         Typography(\"10 stars\", component = \"legend\"),         Rating(name = \"customized_10\", defaultValue = 2, max = 10)       )     )   ) )"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/articles/rating.html","id":"radio-group","dir":"Articles","previous_headings":"","what":"Radio group","title":"Rating","text":"rating implemented radio group, set highlightSelectedOnly restore natural behavior.","code":"import * as React from 'react'; import { styled } from '@mui/material/styles'; import Rating, { IconContainerProps } from '@mui/material/Rating'; import SentimentVeryDissatisfiedIcon from '@mui/icons-material/SentimentVeryDissatisfied'; import SentimentDissatisfiedIcon from '@mui/icons-material/SentimentDissatisfied'; import SentimentSatisfiedIcon from '@mui/icons-material/SentimentSatisfied'; import SentimentSatisfiedAltIcon from '@mui/icons-material/SentimentSatisfiedAltOutlined'; import SentimentVerySatisfiedIcon from '@mui/icons-material/SentimentVerySatisfied';  const StyledRating = styled(Rating)(({ theme }) => ({   '& .MuiRating-iconEmpty .MuiSvgIcon-root': {     color: theme.palette.action.disabled,   }, }));  const customIcons: {   [index: string]: {     icon: React.ReactElement<unknown>;     label: string;   }; } = {   1: {     icon: <SentimentVeryDissatisfiedIcon color=\"error\" />,     label: 'Very Dissatisfied',   },   2: {     icon: <SentimentDissatisfiedIcon color=\"error\" />,     label: 'Dissatisfied',   },   3: {     icon: <SentimentSatisfiedIcon color=\"warning\" />,     label: 'Neutral',   },   4: {     icon: <SentimentSatisfiedAltIcon color=\"success\" />,     label: 'Satisfied',   },   5: {     icon: <SentimentVerySatisfiedIcon color=\"success\" />,     label: 'Very Satisfied',   }, };  function IconContainer(props: IconContainerProps) {   const { value, ...other } = props;   return <span {...other}>{customIcons[value].icon}<\/span>; }  export default function RadioGroupRating() {   return (     <StyledRating       name=\"highlight-selected-only\"       defaultValue={2}       IconContainerComponent={IconContainer}       getLabelText={(value: number) => customIcons[value].label}       highlightSelectedOnly     />   ); } ui <- shinyMaterialUIPage(   CssBaseline(     ThemeProvider(       theme = list(         components = list(           MuiRating = list(             styleOverrides = list(               iconEmpty = list(                 '& .MuiSvgIcon-root' = list(                   color = \"rgba(0, 0, 0, 0.26)\"                 )               )             )           )         )       ),       Rating(         name = \"highlight_selected_only\",         defaultValue = 2,         highlightSelectedOnly = TRUE,         # Custom icons would need to be implemented with custom IconContainerComponent         # For simplicity, using standard emoticon icons         icon = shiny::icon(\"smile\"),         emptyIcon = shiny::icon(\"meh\")       )     )   ) )  server <- function(input, output, session) {   observeEvent(input$radio_group_rating, {     # Handle rating change   }) }  shinyApp(ui, server)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/articles/routing.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Using a router","text":"use pages shinyMaterialUI, might need use router service. document shows examples using reactRouter shiny.router R packages.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/articles/routing.html","id":"examples-using-reactrouter","dir":"Articles","previous_headings":"","what":"Examples using {reactRouter}","title":"Using a router","text":"example using reactRouter client routing (server): example reactRouter R Shiny app (server):","code":"# install.packages(\"reactRouter\") library(reactRouter) library(shinyMaterialUI) library(shiny)  reactRouter::HashRouter(   AppBar(     position = \"static\",     Toolbar(       Typography(         variant = \"h6\",         component = \"div\",         \"shinyMaterialUI\"       ),       reactRouter::NavLink(         to = \"/\",         style = JS('({isActive}) => { return isActive ? {color: \"white\"} : {color: \"white\"}; }'),         Button(           color = \"inherit\",           \"Home\"         )       ),       reactRouter::NavLink(         to = \"/analysis\",         style = JS('({isActive}) => { return isActive ? {color: \"white\"} : {color: \"white\"}; }'),         Button(           color = \"inherit\",           \"Analysis\"         )       )     )   ),   Box(     sx = list(p = 3),     reactRouter::Routes(       reactRouter::Route(         path = \"/\",         element = div(           tags$h3(\"Home page\"),           p(\"A basic example of reactRouter with shinyMaterialUI.\"),           p(\"Content home\")         )       ),       reactRouter::Route(         path = \"/analysis\",         element = div(           tags$h3(\"Analysis\"),           p(\"Content analysis\")           )       ),       reactRouter::Route(path = \"*\", element = div(tags$p(\"Error 404\")))     )   ) ) # install.packages(\"reactRouter\") library(reactRouter) library(shinyMaterialUI) library(shiny)  ui <- shinyMaterialUIPage(   reactRouter::HashRouter(     CssBaseline(     Typography(\"reactRouter with shinyMaterialUI\", variant = \"h5\", m = 2),     Stack(       direction = \"row\", spacing = 2, p = 2,       Paper(         MenuList(           reactRouter::NavLink.shinyInput(             inputId = \"page_home\",             to = \"/\",             style = JS('({isActive}) => { return isActive ? {color: \"red\", textDecoration:\"none\"} : { textDecoration: \"none\" }; }'),             MenuItem(               \"home\"             )           ),           br(),           reactRouter::NavLink.shinyInput(             inputId = \"page_analysis\",             to = \"/analysis\",             style = JS('({isActive}) => { return isActive ? {color: \"red\", textDecoration: \"none\"} : { textDecoration: \"none\" }; }'),             MenuItem(               \"Analysis\"             )           ),           br(),           reactRouter::NavLink.shinyInput(             inputId = \"page_about\",             to = \"/about\",             style = JS('({ isActive }) => { return isActive ? { color: \"red\", textDecoration: \"none\" } : { textDecoration: \"none\" }; }'),             MenuItem(               \"About\"             )           )         )       ),       Box(         reactRouter::Routes(           reactRouter::Route(             path = \"/\",             element = div(               tags$h1(\"Home page\"),               tags$h4(\"A basic example of reactRouter with shinyMaterialUI.\"),               uiOutput(outputId = \"contentHome\")             )           ),           reactRouter::Route(             path = \"/analysis\",             element = div(               tags$h1(\"Analysis\"),               uiOutput(outputId = \"contentAnalysis\")               )           ),           reactRouter::Route(             path = \"/about\",             element = uiOutput(outputId = \"contentAbout\")           ),           reactRouter::Route(path = \"*\", element = div(tags$p(\"Error 404\")))         )       )     )     )   ) )  server <- function(input, output, session) {      # Content for Home page   output$contentHome <- renderUI({     p(\"Content home\")   }) |>      shiny::bindEvent(\"page_home\")      # Content for Analysis page   output$contentAnalysis <- renderUI({     p(\"Content analysis\")   }) |>      shiny::bindEvent(\"page_analysis\")      # Content for About page   output$contentAbout <- renderUI({     div(       tags$h1(\"About\"),       p(\"Content about\")     )   }) |>      shiny::bindEvent(\"page_about\")  }  shinyApp(ui, server)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/articles/routing.html","id":"example-using-shiny-router","dir":"Articles","previous_headings":"","what":"Example using {shiny.router}","title":"Using a router","text":"example using shiny.router R package. Note using CssBaseline() top level doesn’t work shiny.router. CssBaseline() used lower level, showed .","code":"library(shiny) library(shinyMaterialUI) library(shiny.router)  Header <- CssBaseline(   Box(     sx = list(flexGrow = 1),     AppBar(       position = \"static\",       Toolbar(         IconButton(           shiny::icon(\"home\"),           href = route_link(\"#!/\"),           size = \"large\",           edge = \"start\",           color = \"inherit\",           'aria-label' = \"home\",           sx = list(mr = 2)         ),         Link(           \"Other\",           href = route_link(\"#!/other\"),           underline = \"none\",           edge = \"start\",           color = \"inherit\",           'aria-label' = \"other\",           sx = list(mr = 2)         )       )     )   ) )  Main <- CssBaseline(   Box(     sx = list(display = \"flex\", alignItems = \"center\", p = 2),     Typography(\"Main content.\")   ) )  otherPage <- CssBaseline(   Box(     sx = list(display = \"flex\", alignItems = \"center\", p = 2),     Typography(\"Other content.\")   ) )  ui <- shinyMaterialUIPage( # using CssBaseline() here doesn't work with shiny.router   Header,   router_ui(     route(\"/\", Main),     route(\"other\", otherPage)   ) )  server <- function(input, output, session) {   router_server() }  shinyApp(ui, server)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/articles/slider.html","id":"continuous-sliders","dir":"Articles","previous_headings":"","what":"Continuous sliders","title":"Slider","text":"Continuous sliders allow users select value along subjective range.","code":"import * as React from 'react'; import Box from '@mui/material/Box'; import Stack from '@mui/material/Stack'; import Slider from '@mui/material/Slider'; import VolumeDown from '@mui/icons-material/VolumeDown'; import VolumeUp from '@mui/icons-material/VolumeUp';  export default function ContinuousSlider() {   const [value, setValue] = React.useState<number>(30);    const handleChange = (event: Event, newValue: number) => {     setValue(newValue);   };    return (     <Box sx={{ width: 200 }}>       <Stack spacing={2} direction=\"row\" sx={{ alignItems: 'center', mb: 1 }}>         <VolumeDown />         <Slider aria-label=\"Volume\" value={value} onChange={handleChange} />         <VolumeUp />       <\/Stack>       <Slider disabled defaultValue={30} aria-label=\"Disabled slider\" />     <\/Box>   ); } ui <- shinyMaterialUIPage(   Box(sx = list(width = 200),     Stack(spacing = 2, direction = \"row\", sx = list(alignItems = \"center\", mb = 1),       shiny::icon(\"volume-down\"),       Slider.shinyInput(inputId = \"volume\", value = 30, \"aria-label\" = \"Volume\"),       shiny::icon(\"volume-up\")     ),     Slider.shinyInput(inputId = \"disabledSlider\", value = 30, disabled = TRUE, \"aria-label\" = \"Disabled slider\")   ) )  server <- function(input, output, session) {   observeEvent(input$volume, {     # Handle the volume value change   }) }  shinyApp(ui, server)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/articles/slider.html","id":"sizes","dir":"Articles","previous_headings":"","what":"Sizes","title":"Slider","text":"smaller slider, use prop size=“small”.","code":"import * as React from 'react'; import Box from '@mui/material/Box'; import Slider from '@mui/material/Slider';  export default function SliderSizes() {   return (     <Box sx={{ width: 300 }}>       <Slider         size=\"small\"         defaultValue={70}         aria-label=\"Small\"         valueLabelDisplay=\"auto\"       />       <Slider defaultValue={50} aria-label=\"Default\" valueLabelDisplay=\"auto\" />     <\/Box>   ); } ui <- CssBaseline(   Box(sx = list(width = 300, mt = 4),     Slider.shinyInput(inputId = \"smallSlider\", value = 70, size = \"small\",                        \"aria-label\" = \"Small\", valueLabelDisplay = \"auto\"),     Slider.shinyInput(inputId = \"defaultSlider\", value = 50,                        \"aria-label\" = \"Default\", valueLabelDisplay = \"auto\")   ) )  server <- function(input, output, session) {}  shinyApp(ui, server)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/articles/slider.html","id":"discrete-sliders","dir":"Articles","previous_headings":"","what":"Discrete sliders","title":"Slider","text":"Discrete sliders can adjusted specific value referencing value indicator. can generate mark step marks={true}.","code":"import * as React from 'react'; import Box from '@mui/material/Box'; import Slider from '@mui/material/Slider';  function valuetext(value: number) {   return `${value}°C`; }  export default function DiscreteSlider() {   return (     <Box sx={{ width: 300 }}>       <Slider         aria-label=\"Temperature\"         defaultValue={30}         getAriaValueText={valuetext}         valueLabelDisplay=\"auto\"         shiftStep={30}         step={10}         marks         min={10}         max={110}       />       <Slider defaultValue={30} step={10} marks min={10} max={110} disabled />     <\/Box>   ); } ui <- CssBaseline(   Box(sx = list(width = 300, mt = 4),     Slider.shinyInput(inputId = \"temperatureSlider\", value = 30,                        \"aria-label\" = \"Temperature\",                        getAriaValueText = JS(\"function(value) { return `${value} °C`; }\"),                       valueLabelDisplay = \"auto\",                       shiftStep = 30,                       step = 10,                       marks = TRUE,                       min = 10,                       max = 110),     Slider.shinyInput(inputId = \"disabledMarksSlider\", value = 30,                        step = 10, marks = TRUE, min = 10, max = 110, disabled = TRUE)   ) )  server <- function(input, output, session) {}  shinyApp(ui, server)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/articles/slider.html","id":"small-steps","dir":"Articles","previous_headings":"","what":"Small steps","title":"Slider","text":"can change default step increment. Make sure adjust shiftStep prop (granularity slider can step using Page /Shift + Arrow /) value divisible step.","code":"import * as React from 'react'; import Box from '@mui/material/Box'; import Slider from '@mui/material/Slider';  function valuetext(value: number) {   return `${value}°C`; }  export default function DiscreteSliderSteps() {   return (     <Box sx={{ width: 300 }}>       <Slider         aria-label=\"Small steps\"         defaultValue={0.00000005}         getAriaValueText={valuetext}         step={0.00000001}         marks         min={-0.00000005}         max={0.0000001}         valueLabelDisplay=\"auto\"       />     <\/Box>   ); } ui <- CssBaseline(   Box(sx = list(width = 300, mt = 4),     Slider.shinyInput(inputId = \"smallStepsSlider\", value = 0.00000005,                        \"aria-label\" = \"Small steps\",                        getAriaValueText = JS(\"function(value) { return `${value} °C`; }\"),                       step = 0.00000001,                       marks = TRUE,                       min = -0.00000005,                       max = 0.0000001,                       valueLabelDisplay = \"auto\")   ) )  server <- function(input, output, session) {}  shinyApp(ui, server)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/articles/slider.html","id":"custom-marks","dir":"Articles","previous_headings":"","what":"Custom marks","title":"Slider","text":"can custom marks providing rich array marks prop.","code":"import * as React from 'react'; import Box from '@mui/material/Box'; import Slider from '@mui/material/Slider';  const marks = [   {     value: 0,     label: '0°C',   },   {     value: 20,     label: '20°C',   },   {     value: 37,     label: '37°C',   },   {     value: 100,     label: '100°C',   }, ];  function valuetext(value: number) {   return `${value}°C`; }  export default function DiscreteSliderMarks() {   return (     <Box sx={{ width: 300 }}>       <Slider         aria-label=\"Custom marks\"         defaultValue={20}         getAriaValueText={valuetext}         step={10}         valueLabelDisplay=\"auto\"         marks={marks}       />     <\/Box>   ); } marks <- list(   list(     value = 0,     label = \"0°C\"   ),   list(     value = 20,     label = \"20°C\"   ),   list(     value = 37,     label = \"37°C\"   ),   list(     value = 100,     label = \"100°C\"   ) )  ui <- CssBaseline(   Box(sx = list(width = 300, mt = 4),     Slider.shinyInput(inputId = \"customMarksSlider\", value = 20,                        \"aria-label\" = \"Custom marks\",                        getAriaValueText = JS(\"function(value) { return `${value} °C`; }\"),                       step = 10,                       valueLabelDisplay = \"auto\",                       marks = marks)   ) )  server <- function(input, output, session) {}  shinyApp(ui, server)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/articles/slider.html","id":"restricted-values","dir":"Articles","previous_headings":"","what":"Restricted values","title":"Slider","text":"can restrict selectable values provided marks prop step={null}.","code":"import * as React from 'react'; import Box from '@mui/material/Box'; import Slider from '@mui/material/Slider';  const marks = [   {     value: 0,     label: '0°C',   },   {     value: 20,     label: '20°C',   },   {     value: 37,     label: '37°C',   },   {     value: 100,     label: '100°C',   }, ];  function valuetext(value: number) {   return `${value}°C`; }  export default function DiscreteSliderValues() {   return (     <Box sx={{ width: 300 }}>       <Slider         aria-label=\"Restricted values\"         defaultValue={20}         getAriaValueText={valuetext}         step={null}         valueLabelDisplay=\"auto\"         marks={marks}       />     <\/Box>   ); } marks <- list(   list(     value = 0,     label = \"0°C\"   ),   list(     value = 20,     label = \"20°C\"   ),   list(     value = 37,     label = \"37°C\"   ),   list(     value = 100,     label = \"100°C\"   ) )  ui <- CssBaseline(   Box(sx = list(width = 300, mt = 4),     Slider.shinyInput(inputId = \"restrictedValuesSlider\", value = 20,                        \"aria-label\" = \"Restricted values\",                        getAriaValueText = JS(\"function(value) { return `${value} °C`; }\"),                       step = NULL,                       valueLabelDisplay = \"auto\",                       marks = marks)   ) )  server <- function(input, output, session) {}  shinyApp(ui, server)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/articles/slider.html","id":"label-always-visible","dir":"Articles","previous_headings":"","what":"Label always visible","title":"Slider","text":"can force thumb label always visible valueLabelDisplay=“”.","code":"import * as React from 'react'; import Box from '@mui/material/Box'; import Slider from '@mui/material/Slider';  const marks = [   {     value: 0,     label: '0°C',   },   {     value: 20,     label: '20°C',   },   {     value: 37,     label: '37°C',   },   {     value: 100,     label: '100°C',   }, ];  function valuetext(value: number) {   return `${value}°C`; }  export default function DiscreteSliderLabel() {   return (     <Box sx={{ width: 300 }}>       <Slider         aria-label=\"Always visible\"         defaultValue={80}         getAriaValueText={valuetext}         step={10}         marks={marks}         valueLabelDisplay=\"on\"       />     <\/Box>   ); } marks <- list(   list(     value = 0,     label = \"0°C\"   ),   list(     value = 20,     label = \"20°C\"   ),   list(     value = 37,     label = \"37°C\"   ),   list(     value = 100,     label = \"100°C\"   ) )  ui <- CssBaseline(   Box(sx = list(width = 300, mt = 4),     Slider.shinyInput(inputId = \"alwaysVisibleSlider\", value = 80,                        \"aria-label\" = \"Always visible\",                        getAriaValueText = JS(\"function(value) { return `${value} °C`; }\"),                       step = 10,                       marks = marks,                       valueLabelDisplay = \"on\")   ) )  server <- function(input, output, session) {}  shinyApp(ui, server)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/articles/slider.html","id":"range-slider","dir":"Articles","previous_headings":"","what":"Range slider","title":"Slider","text":"slider can used set start end range supplying array values value prop.","code":"import * as React from 'react'; import Box from '@mui/material/Box'; import Slider from '@mui/material/Slider';  function valuetext(value: number) {   return `${value}°C`; }  export default function RangeSlider() {   const [value, setValue] = React.useState<number[]>([20, 37]);    const handleChange = (event: Event, newValue: number[]) => {     setValue(newValue);   };    return (     <Box sx={{ width: 300 }}>       <Slider         getAriaLabel={() => 'Temperature range'}         value={value}         onChange={handleChange}         valueLabelDisplay=\"auto\"         getAriaValueText={valuetext}       />     <\/Box>   ); } ui <- shinyMaterialUIPage(   Box(sx = list(width = 300, mt = 4),     Slider.shinyInput(       inputId = \"rangeSlider\",        value = c(20, 37),        getAriaLabel = JS('function() { \"Temperature range\" }'),        valueLabelDisplay = \"auto\",       getAriaValueText = JS(\"function(value) { return `${value} °C`; }\"),     )   ) )  server <- function(input, output, session) {   observeEvent(input$rangeSlider, {     # Handle the range slider value change   }) }  shinyApp(ui, server)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/articles/slider.html","id":"minimum-distance","dir":"Articles","previous_headings":"","what":"Minimum distance","title":"Slider","text":"can enforce minimum distance values onChange event handler. default, move pointer thumb dragging another thumb, active thumb swap hovered thumb. can disable behavior disableSwap prop. want range shift reaching minimum distance, can utilize activeThumb parameter onChange.","code":"import * as React from 'react'; import Box from '@mui/material/Box'; import Slider from '@mui/material/Slider';  function valuetext(value: number) {   return `${value}°C`; }  const minDistance = 10;  export default function MinimumDistanceSlider() {   const [value1, setValue1] = React.useState<number[]>([20, 37]);    const handleChange1 = (event: Event, newValue: number[], activeThumb: number) => {     if (activeThumb === 0) {       setValue1([Math.min(newValue[0], value1[1] - minDistance), value1[1]]);     } else {       setValue1([value1[0], Math.max(newValue[1], value1[0] + minDistance)]);     }   };    const [value2, setValue2] = React.useState<number[]>([20, 37]);    const handleChange2 = (event: Event, newValue: number[], activeThumb: number) => {     if (newValue[1] - newValue[0] < minDistance) {       if (activeThumb === 0) {         const clamped = Math.min(newValue[0], 100 - minDistance);         setValue2([clamped, clamped + minDistance]);       } else {         const clamped = Math.max(newValue[1], minDistance);         setValue2([clamped - minDistance, clamped]);       }     } else {       setValue2(newValue);     }   };    return (     <Box sx={{ width: 300 }}>       <Slider         getAriaLabel={() => 'Minimum distance'}         value={value1}         onChange={handleChange1}         valueLabelDisplay=\"auto\"         getAriaValueText={valuetext}         disableSwap       />       <Slider         getAriaLabel={() => 'Minimum distance shift'}         value={value2}         onChange={handleChange2}         valueLabelDisplay=\"auto\"         getAriaValueText={valuetext}         disableSwap       />     <\/Box>   ); } minDistance <- 10 ui <- shinyMaterialUIPage(   Box(sx = list(width = 300, mt = 4),     Slider.shinyInput(inputId = \"minDistanceSlider1\", value = c(20, 37),                        getAriaLabel = JS('function() { return \"Minimum distance\" }'),                        valueLabelDisplay = \"auto\",                       disableSwap = TRUE),     Slider.shinyInput(inputId = \"minDistanceSlider2\", value = c(20, 37),                        getAriaLabel = JS('function() { return \"Minimum distance shift\" }'),                        valueLabelDisplay = \"auto\",                       disableSwap = TRUE)   ) ) server <- function(input, output, session) {   # Create reactive values to track when updates are in progress   updating <- reactiveValues(slider1 = FALSE, slider2 = FALSE)      # Handler for first slider   observeEvent(input$minDistanceSlider1, {     # Skip if this is an update we triggered     if (updating$slider1) return()          updating$slider1 <- TRUE     on.exit(updating$slider1 <- FALSE)          values <- input$minDistanceSlider1     if (length(values) >= 2) {       # Get active thumb (default to left/0 if NULL)       active <- if (is.null(input$minDistanceSlider1_activeThumb)) 0 else input$minDistanceSlider1_activeThumb              # Calculate new values based on minimum distance       if (active == 0) {         # Left thumb moved - ensure min distance from right         left <- min(values[1], values[2] - minDistance)         updateSlider.shinyInput(session, \"minDistanceSlider1\", value = c(left, values[2]))       } else {         # Right thumb moved - ensure min distance from left         right <- max(values[2], values[1] + minDistance)         updateSlider.shinyInput(session, \"minDistanceSlider1\", value = c(values[1], right))       }     }   })      # Handler for second slider   observeEvent(input$minDistanceSlider2, {     # Skip if this is an update we triggered     if (updating$slider2) return()          updating$slider2 <- TRUE     on.exit(updating$slider2 <- FALSE)          values <- input$minDistanceSlider2     if (length(values) >= 2 && values[2] - values[1] < minDistance) {       # Get active thumb (default to left/0 if NULL)       active <- if (is.null(input$minDistanceSlider2_activeThumb)) 0 else input$minDistanceSlider2_activeThumb              if (active == 0) {         # Left thumb moved - clamp and update right accordingly         left <- min(values[1], 100 - minDistance)         updateSlider.shinyInput(session, \"minDistanceSlider2\", value = c(left, left + minDistance))       } else {         # Right thumb moved - clamp and update left accordingly         right <- max(values[2], minDistance)         updateSlider.shinyInput(session, \"minDistanceSlider2\", value = c(right - minDistance, right))       }     }   }) }  shinyApp(ui, server)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/articles/slider.html","id":"slider-with-input-field","dir":"Articles","previous_headings":"","what":"Slider with input field","title":"Slider","text":"example, input allows discrete value set.","code":"import * as React from 'react'; import { styled } from '@mui/material/styles'; import Box from '@mui/material/Box'; import Grid from '@mui/material/Grid'; import Typography from '@mui/material/Typography'; import Slider from '@mui/material/Slider'; import MuiInput from '@mui/material/Input'; import VolumeUp from '@mui/icons-material/VolumeUp';  const Input = styled(MuiInput)`   width: 42px; `;  export default function InputSlider() {   const [value, setValue] = React.useState(30);    const handleSliderChange = (event: Event, newValue: number) => {     setValue(newValue);   };    const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {     setValue(event.target.value === '' ? 0 : Number(event.target.value));   };    const handleBlur = () => {     if (value < 0) {       setValue(0);     } else if (value > 100) {       setValue(100);     }   };    return (     <Box sx={{ width: 250 }}>       <Typography id=\"input-slider\" gutterBottom>         Volume       <\/Typography>       <Grid container spacing={2} sx={{ alignItems: 'center' }}>         <Grid>           <VolumeUp />         <\/Grid>         <Grid size=\"grow\">           <Slider             value={typeof value === 'number' ? value : 0}             onChange={handleSliderChange}             aria-labelledby=\"input-slider\"           />         <\/Grid>         <Grid>           <Input             value={value}             size=\"small\"             onChange={handleInputChange}             onBlur={handleBlur}             inputProps={{               step: 10,               min: 0,               max: 100,               type: 'number',               'aria-labelledby': 'input-slider',             }}           />         <\/Grid>       <\/Grid>     <\/Box>   ); } ui <- shinyMaterialUIPage(   Box(sx = list(width = 250, mt = 4),     Typography(id = \"input-slider\", gutterBottom = TRUE,       \"Volume\"     ),     Grid(container = TRUE, spacing = 2, sx = list(alignItems = \"center\"),       Grid(         shiny::icon(\"volume-up\")       ),       Grid(size = \"grow\",         Slider.shinyInput(inputId = \"volumeSlider\", value = 30,                           \"aria-labelledby\" = \"input-slider\")       ),       Grid(         Input.shinyInput(inputId = \"volumeInput\", value = 30, size = \"small\",                           inputProps = list(                             step = 10,                             min = 0,                             max = 100,                             type = \"number\",                             \"aria-labelledby\" = \"input-slider\"                           ))       )     )   ) )  server <- function(input, output, session) {   # Update slider when input changes   observeEvent(input$volumeInput, {     value <- if(input$volumeInput == \"\") 0 else as.numeric(input$volumeInput)     # Clamp value between 0 and 100     value <- max(0, min(100, value))     updateSlider.shinyInput(session, \"volumeSlider\", value = value)   })      # Update input when slider changes   observeEvent(input$volumeSlider, {     updateInput.shinyInput(session, \"volumeInput\", value = input$volumeSlider)   }) }  shinyApp(ui, server)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/articles/slider.html","id":"color","dir":"Articles","previous_headings":"","what":"Color","title":"Slider","text":"","code":"import * as React from 'react'; import Box from '@mui/material/Box'; import Slider from '@mui/material/Slider';  function valuetext(value: number) {   return `${value}°C`; }  export default function ColorSlider() {   return (     <Box sx={{ width: 300 }}>       <Slider         aria-label=\"Temperature\"         defaultValue={30}         getAriaValueText={valuetext}         color=\"secondary\"       />     <\/Box>   ); } ui <- CssBaseline(   Box(sx = list(width = 300, mt = 4),     Slider.shinyInput(inputId = \"colorSlider\", value = 30,                        \"aria-label\" = \"Temperature\",                        getAriaValueText = JS(\"function(value) { return `${value} °C`; }\"),                       color = \"secondary\")   ) )  server <- function(input, output, session) {}  shinyApp(ui, server)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/articles/slider.html","id":"customization","dir":"Articles","previous_headings":"","what":"Customization","title":"Slider","text":"examples customizing component. can learn overrides documentation page.","code":"import * as React from 'react'; import Slider, { SliderThumb, SliderValueLabelProps } from '@mui/material/Slider'; import { styled } from '@mui/material/styles'; import Typography from '@mui/material/Typography'; import Tooltip from '@mui/material/Tooltip'; import Box from '@mui/material/Box';  function ValueLabelComponent(props: SliderValueLabelProps) {   const { children, value } = props;    return (     <Tooltip enterTouchDelay={0} placement=\"top\" title={value}>       {children}     <\/Tooltip>   ); }  const iOSBoxShadow =   '0 3px 1px rgba(0,0,0,0.1),0 4px 8px rgba(0,0,0,0.13),0 0 0 1px rgba(0,0,0,0.02)';  const IOSSlider = styled(Slider)(({ theme }) => ({   color: '#007bff',   height: 5,   padding: '15px 0',   '& .MuiSlider-thumb': {     height: 20,     width: 20,     backgroundColor: '#fff',     boxShadow: '0 0 2px 0px rgba(0, 0, 0, 0.1)',     '&:focus, &:hover, &.Mui-active': {       boxShadow: '0px 0px 3px 1px rgba(0, 0, 0, 0.1)',       // Reset on touch devices, it doesn't add specificity       '@media (hover: none)': {         boxShadow: iOSBoxShadow,       },     },     '&:before': {       boxShadow:         '0px 0px 1px 0px rgba(0,0,0,0.2), 0px 0px 0px 0px rgba(0,0,0,0.14), 0px 0px 1px 0px rgba(0,0,0,0.12)',     },   },   '& .MuiSlider-valueLabel': {     fontSize: 12,     fontWeight: 'normal',     top: -6,     backgroundColor: 'unset',     color: theme.palette.text.primary,     '&::before': {       display: 'none',     },     '& *': {       background: 'transparent',       color: '#000',       ...theme.applyStyles('dark', {         color: '#fff',       }),     },   },   '& .MuiSlider-track': {     border: 'none',     height: 5,   },   '& .MuiSlider-rail': {     opacity: 0.5,     boxShadow: 'inset 0px 0px 4px -2px #000',     backgroundColor: '#d0d0d0',   },   ...theme.applyStyles('dark', {     color: '#0a84ff',   }), }));  const PrettoSlider = styled(Slider)({   color: '#52af77',   height: 8,   '& .MuiSlider-track': {     border: 'none',   },   '& .MuiSlider-thumb': {     height: 24,     width: 24,     backgroundColor: '#fff',     border: '2px solid currentColor',     '&:focus, &:hover, &.Mui-active, &.Mui-focusVisible': {       boxShadow: 'inherit',     },     '&::before': {       display: 'none',     },   },   '& .MuiSlider-valueLabel': {     lineHeight: 1.2,     fontSize: 12,     background: 'unset',     padding: 0,     width: 32,     height: 32,     borderRadius: '50% 50% 50% 0',     backgroundColor: '#52af77',     transformOrigin: 'bottom left',     transform: 'translate(50%, -100%) rotate(-45deg) scale(0)',     '&::before': { display: 'none' },     '&.MuiSlider-valueLabelOpen': {       transform: 'translate(50%, -100%) rotate(-45deg) scale(1)',     },     '& > *': {       transform: 'rotate(45deg)',     },   }, });  const AirbnbSlider = styled(Slider)(({ theme }) => ({   color: '#3a8589',   height: 3,   padding: '13px 0',   '& .MuiSlider-thumb': {     height: 27,     width: 27,     backgroundColor: '#fff',     border: '1px solid currentColor',     '&:hover': {       boxShadow: '0 0 0 8px rgba(58, 133, 137, 0.16)',     },     '& .airbnb-bar': {       height: 9,       width: 1,       backgroundColor: 'currentColor',       marginLeft: 1,       marginRight: 1,     },   },   '& .MuiSlider-track': {     height: 3,   },   '& .MuiSlider-rail': {     color: '#d8d8d8',     opacity: 1,     height: 3,     ...theme.applyStyles('dark', {       color: '#bfbfbf',       opacity: undefined,     }),   }, }));  interface AirbnbThumbComponentProps extends React.HTMLAttributes<unknown> {}  function AirbnbThumbComponent(props: AirbnbThumbComponentProps) {   const { children, ...other } = props;   return (     <SliderThumb {...other}>       {children}       <span className=\"airbnb-bar\" />       <span className=\"airbnb-bar\" />       <span className=\"airbnb-bar\" />     <\/SliderThumb>   ); }  export default function CustomizedSlider() {   return (     <Box sx={{ width: 320 }}>       <Typography gutterBottom>iOS<\/Typography>       <IOSSlider aria-label=\"ios slider\" defaultValue={60} valueLabelDisplay=\"on\" />       <Box sx={{ m: 3 }} />       <Typography gutterBottom>pretto.fr<\/Typography>       <PrettoSlider         valueLabelDisplay=\"auto\"         aria-label=\"pretto slider\"         defaultValue={20}       />       <Box sx={{ m: 3 }} />       <Typography gutterBottom>Tooltip value label<\/Typography>       <Slider         valueLabelDisplay=\"auto\"         slots={{           valueLabel: ValueLabelComponent,         }}         aria-label=\"custom thumb label\"         defaultValue={20}       />       <Box sx={{ m: 3 }} />       <Typography gutterBottom>Airbnb<\/Typography>       <AirbnbSlider         slots={{ thumb: AirbnbThumbComponent }}         getAriaLabel={(index) => (index === 0 ? 'Minimum price' : 'Maximum price')}         defaultValue={[20, 40]}       />     <\/Box>   ); } ui <- shinyMaterialUIPage(   CssBaseline(     Box(       sx = list(width = 320),       Typography(\"iOS\", gutterBottom = TRUE),       ThemeProvider(         theme = list(           palette = list(             primary = list(main = \"#007bff\")           ),           components = list(             MuiSlider = list(               styleOverrides = list(                 root = list(                   height = 5,                   padding = \"15px 0\"                 ),                 thumb = list(                   height = 20,                   width = 20,                   backgroundColor = \"#fff\",                   boxShadow = \"0 0 2px 0px rgba(0, 0, 0, 0.1)\"                 ),                 track = list(                   border = \"none\",                   height = 5                 ),                 rail = list(                   opacity = 0.5,                   boxShadow = \"inset 0px 0px 4px -2px #000\",                   backgroundColor = \"#d0d0d0\"                 )               )             )           )         ),         Slider.shinyInput(           inputId = \"iosSlider\",           value = 60,           \"aria-label\" = \"ios slider\",           valueLabelDisplay = \"on\"         )       ),       Box(sx = list(m = 3)),              Typography(\"pretto.fr\", gutterBottom = TRUE),       ThemeProvider(         theme = list(           palette = list(             primary = list(main = \"#52af77\")           ),           components = list(             MuiSlider = list(               styleOverrides = list(                 root = list(                   color = '#52af77',                   height = 8,                   '& .MuiSlider-track' = list(                     border = 'none'                   ),                   '& .MuiSlider-thumb' = list(                     height = 24,                     width = 24,                     backgroundColor = '#fff',                     border = '2px solid currentColor',                     '&:focus, &:hover, &.Mui-active, &.Mui-focusVisible' = list(                       boxShadow = 'inherit'                     ),                     '&::before' = list(                       display = 'none'                     )                   ),                   '& .MuiSlider-valueLabel' = list(                     lineHeight = 1.2,                     fontSize = 12,                     background = 'unset',                     padding = 0,                     width = 32,                     height = 32,                     borderRadius = '50% 50% 50% 0',                     backgroundColor = '#52af77',                     transformOrigin = 'bottom left',                     transform = 'translate(50%, -100%) rotate(-45deg) scale(0)',                     '&::before' = list( display = 'none' ),                     '&.MuiSlider-valueLabelOpen' = list(                       transform = 'translate(50%, -100%) rotate(-45deg) scale(1)'                     ),                     '& > *' = list(                       transform = 'rotate(45deg)'                     )                   )                 )               )             )           )         ),         Slider.shinyInput(           inputId = \"prettoSlider\",           value = 20,           \"aria-label\" = \"pretto slider\",           valueLabelDisplay = \"auto\"         )       ),       Box(sx = list(m = 3)),              Typography(\"Tooltip value label\", gutterBottom = TRUE),       Slider.shinyInput(         inputId = \"tooltipSlider\",         value = 20,         \"aria-label\" = \"custom thumb label\",         valueLabelDisplay = \"auto\"       ),       Box(sx = list(m = 3)),              Typography(\"Airbnb\", gutterBottom = TRUE),       ThemeProvider(         theme = list(           palette = list(             primary = list(main = \"#3a8589\")           ),           components = list(             MuiSlider = list(               styleOverrides = list(                 root = list(                   height = 3,                   padding = \"13px 0\"                 ),                 thumb = list(                   height = 27,                   width = 27,                   backgroundColor = \"#fff\",                   border = \"1px solid currentColor\"                 ),                 track = list(height = 3),                 rail = list(                   color = \"#d8d8d8\",                   opacity = 1,                   height = 3                 )               )             )           )         ),         Slider.shinyInput(           inputId = \"airbnbSlider\",            value = c(20, 40)         )       )     )   ) )  server <- function(input, output, session) {   # Observe slider values for handling   observe({     print(paste(\"iOS Slider value:\", input$iosSlider))     print(paste(\"Pretto Slider value:\", input$prettoSlider))     print(paste(\"Tooltip Slider value:\", input$tooltipSlider))     print(paste(\"Airbnb Slider value:\", input$airbnbSlider))   }) }  shinyApp(ui, server)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/articles/slider.html","id":"music-player","dir":"Articles","previous_headings":"","what":"Music player","title":"Slider","text":"","code":"import * as React from 'react'; import { styled } from '@mui/material/styles'; import Box from '@mui/material/Box'; import Typography from '@mui/material/Typography'; import Slider from '@mui/material/Slider'; import IconButton from '@mui/material/IconButton'; import Stack from '@mui/material/Stack'; import PauseRounded from '@mui/icons-material/PauseRounded'; import PlayArrowRounded from '@mui/icons-material/PlayArrowRounded'; import FastForwardRounded from '@mui/icons-material/FastForwardRounded'; import FastRewindRounded from '@mui/icons-material/FastRewindRounded'; import VolumeUpRounded from '@mui/icons-material/VolumeUpRounded'; import VolumeDownRounded from '@mui/icons-material/VolumeDownRounded';  const WallPaper = styled('div')({   position: 'absolute',   width: '100%',   height: '100%',   top: 0,   left: 0,   overflow: 'hidden',   background: 'linear-gradient(rgb(255, 38, 142) 0%, rgb(255, 105, 79) 100%)',   transition: 'all 500ms cubic-bezier(0.175, 0.885, 0.32, 1.275) 0s',   '&::before': {     content: '\"\"',     width: '140%',     height: '140%',     position: 'absolute',     top: '-40%',     right: '-50%',     background:       'radial-gradient(at center center, rgb(62, 79, 249) 0%, rgba(62, 79, 249, 0) 64%)',   },   '&::after': {     content: '\"\"',     width: '140%',     height: '140%',     position: 'absolute',     bottom: '-50%',     left: '-30%',     background:       'radial-gradient(at center center, rgb(247, 237, 225) 0%, rgba(247, 237, 225, 0) 70%)',     transform: 'rotate(30deg)',   }, });  const Widget = styled('div')(({ theme }) => ({   padding: 16,   borderRadius: 16,   width: 343,   maxWidth: '100%',   margin: 'auto',   position: 'relative',   zIndex: 1,   backgroundColor: 'rgba(255,255,255,0.4)',   backdropFilter: 'blur(40px)',   ...theme.applyStyles('dark', {     backgroundColor: 'rgba(0,0,0,0.6)',   }), }));  const CoverImage = styled('div')({   width: 100,   height: 100,   objectFit: 'cover',   overflow: 'hidden',   flexShrink: 0,   borderRadius: 8,   backgroundColor: 'rgba(0,0,0,0.08)',   '& > img': {     width: '100%',   }, });  const TinyText = styled(Typography)({   fontSize: '0.75rem',   opacity: 0.38,   fontWeight: 500,   letterSpacing: 0.2, });  export default function MusicPlayerSlider() {   const duration = 200; // seconds   const [position, setPosition] = React.useState(32);   const [paused, setPaused] = React.useState(false);   function formatDuration(value: number) {     const minute = Math.floor(value / 60);     const secondLeft = value - minute * 60;     return `${minute}:${secondLeft < 10 ? `0${secondLeft}` : secondLeft}`;   }   return (     <Box sx={{ width: '100%', overflow: 'hidden', position: 'relative', p: 3 }}>       <Widget>         <Box sx={{ display: 'flex', alignItems: 'center' }}>           <CoverImage>             <img               alt=\"can't win - Chilling Sunday\"               src=\"/static/images/sliders/chilling-sunday.jpg\"             />           <\/CoverImage>           <Box sx={{ ml: 1.5, minWidth: 0 }}>             <Typography               variant=\"caption\"               sx={{ color: 'text.secondary', fontWeight: 500 }}             >               Jun Pulse             <\/Typography>             <Typography noWrap>               <b>คนเก่าเขาทำไว้ดี (Can&apos;t win)<\/b>             <\/Typography>             <Typography noWrap sx={{ letterSpacing: -0.25 }}>               Chilling Sunday &mdash; คนเก่าเขาทำไว้ดี             <\/Typography>           <\/Box>         <\/Box>         <Slider           aria-label=\"time-indicator\"           size=\"small\"           value={position}           min={0}           step={1}           max={duration}           onChange={(_, value) => setPosition(value)}           sx={(t) => ({             color: 'rgba(0,0,0,0.87)',             height: 4,             '& .MuiSlider-thumb': {               width: 8,               height: 8,               transition: '0.3s cubic-bezier(.47,1.64,.41,.8)',               '&::before': {                 boxShadow: '0 2px 12px 0 rgba(0,0,0,0.4)',               },               '&:hover, &.Mui-focusVisible': {                 boxShadow: `0px 0px 0px 8px ${'rgb(0 0 0 / 16%)'}`,                 ...t.applyStyles('dark', {                   boxShadow: `0px 0px 0px 8px ${'rgb(255 255 255 / 16%)'}`,                 }),               },               '&.Mui-active': {                 width: 20,                 height: 20,               },             },             '& .MuiSlider-rail': {               opacity: 0.28,             },             ...t.applyStyles('dark', {               color: '#fff',             }),           })}         />         <Box           sx={{             display: 'flex',             alignItems: 'center',             justifyContent: 'space-between',             mt: -2,           }}         >           <TinyText>{formatDuration(position)}<\/TinyText>           <TinyText>-{formatDuration(duration - position)}<\/TinyText>         <\/Box>         <Box           sx={(theme) => ({             display: 'flex',             alignItems: 'center',             justifyContent: 'center',             mt: -1,             '& svg': {               color: '#000',               ...theme.applyStyles('dark', {                 color: '#fff',               }),             },           })}         >           <IconButton aria-label=\"previous song\">             <FastRewindRounded fontSize=\"large\" />           <\/IconButton>           <IconButton             aria-label={paused ? 'play' : 'pause'}             onClick={() => setPaused(!paused)}           >             {paused ? (               <PlayArrowRounded sx={{ fontSize: '3rem' }} />             ) : (               <PauseRounded sx={{ fontSize: '3rem' }} />             )}           <\/IconButton>           <IconButton aria-label=\"next song\">             <FastForwardRounded fontSize=\"large\" />           <\/IconButton>         <\/Box>         <Stack           spacing={2}           direction=\"row\"           sx={(theme) => ({             mb: 1,             px: 1,             '& > svg': {               color: 'rgba(0,0,0,0.4)',               ...theme.applyStyles('dark', {                 color: 'rgba(255,255,255,0.4)',               }),             },           })}           alignItems=\"center\"         >           <VolumeDownRounded />           <Slider             aria-label=\"Volume\"             defaultValue={30}             sx={(t) => ({               color: 'rgba(0,0,0,0.87)',               '& .MuiSlider-track': {                 border: 'none',               },               '& .MuiSlider-thumb': {                 width: 24,                 height: 24,                 backgroundColor: '#fff',                 '&::before': {                   boxShadow: '0 4px 8px rgba(0,0,0,0.4)',                 },                 '&:hover, &.Mui-focusVisible, &.Mui-active': {                   boxShadow: 'none',                 },               },               ...t.applyStyles('dark', {                 color: '#fff',               }),             })}           />           <VolumeUpRounded />         <\/Stack>       <\/Widget>       <WallPaper />     <\/Box>   ); } # Format duration function formatDuration <- function(value) {   minute <- floor(value / 60)   secondLeft <- value - minute * 60   paste0(minute, \":\", ifelse(secondLeft < 10, paste0(\"0\", secondLeft), secondLeft)) }  ui <- shinyMaterialUIPage(   tags$style(\"     .wall-paper {       position: absolute;       width: 100%;       height: 100%;       top: 0;       left: 0;       overflow: hidden;       background: linear-gradient(rgb(255, 38, 142) 0%, rgb(255, 105, 79) 100%);       transition: all 500ms cubic-bezier(0.175, 0.885, 0.32, 1.275) 0s;     }     .music-widget {       padding: 16px;       border-radius: 16px;       width: 343px;       max-width: 100%;       margin: auto;       position: relative;       z-index: 1;       background-color: rgba(255,255,255,0.4);       backdrop-filter: blur(40px);     }     .cover-image {       width: 100px;       height: 100px;       object-fit: cover;       overflow: hidden;       flex-shrink: 0;       border-radius: 8px;       background-color: rgba(0,0,0,0.08);     }     .cover-image img {       width: 100%;     }     .tiny-text {       font-size: 0.75rem;       opacity: 0.38;       font-weight: 500;       letter-spacing: 0.2px;     }   \"),      CssBaseline(     Box(       sx = list(width = \"100%\", overflow = \"hidden\", position = \"relative\", p = 3),              div(class = \"music-widget\",         Box(           sx = list(display = \"flex\", alignItems = \"center\"),           div(class = \"cover-image\",             tags$img(               alt = \"can't win - Chilling Sunday\",               src = \"https://mui.com/static/images/sliders/chilling-sunday.jpg\"             )           ),           Box(             sx = list(ml = 1.5, minWidth = 0),             Typography(               variant = \"caption\",               sx = list(color = \"text.secondary\", fontWeight = 500),               \"Jun Pulse\"             ),             Typography(               noWrap = TRUE,               tags$b(\"คนเก่าเขาทำไว้ดี (Can't win)\")             ),             Typography(               noWrap = TRUE,               sx = list(letterSpacing = -0.25),               \"Chilling Sunday — คนเก่าเขาทำไว้ดี\"             )           )         ),                  Slider.shinyInput(           inputId = \"timeSlider\",           value = 32,           min = 0,           step = 1,           max = 200,           size = \"small\",           \"aria-label\" = \"time-indicator\"         ),                  Box(           sx = list(             display = \"flex\",              alignItems = \"center\",              justifyContent = \"space-between\",             mt = -2           ),           div(class = \"tiny-text\", textOutput(\"currentPosition\")),           div(class = \"tiny-text\", textOutput(\"remainingTime\"))         ),                  Box(           sx = list(             display = \"flex\",             alignItems = \"center\",             justifyContent = \"center\",             mt = -1           ),           IconButton(             \"aria-label\" = \"previous song\",             shiny::icon(\"backward\")           ),           IconButton(             inputId = \"playPauseBtn\",             \"aria-label\" = \"play\",             shiny::icon(\"play\", style = \"font-size: 2rem;\")           ),           IconButton(             \"aria-label\" = \"next song\",             shiny::icon(\"forward\")           )         ),                  Stack(           spacing = 2,           direction = \"row\",           sx = list(mb = 1, px = 1),           alignItems = \"center\",                      shiny::icon(\"volume-down\"),                      Slider.shinyInput(             inputId = \"volumeSlider\",             value = 30,             \"aria-label\" = \"Volume\",             sx = list(               width = 200,               color = \"rgba(0,0,0,0.87)\"             )           ),                      shiny::icon(\"volume-up\")         )       ),              div(class = \"wall-paper\")     )   ) )  server <- function(input, output, session) {   # Track playing state   playing <- reactiveVal(TRUE)      # Format time displays   output$currentPosition <- renderText({     formatDuration(input$timeSlider)   })      output$remainingTime <- renderText({     paste0(\"-\", formatDuration(200 - input$timeSlider))   })      # Handle play/pause button   observeEvent(input$playPauseBtn, {     current <- playing()     playing(!current)          # Update button icon     if (!current) {       updateActionButton(session, \"playPauseBtn\",                           icon = shiny::icon(\"play\", style = \"font-size: 2rem;\"))     } else {       updateActionButton(session, \"playPauseBtn\",                           icon = shiny::icon(\"pause\", style = \"font-size: 2rem;\"))     }   })      # For a real app, you would implement audio playback functionality here }  shinyApp(ui, server)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/articles/slider.html","id":"vertical-sliders","dir":"Articles","previous_headings":"","what":"Vertical sliders","title":"Slider","text":"Set orientation prop “vertical” create vertical sliders. thumb track vertical movement instead horizontal movement. Chrome versions 124 implement aria-orientation incorrectly vertical sliders expose ‘horizontal’ accessibility tree. (Chromium issue #40736841) -webkit-appearance: slider-vertical CSS property can used correct older versions, trade-causing console warning newer Chrome versions:","code":"import * as React from 'react'; import Stack from '@mui/material/Stack'; import Slider from '@mui/material/Slider';  export default function VerticalSlider() {   return (     <Stack sx={{ height: 300 }} spacing={1} direction=\"row\">       <Slider         aria-label=\"Temperature\"         orientation=\"vertical\"         getAriaValueText={getAriaValueText}         valueLabelDisplay=\"auto\"         defaultValue={30}       />       <Slider         aria-label=\"Temperature\"         orientation=\"vertical\"         defaultValue={30}         valueLabelDisplay=\"auto\"         disabled       />       <Slider         getAriaLabel={() => 'Temperature'}         orientation=\"vertical\"         getAriaValueText={getAriaValueText}         defaultValue={[20, 37]}         valueLabelDisplay=\"auto\"         marks={marks}       />     <\/Stack>   ); }  function getAriaValueText(value: number) {   return `${value}°C`; }  const marks = [   {     value: 0,     label: '0°C',   },   {     value: 20,     label: '20°C',   },   {     value: 37,     label: '37°C',   },   {     value: 100,     label: '100°C',   }, ]; # Define marks for the slider marks <- list(   list(value = 0, label = \"0°C\"),   list(value = 20, label = \"20°C\"),   list(value = 37, label = \"37°C\"),   list(value = 100, label = \"100°C\") )  ui <- CssBaseline(   Stack(     sx = list(height = 300, mt = 4, ml = 4),     spacing = 1,     direction = \"row\",          Slider.shinyInput(       inputId = \"verticalSlider1\",       orientation = \"vertical\",       valueLabelDisplay = \"auto\",       value = 30,       \"aria-label\" = \"Temperature\"     ),          Slider.shinyInput(       inputId = \"verticalSlider2\",       orientation = \"vertical\",       valueLabelDisplay = \"auto\",       value = 30,       disabled = TRUE,       \"aria-label\" = \"Temperature\"     ),          Slider.shinyInput(       inputId = \"verticalSlider3\",       orientation = \"vertical\",       valueLabelDisplay = \"auto\",       value = c(20, 37),       marks = marks     )   ) )  server <- function(input, output, session) {}  shinyApp(ui, server) .MuiSlider-thumb input {   -webkit-appearance: slider-vertical; }"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/articles/slider.html","id":"marks-placement","dir":"Articles","previous_headings":"","what":"Marks placement","title":"Slider","text":"can customize slider adding repositioning marks minimum maximum values.","code":"import * as React from 'react'; import Box from '@mui/material/Box'; import Slider from '@mui/material/Slider'; import Typography from '@mui/material/Typography';  const MAX = 100; const MIN = 0; const marks = [   {     value: MIN,     label: '',   },   {     value: MAX,     label: '',   }, ];  export default function CustomMarks() {   const [val, setVal] = React.useState<number>(MIN);   const handleChange = (_: Event, newValue: number) => {     setVal(newValue);   };    return (     <Box sx={{ width: 250 }}>       <Slider         marks={marks}         step={10}         value={val}         valueLabelDisplay=\"auto\"         min={MIN}         max={MAX}         onChange={handleChange}       />       <Box sx={{ display: 'flex', justifyContent: 'space-between' }}>         <Typography           variant=\"body2\"           onClick={() => setVal(MIN)}           sx={{ cursor: 'pointer' }}         >           {MIN} min         <\/Typography>         <Typography           variant=\"body2\"           onClick={() => setVal(MAX)}           sx={{ cursor: 'pointer' }}         >           {MAX} max         <\/Typography>       <\/Box>     <\/Box>   ); } # Define constants MAX <- 100 MIN <- 0 marks <- list(   list(     value = MIN,     label = \"\"   ),   list(     value = MAX,     label = \"\"   ) )  # Create Shiny app ui <- shinyMaterialUIPage(   CssBaseline(     Box(       sx = list(width = 250, m = 4),       Slider.shinyInput(         inputId = \"custom_slider\",         marks = marks,         step = 10,         value = MIN,         valueLabelDisplay = \"auto\",         min = MIN,         max = MAX       ),       Box(         sx = list(display = \"flex\", justifyContent = \"space-between\"),         Typography(           variant = \"body2\",           sx = list(cursor = \"pointer\"),           paste0(MIN, \" min\")         ),         Typography(           variant = \"body2\",           sx = list(cursor = \"pointer\"),           paste0(MAX, \" max\")         )       )     )   ) )  server <- function(input, output, session) {}  shinyApp(ui, server)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/articles/slider.html","id":"track","dir":"Articles","previous_headings":"","what":"Track","title":"Slider","text":"track shows range available user selection. Removed track track can turned track=FALSE.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/articles/slider.html","id":"removed-track","dir":"Articles","previous_headings":"Track","what":"Removed track","title":"Slider","text":"","code":"import * as React from 'react'; import { styled } from '@mui/material/styles'; import Box from '@mui/material/Box'; import Typography from '@mui/material/Typography'; import Slider from '@mui/material/Slider';  const Separator = styled('div')(   ({ theme }) => `   height: ${theme.spacing(3)}; `, );  const marks = [   {     value: 0,     label: '0°C',   },   {     value: 20,     label: '20°C',   },   {     value: 37,     label: '37°C',   },   {     value: 100,     label: '100°C',   }, ];  function valuetext(value: number) {   return `${value}°C`; }  export default function TrackFalseSlider() {   return (     <Box sx={{ width: 250 }}>       <Typography id=\"track-false-slider\" gutterBottom>         Removed track       <\/Typography>       <Slider         track={false}         aria-labelledby=\"track-false-slider\"         getAriaValueText={valuetext}         defaultValue={30}         marks={marks}       />       <Separator />       <Typography id=\"track-false-range-slider\" gutterBottom>         Removed track range slider       <\/Typography>       <Slider         track={false}         aria-labelledby=\"track-false-range-slider\"         getAriaValueText={valuetext}         defaultValue={[20, 37, 50]}         marks={marks}       />     <\/Box>   ); } # Define data and helper functions marks <- list(   list(value = 0, label = \"0°C\"),   list(value = 20, label = \"20°C\"),   list(value = 37, label = \"37°C\"),   list(value = 100, label = \"100°C\") )  # Create Shiny app ui <- shinyMaterialUIPage(   CssBaseline(     Box(       sx = list(width = 250),       Typography(         id = \"track-false-slider\",         gutterBottom = TRUE,         \"Removed track\"       ),       Slider.shinyInput(         inputId = \"track_false_slider\",         track = FALSE,         `aria-labelledby` = \"track-false-slider\",         #getAriaValueText = \"\",         value = 30,         marks = marks       ),       # Custom separator with theme spacing       div(style = \"height: 24px;\"),       Typography(         id = \"track-false-range-slider\",         gutterBottom = TRUE,         \"Removed track range slider\"       ),       Slider.shinyInput(         inputId = \"track_false_range_slider\",         track = FALSE,         `aria-labelledby` = \"track-false-range-slider\",         #getAriaValueText = \"\",         value = c(20, 37, 50),         marks = marks       )     )   ) )  server <- function(input, output, session) {   # Empty server since this is a display-only example }  shinyApp(ui, server)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/articles/slider.html","id":"inverted-track","dir":"Articles","previous_headings":"","what":"Inverted track","title":"Slider","text":"track can inverted track=“inverted”.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/articles/slider.html","id":"inverted-track-1","dir":"Articles","previous_headings":"Inverted track","what":"Inverted track","title":"Slider","text":"","code":"import * as React from 'react'; import { styled } from '@mui/material/styles'; import Box from '@mui/material/Box'; import Typography from '@mui/material/Typography'; import Slider from '@mui/material/Slider';  const Separator = styled('div')(   ({ theme }) => `   height: ${theme.spacing(3)}; `, );  const marks = [   {     value: 0,     label: '0°C',   },   {     value: 20,     label: '20°C',   },   {     value: 37,     label: '37°C',   },   {     value: 100,     label: '100°C',   }, ];  function valuetext(value: number) {   return `${value}°C`; }  export default function TrackInvertedSlider() {   return (     <Box sx={{ width: 250 }}>       <Typography id=\"track-inverted-slider\" gutterBottom>         Inverted track       <\/Typography>       <Slider         track=\"inverted\"         aria-labelledby=\"track-inverted-slider\"         getAriaValueText={valuetext}         defaultValue={30}         marks={marks}       />       <Separator />       <Typography id=\"track-inverted-range-slider\" gutterBottom>         Inverted track range       <\/Typography>       <Slider         track=\"inverted\"         aria-labelledby=\"track-inverted-range-slider\"         getAriaValueText={valuetext}         defaultValue={[20, 37]}         marks={marks}       />     <\/Box>   ); } # Define data and helper functions marks <- list(   list(value = 0, label = \"0°C\"),   list(value = 20, label = \"20°C\"),   list(value = 37, label = \"37°C\"),   list(value = 100, label = \"100°C\") )  # Create Shiny app ui <- shinyMaterialUIPage(   CssBaseline(     Box(       sx = list(width = 250),       Typography(         id = \"track-inverted-slider\",         gutterBottom = TRUE,         \"Inverted track\"       ),       Slider.shinyInput(         inputId = \"track_inverted_slider\",         track = \"inverted\",         `aria-labelledby` = \"track-inverted-slider\",         #getAriaValueText = \"\",         value = 30,         marks = marks       ),       # Custom separator with theme spacing       div(style = \"height: 24px;\"),       Typography(         id = \"track-inverted-range-slider\",         gutterBottom = TRUE,         \"Inverted track range\"       ),       Slider.shinyInput(         inputId = \"track_inverted_range_slider\",         track = \"inverted\",         `aria-labelledby` = \"track-inverted-range-slider\",         #getAriaValueText = \"\",         value = c(20, 37),         marks = marks       )     )   ) )  server <- function(input, output, session) {   # Empty server since this is a display-only example }  shinyApp(ui, server)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/articles/slider.html","id":"non-linear-scale","dir":"Articles","previous_headings":"","what":"Non-linear scale","title":"Slider","text":"can use scale prop represent value different scale. following demo, value x represents value 2^x. Increasing x one increases represented value factor 2.","code":"import * as React from 'react'; import Box from '@mui/material/Box'; import Typography from '@mui/material/Typography'; import Slider from '@mui/material/Slider';  function valueLabelFormat(value: number) {   const units = ['KB', 'MB', 'GB', 'TB'];    let unitIndex = 0;   let scaledValue = value;    while (scaledValue >= 1024 && unitIndex < units.length - 1) {     unitIndex += 1;     scaledValue /= 1024;   }    return `${scaledValue} ${units[unitIndex]}`; }  function calculateValue(value: number) {   return 2 ** value; }  export default function NonLinearSlider() {   const [value, setValue] = React.useState<number>(10);    const handleChange = (event: Event, newValue: number) => {     setValue(newValue);   };    return (     <Box sx={{ width: 250 }}>       <Typography id=\"non-linear-slider\" gutterBottom>         Storage: {valueLabelFormat(calculateValue(value))}       <\/Typography>       <Slider         value={value}         min={5}         step={1}         max={30}         scale={calculateValue}         getAriaValueText={valueLabelFormat}         valueLabelFormat={valueLabelFormat}         onChange={handleChange}         valueLabelDisplay=\"auto\"         aria-labelledby=\"non-linear-slider\"       />     <\/Box>   ); } # Helper functions for formatting and scaling valueLabelFormat <- function(value) {   units <- c('KB', 'MB', 'GB', 'TB')      unitIndex <- 1   scaledValue <- value      while (scaledValue >= 1024 && unitIndex < length(units)) {     unitIndex <- unitIndex + 1     scaledValue <- scaledValue / 1024   }      return(paste(round(scaledValue, 2), units[unitIndex])) }  calculateValue <- function(value) {   return(2^value) }  # Create Shiny app ui <- shinyMaterialUIPage(   CssBaseline(     Box(       sx = list(width = 250, mt = 4),       textOutput(\"storage_text\"),       Slider.shinyInput(         inputId = \"non_linear_slider\",         value = 10,         min = 5,         step = 1,         max = 30,         scale = JS(\"function(value) { return Math.pow(2, value); }\"),         getAriaValueText = JS(\"function(value) {            const units = ['KB', 'MB', 'GB', 'TB'];           let unitIndex = 0;           let scaledValue = Math.pow(2, value);                      while (scaledValue >= 1024 && unitIndex < units.length - 1) {             unitIndex += 1;             scaledValue /= 1024;           }                      return `${scaledValue.toFixed(2)} ${units[unitIndex]}`;         }\"),         valueLabelFormat = JS(\"function(value) {            const units = ['KB', 'MB', 'GB', 'TB'];           let unitIndex = 0;           let scaledValue = value;                      while (scaledValue >= 1024 && unitIndex < units.length - 1) {             unitIndex += 1;             scaledValue /= 1024;           }                      return `${scaledValue.toFixed(2)} ${units[unitIndex]}`;         }\"),         valueLabelDisplay = \"auto\",         `aria-labelledby` = \"non-linear-slider\"       )     )   ) )  server <- function(input, output, session) {   output$storage_text <- renderText({     if (!is.null(input$non_linear_slider)) {       value <- input$non_linear_slider       calculatedValue <- 2^value       formattedValue <- valueLabelFormat(calculatedValue)       paste(\"Storage:\", formattedValue)     } else {       \"Storage: 1 KB\"     }   }) }  shinyApp(ui, server)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/articles/slider.html","id":"accessibility","dir":"Articles","previous_headings":"","what":"Accessibility","title":"Slider","text":"(WAI-ARIA: https://www.w3.org/WAI/ARIA/apg/patterns/slider-multithumb/) component handles work necessary make accessible. However, need make sure : thumb user-friendly label (aria-label, aria-labelledby getAriaLabel prop). thumb user-friendly text current value. required value matches semantics label. can change name getAriaValueText aria-valuetext prop.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/articles/slider.html","id":"unstyled","dir":"Articles","previous_headings":"","what":"Unstyled","title":"Slider","text":"Use Base UI Slider complete ownership component’s design, Material UI Joy UI styles override. unstyled version component ideal choice heavy customization smaller bundle size.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/articles/switch.html","id":"switch","dir":"Articles","previous_headings":"","what":"Switch","title":"Switch","text":"Switches toggle state single setting . Switches preferred way adjust settings mobile. option switch controls, well state ’s , made clear corresponding inline label.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/articles/switch.html","id":"basic-switches","dir":"Articles","previous_headings":"Switch","what":"Basic switches","title":"Switch","text":"","code":"import * as React from 'react'; import Switch from '@mui/material/Switch';  const label = { inputProps: { 'aria-label': 'Switch demo' } };  export default function BasicSwitches() {   return (     <div>       <Switch {...label} defaultChecked />       <Switch {...label} />       <Switch {...label} disabled defaultChecked />       <Switch {...label} disabled />     <\/div>   ); } library(shiny)  ui <- shinyMaterialUIPage(   div(     Switch.shinyInput(       inputId = \"switch1\",       value = TRUE,       inputProps = list('aria-label' = 'Switch demo')     ),     Switch.shinyInput(       inputId = \"switch2\",       value = FALSE,       inputProps = list('aria-label' = 'Switch demo')     ),     Switch.shinyInput(       inputId = \"switch3\",       value = TRUE,       disabled = TRUE,       inputProps = list('aria-label' = 'Switch demo')     ),     Switch.shinyInput(       inputId = \"switch4\",       value = FALSE,       disabled = TRUE,       inputProps = list('aria-label' = 'Switch demo')     )   ) )  server <- function(input, output, session) {   # Access switch values with input$switch1, input$switch2, etc. }  shinyApp(ui, server)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/articles/switch.html","id":"label","dir":"Articles","previous_headings":"Switch","what":"Label","title":"Switch","text":"can provide label Switch thanks FormControlLabel component.","code":"import * as React from 'react'; import FormGroup from '@mui/material/FormGroup'; import FormControlLabel from '@mui/material/FormControlLabel'; import Switch from '@mui/material/Switch';  export default function SwitchLabels() {   return (     <FormGroup>       <FormControlLabel control={<Switch defaultChecked />} label=\"Label\" />       <FormControlLabel required control={<Switch />} label=\"Required\" />       <FormControlLabel disabled control={<Switch />} label=\"Disabled\" />     <\/FormGroup>   ); } library(shiny)  ui <- shinyMaterialUIPage(   FormGroup(     FormControlLabel(       control = Switch.shinyInput(         inputId = \"labeled-switch1\",         value = TRUE       ),       label = \"Label\"     ),     FormControlLabel(       required = TRUE,       control = Switch.shinyInput(         inputId = \"labeled-switch2\",         value = FALSE       ),       label = \"Required\"     ),     FormControlLabel(       disabled = TRUE,       control = Switch.shinyInput(         inputId = \"labeled-switch3\",         value = FALSE       ),       label = \"Disabled\"     )   ) )  server <- function(input, output, session) {   # Handle switch states }  shinyApp(ui, server)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/articles/switch.html","id":"size","dir":"Articles","previous_headings":"Switch","what":"Size","title":"Switch","text":"Use size prop change size switch.","code":"import * as React from 'react'; import Switch from '@mui/material/Switch';  const label = { inputProps: { 'aria-label': 'Size switch demo' } };  export default function SwitchesSize() {   return (     <div>       <Switch {...label} defaultChecked size=\"small\" />       <Switch {...label} defaultChecked />     <\/div>   ); } library(shiny)  ui <- function() {   CssBaseline(     div(       Switch.shinyInput(         inputId = \"size-switch-small\",         value = TRUE,         size = \"small\",         inputProps = list('aria-label' = 'Size switch demo')       ),       Switch.shinyInput(         inputId = \"size-switch-medium\",         value = TRUE,         inputProps = list('aria-label' = 'Size switch demo')       )     )   ) }  server <- function(input, output, session) {    }  shinyApp(ui, server)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/articles/switch.html","id":"color","dir":"Articles","previous_headings":"Switch","what":"Color","title":"Switch","text":"","code":"import * as React from 'react'; import { pink } from '@mui/material/colors'; import Switch from '@mui/material/Switch';  const label = { inputProps: { 'aria-label': 'Switch demo' } };  export default function ColorSwitches() {   return (     <div>       <Switch {...label} defaultChecked />       <Switch {...label} defaultChecked color=\"secondary\" />       <Switch {...label} defaultChecked color=\"warning\" />       <Switch {...label} defaultChecked color=\"default\" />       <Switch         {...label}         defaultChecked         sx={{           '& .MuiSwitch-switchBase.Mui-checked': {             color: pink[600],             '&:hover': {               backgroundColor: alpha(pink[600], 0.08),             },           },           '& .MuiSwitch-switchBase.Mui-checked + .MuiSwitch-track': {             backgroundColor: pink[600],           },         }}       />     <\/div>   ); } library(shiny)  ui <- function() {   CssBaseline(     div(       Switch.shinyInput(         inputId = \"color-switch-primary\",         value = TRUE,         inputProps = list('aria-label' = 'Switch demo')       ),       Switch.shinyInput(         inputId = \"color-switch-secondary\",         value = TRUE,         color = \"secondary\",         inputProps = list('aria-label' = 'Switch demo')       ),       Switch.shinyInput(         inputId = \"color-switch-warning\",         value = TRUE,         color = \"warning\",         inputProps = list('aria-label' = 'Switch demo')       ),       Switch.shinyInput(         inputId = \"color-switch-default\",         value = TRUE,         color = \"default\",         inputProps = list('aria-label' = 'Switch demo')       ),       Switch.shinyInput(         inputId = \"color-switch-custom\",         value = TRUE,         sx = list(           '& .MuiSwitch-switchBase.Mui-checked' = list(             color = '#e91e63',             '&:hover' = list(               backgroundColor = 'rgba(233, 30, 99, 0.08)'             )           ),           '& .MuiSwitch-switchBase.Mui-checked + .MuiSwitch-track' = list(             backgroundColor = '#e91e63'           )         ),         inputProps = list('aria-label' = 'Switch demo')       )     )   ) }  server <- function(input, output, session) {    }  shinyApp(ui, server)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/articles/switch.html","id":"controlled","dir":"Articles","previous_headings":"Switch","what":"Controlled","title":"Switch","text":"can control switch checked onChange props:","code":"import * as React from 'react'; import Switch from '@mui/material/Switch';  export default function ControlledSwitches() {   const [checked, setChecked] = React.useState(true);    const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {     setChecked(event.target.checked);   };    return (     <Switch       checked={checked}       onChange={handleChange}       inputProps={{ 'aria-label': 'controlled' }}     />   ); } library(shiny)  ui <- shinyMaterialUIPage(   Switch.shinyInput(     inputId = \"controlled-switch\",     value = TRUE,     inputProps = list('aria-label' = 'controlled')   ),   br(),   textOutput(\"switch_state\") )  server <- function(input, output, session) {   output$switch_state <- renderText({     paste(\"Switch is:\", if(input$`controlled-switch`) \"ON\" else \"OFF\")   }) }  shinyApp(ui, server)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/articles/switch.html","id":"switches-with-formgroup","dir":"Articles","previous_headings":"Switch","what":"Switches with FormGroup","title":"Switch","text":"FormGroup helpful wrapper used group selection controls components provides easier API. However, encouraged use Checkboxes instead multiple related controls required. (See: use).","code":"import * as React from 'react'; import FormLabel from '@mui/material/FormLabel'; import FormControl from '@mui/material/FormControl'; import FormGroup from '@mui/material/FormGroup'; import FormControlLabel from '@mui/material/FormControlLabel'; import FormHelperText from '@mui/material/FormHelperText'; import Switch from '@mui/material/Switch';  export default function SwitchesGroup() {   const [state, setState] = React.useState({     gilad: true,     jason: false,     antoine: true,   });    const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {     setState({       ...state,       [event.target.name]: event.target.checked,     });   };    return (     <FormControl component=\"fieldset\" variant=\"standard\">       <FormLabel component=\"legend\">Assign responsibility<\/FormLabel>       <FormGroup>         <FormControlLabel           control={             <Switch checked={state.gilad} onChange={handleChange} name=\"gilad\" />           }           label=\"Gilad Gray\"         />         <FormControlLabel           control={             <Switch checked={state.jason} onChange={handleChange} name=\"jason\" />           }           label=\"Jason Killian\"         />         <FormControlLabel           control={             <Switch checked={state.antoine} onChange={handleChange} name=\"antoine\" />           }           label=\"Antoine Llorca\"         />       <\/FormGroup>       <FormHelperText>Be careful<\/FormHelperText>     <\/FormControl>   ); } library(shiny)  ui <- shinyMaterialUIPage(   FormControl(     component = \"fieldset\",     variant = \"standard\",     FormLabel(component = \"legend\", \"Assign responsibility\"),     FormGroup(       FormControlLabel(         control = Switch.shinyInput(           inputId = \"gilad\",           value = TRUE         ),         label = \"Gilad Gray\"       ),       FormControlLabel(         control = Switch.shinyInput(           inputId = \"jason\",           value = FALSE         ),         label = \"Jason Killian\"       ),       FormControlLabel(         control = Switch.shinyInput(           inputId = \"antoine\",           value = TRUE         ),         label = \"Antoine Llorca\"       )     ),     FormHelperText(\"Be careful\")   ),   br(),   h4(\"Current states:\"),   textOutput(\"group_states\") )  server <- function(input, output, session) {   output$group_states <- renderText({     paste(       \"Gilad:\", input$gilad,       \"| Jason:\", input$jason,       \"| Antoine:\", input$antoine     )   }) }  shinyApp(ui, server)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/articles/switch.html","id":"customization","dir":"Articles","previous_headings":"Switch","what":"Customization","title":"Switch","text":"examples customizing component. can learn overrides documentation page. 🎨 looking inspiration, can check MUI Treasury’s customization examples.","code":"import * as React from 'react'; import { styled } from '@mui/material/styles'; import FormGroup from '@mui/material/FormGroup'; import FormControlLabel from '@mui/material/FormControlLabel'; import Switch, { SwitchProps } from '@mui/material/Switch'; import Stack from '@mui/material/Stack'; import Typography from '@mui/material/Typography';  const IOSSwitch = styled((props: SwitchProps) => (   <Switch focusVisibleClassName=\".Mui-focusVisible\" disableRipple {...props} /> ))(({ theme }) => ({   width: 42,   height: 26,   padding: 0,   '& .MuiSwitch-switchBase': {     padding: 0,     margin: 2,     transitionDuration: '300ms',     '&.Mui-checked': {       transform: 'translateX(16px)',       color: '#fff',       '& + .MuiSwitch-track': {         backgroundColor: '#65C466',         opacity: 1,         border: 0,       },       '&.Mui-disabled + .MuiSwitch-track': {         opacity: 0.5,       },     },     '&.Mui-focusVisible .MuiSwitch-thumb': {       color: '#33cf4d',       border: '6px solid #fff',     },     '&.Mui-disabled .MuiSwitch-thumb': {       color: theme.palette.mode === 'light'         ? theme.palette.grey[100]         : theme.palette.grey[600],     },     '&.Mui-disabled + .MuiSwitch-track': {       opacity: theme.palette.mode === 'light' ? 0.7 : 0.3,     },   },   '& .MuiSwitch-thumb': {     boxSizing: 'border-box',     width: 22,     height: 22,   },   '& .MuiSwitch-track': {     borderRadius: 26 / 2,     backgroundColor: '#E9E9EA',     opacity: 1,     transition: theme.transitions.create(['background-color'], {       duration: 500,     }),   }, }));  export default function CustomizedSwitches() {   return (     <FormGroup>       <FormControlLabel         control={<IOSSwitch sx={{ m: 1 }} defaultChecked />}         label=\"iOS style\"       />     <\/FormGroup>   ); } library(shiny)  ui <- function() {   CssBaseline(     ThemeProvider(       theme = list(         components = list(           MuiSwitch = list(             styleOverrides = list(               root = list(                 \"&.ios-switch\" = list(                   width = 42,                   height = 26,                   padding = 0,                   '& .MuiSwitch-switchBase' = list(                     padding = 0,                     margin = 2,                     transitionDuration = '300ms',                     '&.Mui-checked' = list(                       transform = 'translateX(16px)',                       color = '#fff',                       '& + .MuiSwitch-track' = list(                         backgroundColor = '#65C466',                         opacity = 1,                         border = 0                       ),                       '&.Mui-disabled + .MuiSwitch-track' = list(                         opacity = 0.5                       )                     ),                     '&.Mui-focusVisible .MuiSwitch-thumb' = list(                       color = '#33cf4d',                       border = '6px solid #fff'                     ),                     '&.Mui-disabled .MuiSwitch-thumb' = list(                       color = '#f5f5f5'                     ),                     '&.Mui-disabled + .MuiSwitch-track' = list(                       opacity = 0.7                     )                   ),                   '& .MuiSwitch-thumb' = list(                     boxSizing = 'border-box',                     width = 22,                     height = 22                   ),                   '& .MuiSwitch-track' = list(                     borderRadius = 13,                     backgroundColor = '#E9E9EA',                     opacity = 1,                     transition = 'background-color 500ms'                   )                 )               )             )           )         )       ),       FormGroup(         FormControlLabel(           control = Switch.shinyInput(             inputId = \"ios-switch\",             value = TRUE,             className = \"ios-switch\",             sx = list(m = 1),             disableRipple = TRUE           ),           label = \"iOS style\"         )       )     )   ) }  server <- function(input, output, session) {    }  shinyApp(ui, server)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/articles/switch.html","id":"label-placement","dir":"Articles","previous_headings":"Switch","what":"Label placement","title":"Switch","text":"can change placement label:","code":"import * as React from 'react'; import Switch from '@mui/material/Switch'; import FormGroup from '@mui/material/FormGroup'; import FormControlLabel from '@mui/material/FormControlLabel';  export default function FormControlLabelPosition() {   return (     <FormGroup aria-label=\"position\" row>       <FormControlLabel         value=\"top\"         control={<Switch color=\"primary\" />}         label=\"Top\"         labelPlacement=\"top\"       />       <FormControlLabel         value=\"start\"         control={<Switch color=\"primary\" />}         label=\"Start\"         labelPlacement=\"start\"       />       <FormControlLabel         value=\"bottom\"         control={<Switch color=\"primary\" />}         label=\"Bottom\"         labelPlacement=\"bottom\"       />       <FormControlLabel         value=\"end\"         control={<Switch color=\"primary\" />}         label=\"End\"         labelPlacement=\"end\"       />     <\/FormGroup>   ); } library(shiny)  ui <- function() {   CssBaseline(     FormGroup(       \"aria-label\" = \"position\",       row = TRUE,       FormControlLabel(         value = \"top\",         control = Switch.shinyInput(           inputId = \"switch-top\",           value = FALSE,           color = \"primary\"         ),         label = \"Top\",         labelPlacement = \"top\"       ),       FormControlLabel(         value = \"start\",         control = Switch.shinyInput(           inputId = \"switch-start\",           value = FALSE,           color = \"primary\"         ),         label = \"Start\",         labelPlacement = \"start\"       ),       FormControlLabel(         value = \"bottom\",         control = Switch.shinyInput(           inputId = \"switch-bottom\",           value = FALSE,           color = \"primary\"         ),         label = \"Bottom\",         labelPlacement = \"bottom\"       ),       FormControlLabel(         value = \"end\",         control = Switch.shinyInput(           inputId = \"switch-end\",           value = FALSE,           color = \"primary\"         ),         label = \"End\",         labelPlacement = \"end\"       )     )   ) }  server <- function(input, output, session) {    }  shinyApp(ui, server)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/articles/switch.html","id":"when-to-use","dir":"Articles","previous_headings":"Switch","what":"When to use","title":"Switch","text":"Checkboxes vs. Switches","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/articles/switch.html","id":"accessibility","dir":"Articles","previous_headings":"Switch","what":"Accessibility","title":"Switch","text":"render element checkbox role switch role since role isn’t widely supported yet. Please test first assistive technology target audience supports role properly. can change role <Switch inputProps={{ role: 'switch' }}> form controls labels, includes radio buttons, checkboxes, switches. cases, done using <label> element (FormControlLabel). label can’t used, ’s necessary add attribute directly input component. case, can apply additional attribute (example aria-label, aria-labelledby, title) via inputProps prop.","code":"<Switch value=\"checkedA\" inputProps={{ 'aria-label': 'Switch A' }} /> library(shiny)  AccessibleSwitch <- function() {   CssBaseline(     Switch.shinyInput(       inputId = \"accessible-switch\",       value = FALSE,       inputProps = list('aria-label' = 'Switch A')     )   ) }"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/articles/textfield.html","id":"text-field","dir":"Articles","previous_headings":"","what":"Text Field","title":"TextField","text":"Text Fields let users enter edit text. Text fields allow users enter text UI. typically appear forms dialogs.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/articles/textfield.html","id":"basic-textfield","dir":"Articles","previous_headings":"Text Field","what":"Basic TextField","title":"TextField","text":"TextField wrapper component complete form control including label, input, help text. comes three variants: outlined (default), filled, standard.","code":"import * as React from 'react'; import Box from '@mui/material/Box'; import TextField from '@mui/material/TextField';  export default function BasicTextFields() {   return (     <Box       component=\"form\"       sx={{ '& > :not(style)': { m: 1, width: '25ch' } }}       noValidate       autoComplete=\"off\"     >       <TextField id=\"outlined-basic\" label=\"Outlined\" variant=\"outlined\" />       <TextField id=\"filled-basic\" label=\"Filled\" variant=\"filled\" />       <TextField id=\"standard-basic\" label=\"Standard\" variant=\"standard\" />     <\/Box>   ); } library(shiny)  ui <- shinyMaterialUIPage(   Box(     component = \"form\",     sx = list('& > :not(style)' = list(m = 1, width = '25ch')),     noValidate = TRUE,     autoComplete = \"off\",     TextField.shinyInput(       inputId = \"outlined-basic\",       value = \"\",       label = \"Outlined\",       variant = \"outlined\"     ),     TextField.shinyInput(       inputId = \"filled-basic\",       value = \"\",       label = \"Filled\",       variant = \"filled\"     ),     TextField.shinyInput(       inputId = \"standard-basic\",       value = \"\",       label = \"Standard\",       variant = \"standard\"     )   ) )  server <- function(input, output, session) {   # Access input values with input$`outlined-basic`, input$`filled-basic`, etc. }  shinyApp(ui, server)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/articles/textfield.html","id":"form-props","dir":"Articles","previous_headings":"Text Field","what":"Form props","title":"TextField","text":"Standard form attributes supported, example required, disabled, type, etc. well helperText used give context field’s input, input used.","code":"import * as React from 'react'; import Box from '@mui/material/Box'; import TextField from '@mui/material/TextField';  export default function FormPropsTextFields() {   return (     <Box       component=\"form\"       sx={{ '& .MuiTextField-root': { m: 1, width: '25ch' } }}       noValidate       autoComplete=\"off\"     >       <div>         <TextField           required           id=\"outlined-required\"           label=\"Required\"           defaultValue=\"Hello World\"         />         <TextField           disabled           id=\"outlined-disabled\"           label=\"Disabled\"           defaultValue=\"Hello World\"         />         <TextField           id=\"outlined-password-input\"           label=\"Password\"           type=\"password\"           autoComplete=\"current-password\"         />         <TextField           id=\"outlined-read-only-input\"           label=\"Read Only\"           defaultValue=\"Hello World\"           slotProps={{             input: {               readOnly: true,             },           }}         />         <TextField           id=\"outlined-number\"           label=\"Number\"           type=\"number\"           slotProps={{             input: {               step: 300,             },           }}         />         <TextField id=\"outlined-search\" label=\"Search field\" type=\"search\" />         <TextField           id=\"outlined-helperText\"           label=\"Helper text\"           defaultValue=\"Default Value\"           helperText=\"Some important text\"         />       <\/div>     <\/Box>   ); } library(shiny)  ui <- shinyMaterialUIPage(   Box(     component = \"form\",     sx = list('& .MuiTextField-root' = list(m = 1, width = '25ch')),     noValidate = TRUE,     autoComplete = \"off\",     div(       TextField.shinyInput(         inputId = \"outlined-required\",         value = \"Hello World\",         label = \"Required\",         required = TRUE       ),       TextField.shinyInput(         inputId = \"outlined-disabled\",         value = \"Hello World\",         label = \"Disabled\",         disabled = TRUE       ),       TextField.shinyInput(         inputId = \"outlined-password-input\",         value = \"\",         label = \"Password\",         type = \"password\",         autoComplete = \"current-password\"       ),       TextField.shinyInput(         inputId = \"outlined-read-only-input\",         value = \"Hello World\",         label = \"Read Only\",         slotProps = list(           input = list(             readOnly = TRUE           )         )       ),       TextField.shinyInput(         inputId = \"outlined-number\",         value = \"\",         label = \"Number\",         type = \"number\",         slotProps = list(           input = list(             step = 300           )         )       ),       TextField.shinyInput(         inputId = \"outlined-search\",         value = \"\",         label = \"Search field\",         type = \"search\"       ),       TextField.shinyInput(         inputId = \"outlined-helperText\",         value = \"Default Value\",         label = \"Helper text\",         helperText = \"Some important text\"       )     )   ) )  server <- function(input, output, session) {   # Handle input values }  shinyApp(ui, server)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/articles/textfield.html","id":"controlling-the-html-input","dir":"Articles","previous_headings":"Text Field","what":"Controlling the HTML input","title":"TextField","text":"Use slotProps.htmlInput pass attributes underlying <input> element. rendered HTML input look like :","code":"<TextField slotProps={{ htmlInput: { 'data-testid': '…' } }} /> library(shiny)  ControlledInput <- function() {   CssBaseline(     TextField.shinyInput(       inputId = \"controlled-input\",       value = \"\",       slotProps = list(         htmlInput = list(           'data-testid' = 'test-input'         )       )     )   ) } <input   aria-invalid=\"false\"   class=\"MuiInputBase-input MuiOutlinedInput-input\"   type=\"text\"   data-testid=\"test-input\" />"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/articles/textfield.html","id":"validation","dir":"Articles","previous_headings":"Text Field","what":"Validation","title":"TextField","text":"error prop toggles error state. helperText prop can used provide feedback user error.","code":"import * as React from 'react'; import Box from '@mui/material/Box'; import TextField from '@mui/material/TextField';  export default function ValidationTextFields() {   return (     <Box       component=\"form\"       sx={{ '& .MuiTextField-root': { m: 1, width: '25ch' } }}       noValidate       autoComplete=\"off\"     >       <div>         <TextField           error           id=\"outlined-error\"           label=\"Error\"           defaultValue=\"Hello World\"         />         <TextField           error           id=\"outlined-error-helper-text\"           label=\"Error\"           defaultValue=\"Hello World\"           helperText=\"Incorrect entry.\"         />       <\/div>       <div>         <TextField           error           id=\"filled-error\"           label=\"Error\"           defaultValue=\"Hello World\"           variant=\"filled\"         />         <TextField           error           id=\"filled-error-helper-text\"           label=\"Error\"           defaultValue=\"Hello World\"           helperText=\"Incorrect entry.\"           variant=\"filled\"         />       <\/div>       <div>         <TextField           error           id=\"standard-error\"           label=\"Error\"           defaultValue=\"Hello World\"           variant=\"standard\"         />         <TextField           error           id=\"standard-error-helper-text\"           label=\"Error\"           defaultValue=\"Hello World\"           helperText=\"Incorrect entry.\"           variant=\"standard\"         />       <\/div>     <\/Box>   ); } library(shiny)  ui <- shinyMaterialUIPage(   Box(     component = \"form\",     sx = list('& .MuiTextField-root' = list(m = 1, width = '25ch')),     noValidate = TRUE,     autoComplete = \"off\",     div(       TextField.shinyInput(         inputId = \"outlined-error\",         value = \"Hello World\",         label = \"Error\",         error = TRUE       ),       TextField.shinyInput(         inputId = \"outlined-error-helper-text\",         value = \"Hello World\",         label = \"Error\",         error = TRUE,         helperText = \"Incorrect entry.\"       )     ),     div(       TextField.shinyInput(         inputId = \"filled-error\",         value = \"Hello World\",         label = \"Error\",         error = TRUE,         variant = \"filled\"       ),       TextField.shinyInput(         inputId = \"filled-error-helper-text\",         value = \"Hello World\",         label = \"Error\",         error = TRUE,         helperText = \"Incorrect entry.\",         variant = \"filled\"       )     ),     div(       TextField.shinyInput(         inputId = \"standard-error\",         value = \"Hello World\",         label = \"Error\",         error = TRUE,         variant = \"standard\"       ),       TextField.shinyInput(         inputId = \"standard-error-helper-text\",         value = \"Hello World\",         label = \"Error\",         error = TRUE,         helperText = \"Incorrect entry.\",         variant = \"standard\"       )     )   ) )  server <- function(input, output, session) {   # Handle validation logic }  shinyApp(ui, server)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/articles/textfield.html","id":"multiline","dir":"Articles","previous_headings":"Text Field","what":"Multiline","title":"TextField","text":"multiline prop transforms Text Field MUI Base Textarea Autosize element. Unless rows prop set, height text field dynamically matches content. can use minRows maxRows props bound .","code":"import * as React from 'react'; import Box from '@mui/material/Box'; import TextField from '@mui/material/TextField';  export default function MultilineTextFields() {   return (     <Box       component=\"form\"       sx={{ '& .MuiTextField-root': { m: 1, width: '25ch' } }}       noValidate       autoComplete=\"off\"     >       <div>         <TextField           id=\"outlined-multiline-flexible\"           label=\"Multiline\"           multiline           maxRows={4}         />         <TextField           id=\"outlined-textarea\"           label=\"Multiline Placeholder\"           placeholder=\"Placeholder\"           multiline         />         <TextField           id=\"outlined-multiline-static\"           label=\"Multiline\"           multiline           rows={4}           defaultValue=\"Default Value\"         />       <\/div>     <\/Box>   ); } library(shiny)  ui <- shinyMaterialUIPage(   Box(     component = \"form\",     sx = list('& .MuiTextField-root' = list(m = 1, width = '25ch')),     noValidate = TRUE,     autoComplete = \"off\",     div(       TextField.shinyInput(         inputId = \"outlined-multiline-flexible\",         value = \"\",         label = \"Multiline\",         multiline = TRUE,         maxRows = 4       ),       TextField.shinyInput(         inputId = \"outlined-textarea\",         value = \"\",         label = \"Multiline Placeholder\",         placeholder = \"Placeholder\",         multiline = TRUE       ),       TextField.shinyInput(         inputId = \"outlined-multiline-static\",         value = \"Default Value\",         label = \"Multiline\",         multiline = TRUE,         rows = 4       )     )   ) )  server <- function(input, output, session) {   # Handle multiline input }  shinyApp(ui, server)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/articles/textfield.html","id":"icons","dir":"Articles","previous_headings":"Text Field","what":"Icons","title":"TextField","text":"multiple ways display icon text field.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/articles/textfield.html","id":"input-adornments","dir":"Articles","previous_headings":"Text Field > Icons","what":"Input Adornments","title":"TextField","text":"main way InputAdornment. can used add prefix, suffix, action input. instance, can use icon button hide reveal password.","code":"import * as React from 'react'; import Box from '@mui/material/Box'; import IconButton from '@mui/material/IconButton'; import Input from '@mui/material/Input'; import FilledInput from '@mui/material/FilledInput'; import OutlinedInput from '@mui/material/OutlinedInput'; import InputLabel from '@mui/material/InputLabel'; import InputAdornment from '@mui/material/InputAdornment'; import FormHelperText from '@mui/material/FormHelperText'; import FormControl from '@mui/material/FormControl'; import TextField from '@mui/material/TextField'; import Visibility from '@mui/icons-material/Visibility'; import VisibilityOff from '@mui/icons-material/VisibilityOff';  export default function InputAdornments() {   const [showPassword, setShowPassword] = React.useState(false);    const handleClickShowPassword = () => setShowPassword((show) => !show);    const handleMouseDownPassword = (event) => {     event.preventDefault();   };    return (     <Box sx={{ display: 'flex', flexWrap: 'wrap' }}>       <div>         <TextField           label=\"With normal TextField\"           id=\"outlined-start-adornment\"           sx={{ m: 1, width: '25ch' }}           slotProps={{             input: {               startAdornment: <InputAdornment position=\"start\">kg<\/InputAdornment>,             },           }}         />         <FormControl sx={{ m: 1, width: '25ch' }} variant=\"outlined\">           <OutlinedInput             id=\"outlined-adornment-weight\"             endAdornment={<InputAdornment position=\"end\">kg<\/InputAdornment>}             aria-describedby=\"outlined-weight-helper-text\"           />           <FormHelperText id=\"outlined-weight-helper-text\">Weight<\/FormHelperText>         <\/FormControl>         <FormControl sx={{ m: 1, width: '25ch' }} variant=\"outlined\">           <InputLabel htmlFor=\"outlined-adornment-password\">Password<\/InputLabel>           <OutlinedInput             id=\"outlined-adornment-password\"             type={showPassword ? 'text' : 'password'}             endAdornment={               <InputAdornment position=\"end\">                 <IconButton                   aria-label=\"toggle password visibility\"                   onClick={handleClickShowPassword}                   onMouseDown={handleMouseDownPassword}                   edge=\"end\"                 >                   {showPassword ? <VisibilityOff /> : <Visibility />}                 <\/IconButton>               <\/InputAdornment>             }             label=\"Password\"           />         <\/FormControl>         <FormControl fullWidth sx={{ m: 1 }}>           <InputLabel htmlFor=\"outlined-adornment-amount\">Amount<\/InputLabel>           <OutlinedInput             id=\"outlined-adornment-amount\"             startAdornment={<InputAdornment position=\"start\">$<\/InputAdornment>}             label=\"Amount\"           />         <\/FormControl>       <\/div>     <\/Box>   ); } library(shiny)  ui <- shinyMaterialUIPage(   Box(     sx = list(display = 'flex', flexWrap = 'wrap'),     div(       TextField.shinyInput(         inputId = \"outlined-start-adornment\",         value = \"\",         label = \"With normal TextField\",         sx = list(m = 1, width = '25ch'),         slotProps = list(           input = list(             startAdornment = InputAdornment(position = \"start\", \"kg\")           )         )       ),       FormControl(         sx = list(m = 1, width = '25ch'),         variant = \"outlined\",         OutlinedInput.shinyInput(           inputId = \"outlined-adornment-weight\",           endAdornment = InputAdornment(position = \"end\", \"kg\"),           \"aria-describedby\" = \"outlined-weight-helper-text\"         ),         FormHelperText(id = \"outlined-weight-helper-text\", \"Weight\")       ),       FormControl(         sx = list(m = 1, width = '25ch'),         variant = \"outlined\",         InputLabel(htmlFor = \"outlined-adornment-password\", \"Password\"),         OutlinedInput.shinyInput(           inputId = \"outlined-adornment-password-input\",           type = \"password\",           endAdornment = InputAdornment(             position = \"end\",             IconButton(               \"aria-label\" = \"toggle password visibility\",               id = \"toggle-password\",               edge = \"end\",               shiny::icon(\"eye\")             )           ),           label = \"Password\"         )       ),       FormControl(         fullWidth = TRUE,         sx = list(m = 1),         InputLabel(htmlFor = \"outlined-adornment-amount\", \"Amount\"),         OutlinedInput.shinyInput(           inputId = \"outlined-adornment-amount\",           startAdornment = InputAdornment(position = \"start\", \"$\"),           label = \"Amount\"         )       )     )   ) )  server <- function(input, output, session) {   showPassword <- reactiveVal(FALSE)      observeEvent(input$`toggle-password`, {     showPassword(!showPassword())     updateOutlinedInput.shinyInput(       session,       inputId = \"outlined-adornment-password-input\",       type = if(showPassword()) \"text\" else \"password\",       endAdornment = InputAdornment(             position = \"end\",             IconButton(               \"aria-label\" = \"toggle password visibility\",               id = \"toggle-password\",               edge = \"end\",               shiny::icon(\"eye-slash\")             )           )     )   }) }  shinyApp(ui, server)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/articles/textfield.html","id":"sizes","dir":"Articles","previous_headings":"Text Field","what":"Sizes","title":"TextField","text":"Fancy smaller inputs? Use size prop. filled variant input height can reduced rendering label outside .","code":"import * as React from 'react'; import TextField from '@mui/material/TextField';  export default function TextFieldSizes() {   return (     <div>       <TextField         label=\"Size\"         id=\"outlined-size-small\"         defaultValue=\"Small\"         size=\"small\"       />       <TextField         label=\"Size\"         id=\"outlined-size-normal\"         defaultValue=\"Normal\"       />     <\/div>   ); } library(shiny)  ui <- function() {   CssBaseline(     Box(       p = 3,       TextField.shinyInput(         inputId = \"outlined-size-small\",         value = \"Small\",         label = \"Size\",         size = \"small\"       ),       TextField.shinyInput(         inputId = \"outlined-size-normal\",         value = \"Normal\",         label = \"Size\"       )     )   ) }  server <- function(input, output, session) { }  shinyApp(ui, server)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/articles/textfield.html","id":"margin","dir":"Articles","previous_headings":"Text Field","what":"Margin","title":"TextField","text":"margin prop can used alter vertical spacing text field. Using none (default) doesn’t apply margins FormControl whereas dense normal .","code":"import * as React from 'react'; import Box from '@mui/material/Box'; import TextField from '@mui/material/TextField';  export default function LayoutTextFields() {   return (     <Box       component=\"form\"       sx={{ '& .MuiTextField-root': { m: 1, width: '25ch' } }}       noValidate       autoComplete=\"off\"     >       <div>         <TextField           label={'margin=\"none\"'}           id=\"margin-none\"         />         <TextField           label={'margin=\"dense\"'}           id=\"margin-dense\"           margin=\"dense\"         />         <TextField           label={'margin=\"normal\"'}           id=\"margin-normal\"           margin=\"normal\"         />       <\/div>     <\/Box>   ); } library(shiny)  ui <- function() {   CssBaseline(     Box(       component = \"form\",       sx = list('& .MuiTextField-root' = list(m = 1, width = '25ch')),       noValidate = TRUE,       autoComplete = \"off\",       div(         TextField.shinyInput(           inputId = \"margin-none\",           value = \"\",           label = 'margin=\"none\"'         ),         TextField.shinyInput(           inputId = \"margin-dense\",           value = \"\",           label = 'margin=\"dense\"',           margin = \"dense\"         ),         TextField.shinyInput(           inputId = \"margin-normal\",           value = \"\",           label = 'margin=\"normal\"',           margin = \"normal\"         )       )     )   ) }  server <- function(input, output, session) {    }  shinyApp(ui, server)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/articles/textfield.html","id":"full-width","dir":"Articles","previous_headings":"Text Field","what":"Full width","title":"TextField","text":"fullWidth can used make input take full width container.","code":"import * as React from 'react'; import Box from '@mui/material/Box'; import TextField from '@mui/material/TextField';  export default function FullWidthTextField() {   return (     <Box       sx={{ width: 500, maxWidth: '100%' }}     >       <TextField fullWidth label=\"fullWidth\" id=\"fullWidth\" />     <\/Box>   ); } library(shiny)  ui <- function() {   CssBaseline(     Box(       sx = list(width = 500, maxWidth = '100%', p = 3),       TextField.shinyInput(         inputId = \"fullWidth\",         value = \"\",         fullWidth = TRUE,         label = \"fullWidth\"       )     )   ) }  server <- function(input, output, session) {    }  shinyApp(ui, server)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/articles/textfield.html","id":"uncontrolled-vs--controlled","dir":"Articles","previous_headings":"Text Field","what":"Uncontrolled vs. Controlled","title":"TextField","text":"component can controlled uncontrolled.","code":"import * as React from 'react'; import Box from '@mui/material/Box'; import TextField from '@mui/material/TextField';  export default function StateTextFields() {   const [name, setName] = React.useState('Cat in the Hat');    return (     <Box       component=\"form\"       sx={{ '& > :not(style)': { m: 1, width: '25ch' } }}       noValidate       autoComplete=\"off\"     >       <TextField         id=\"outlined-controlled\"         label=\"Controlled\"         value={name}         onChange={(event: React.ChangeEvent<HTMLInputElement>) => {           setName(event.target.value);         }}       />       <TextField         id=\"outlined-uncontrolled\"         label=\"Uncontrolled\"         defaultValue=\"foo\"       />     <\/Box>   ); } library(shiny)  ui <- shinyMaterialUIPage(   Box(     component = \"form\",     sx = list('& > :not(style)' = list(m = 1, width = '25ch')),     noValidate = TRUE,     autoComplete = \"off\",     TextField.shinyInput(       inputId = \"outlined-controlled\",       value = \"Cat in the Hat\",       label = \"Controlled\"     ),     TextField.shinyInput(       inputId = \"outlined-uncontrolled\",       value = \"foo\",       label = \"Uncontrolled\"     ),     br(),     textOutput(\"controlled_value\")   ) )  server <- function(input, output, session) {   output$controlled_value <- renderText({     paste(\"Controlled value:\", input$`outlined-controlled`)   }) }  shinyApp(ui, server)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/articles/textfield.html","id":"components","dir":"Articles","previous_headings":"Text Field","what":"Components","title":"TextField","text":"TextField composed smaller components ( FormControl, Input, FilledInput, InputLabel, OutlinedInput, FormHelperText ) can leverage directly significantly customize form inputs. might also noticed native HTML input properties missing TextField component. purpose. component takes care used properties. , ’s user use underlying component shown following demo. Still, can use slotProps.htmlInput (slotProps.input, slotProps.inputLabel properties) want avoid boilerplate.","code":"import * as React from 'react'; import Box from '@mui/material/Box'; import Input from '@mui/material/Input'; import InputLabel from '@mui/material/InputLabel'; import InputAdornment from '@mui/material/InputAdornment'; import FormControl from '@mui/material/FormControl'; import AccountCircle from '@mui/icons-material/AccountCircle';  export default function InputWithIcon() {   return (     <Box sx={{ '& > :not(style)': { m: 1 } }}>       <FormControl variant=\"standard\">         <InputLabel htmlFor=\"input-with-icon-adornment\">           With a start adornment         <\/InputLabel>         <Input           id=\"input-with-icon-adornment\"           startAdornment={             <InputAdornment position=\"start\">               <AccountCircle />             <\/InputAdornment>           }         />       <\/FormControl>     <\/Box>   ); } library(shiny)  InputWithIcon <- function() {   CssBaseline(     Box(       sx = list('& > :not(style)' = list(m = 1)),       FormControl(         variant = \"standard\",         InputLabel(           htmlFor = \"input-with-icon-adornment\",           \"With a start adornment\"         ),         Input(           id = \"input-with-icon-adornment\",           startAdornment = InputAdornment(             position = \"start\",             shiny::icon(\"user-circle\")           )         )       )     )   ) } InputWithIcon()"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/articles/textfield.html","id":"color","dir":"Articles","previous_headings":"Text Field","what":"Color","title":"TextField","text":"color prop changes highlight color text field focused.","code":"import * as React from 'react'; import Box from '@mui/material/Box'; import TextField from '@mui/material/TextField';  export default function ColorTextFields() {   return (     <Box       component=\"form\"       sx={{ '& > :not(style)': { m: 1, width: '25ch' } }}       noValidate       autoComplete=\"off\"     >       <TextField         label=\"Outlined secondary\"         color=\"secondary\"         focused       />       <TextField         label=\"Filled success\"         variant=\"filled\"         color=\"success\"         focused       />       <TextField         label=\"Standard warning\"         variant=\"standard\"         color=\"warning\"         focused       />     <\/Box>   ); } library(shiny)  ui <- function() {   CssBaseline(     Box(       component = \"form\",       sx = list('& > :not(style)' = list(m = 1, width = '25ch')),       noValidate = TRUE,       autoComplete = \"off\",       TextField.shinyInput(         inputId = \"outlined-secondary\",         value = \"\",         label = \"Outlined secondary\",         color = \"secondary\",         focused = TRUE       ),       TextField.shinyInput(         inputId = \"filled-success\",         value = \"\",         label = \"Filled success\",         variant = \"filled\",         color = \"success\",         focused = TRUE       ),       TextField.shinyInput(         inputId = \"standard-warning\",         value = \"\",         label = \"Standard warning\",         variant = \"standard\",         color = \"warning\",         focused = TRUE       )     )   ) }  server <- function(input, output, session) {    }  shinyApp(ui, server)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/articles/textfield.html","id":"customization","dir":"Articles","previous_headings":"Text Field","what":"Customization","title":"TextField","text":"examples customizing component. can learn overrides documentation page.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/articles/textfield.html","id":"using-the-styled-api","dir":"Articles","previous_headings":"Text Field > Customization","what":"Using the styled API","title":"TextField","text":"","code":"import * as React from 'react'; import { alpha, styled } from '@mui/material/styles'; import InputBase from '@mui/material/InputBase'; import Box from '@mui/material/Box'; import InputLabel from '@mui/material/InputLabel'; import TextField from '@mui/material/TextField'; import FormControl from '@mui/material/FormControl';  const BootstrapInput = styled(InputBase)(({ theme }) => ({   'label + &': {     marginTop: theme.spacing(3),   },   '& .MuiInputBase-input': {     borderRadius: 4,     position: 'relative',     backgroundColor: '#F3F6F9',     border: '1px solid',     borderColor: '#E0E3E7',     fontSize: 16,     width: 'auto',     padding: '10px 12px',     transition: theme.transitions.create([       'border-color',       'background-color',       'box-shadow',     ]),     // Use the system font instead of the default Roboto font.     fontFamily: [       '-apple-system',       'BlinkMacSystemFont',       '\"Segoe UI\"',       'Roboto',       '\"Helvetica Neue\"',       'Arial',       'sans-serif',       '\"Apple Color Emoji\"',       '\"Segoe UI Emoji\"',       '\"Segoe UI Symbol\"',     ].join(','),     '&:focus': {       boxShadow: `${alpha(theme.palette.primary.main, 0.25)} 0 0 0 0.2rem`,       borderColor: theme.palette.primary.main,     },   }, }));  export default function CustomizedInputsStyled() {   return (     <Box       component=\"form\"       noValidate       sx={{ display: 'flex', flexWrap: 'wrap' }}     >       <FormControl variant=\"standard\">         <InputLabel shrink htmlFor=\"bootstrap-input\">           Bootstrap         <\/InputLabel>         <BootstrapInput defaultValue=\"react-bootstrap\" id=\"bootstrap-input\" />       <\/FormControl>     <\/Box>   ); } library(shiny)  CustomizedInputsStyled <- function() {   CssBaseline(     ThemeProvider(       theme = list(         components = list(           MuiInputBase = list(             styleOverrides = list(               root = list(                 \"&.bootstrap-input\" = list(                   'label + &' = list(                     marginTop = \"24px\"                   ),                   '& .MuiInputBase-input' = list(                     borderRadius = 4,                     position = 'relative',                     backgroundColor = '#F3F6F9',                     border = '1px solid',                     borderColor = '#E0E3E7',                     fontSize = 16,                     width = 'auto',                     padding = '10px 12px',                     transition = 'border-color 0.15s ease-in-out, background-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out',                     fontFamily = paste(                       \"-apple-system\",                       \"BlinkMacSystemFont\",                       '\"Segoe UI\"',                       \"Roboto\",                       '\"Helvetica Neue\"',                       \"Arial\",                       \"sans-serif\",                       '\"Apple Color Emoji\"',                       '\"Segoe UI Emoji\"',                       '\"Segoe UI Symbol\"',                       sep = \",\"                     ),                     '&:focus' = list(                       boxShadow = 'rgba(25, 118, 210, 0.25) 0 0 0 0.2rem',                       borderColor = '#1976d2'                     )                   )                 )               )             )           )         )       ),       Box(         component = \"form\",         noValidate = TRUE,         sx = list(display = 'flex', flexWrap = 'wrap'),         FormControl(           variant = \"standard\",           InputLabel(             shrink = TRUE,             htmlFor = \"bootstrap-input\",             \"Bootstrap\"           ),           InputBase(             className = \"bootstrap-input\",             defaultValue = \"react-bootstrap\",             id = \"bootstrap-input\"           )         )       )     )   ) }"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/articles/textfield.html","id":"using-the-theme-style-overrides-api","dir":"Articles","previous_headings":"Text Field > Customization","what":"Using the theme style overrides API","title":"TextField","text":"Use styleOverrides key change style injected Material UI DOM. See theme style overrides documentation details. Customization stop CSS. can use composition build custom components give app unique feel. example using InputBase component, inspired Google Maps. 🎨 looking inspiration, can check MUI Treasury’s customization examples.","code":""},{"path":[]},{"path":"https://felixluginbuhl.com/shinyMaterialUI/articles/textfield.html","id":"shrink","dir":"Articles","previous_headings":"Text Field > Limitations","what":"Shrink","title":"TextField","text":"input label “shrink” state isn’t always correct. input label supposed shrink soon input displaying something. circumstances, can’t determine “shrink” state (number input, datetime input, Stripe input). might notice overlap. workaround issue, can force “shrink” state label. ","code":"<TextField slotProps={{ inputLabel: { shrink: true } }} /> <InputLabel shrink>Count<\/InputLabel> library(shiny)  ui <- function() {   CssBaseline(     Box(       p = 3,       TextField.shinyInput(         inputId = \"shrink-example\",         value = \"\",         slotProps = list(           inputLabel = list(shrink = TRUE)         )       ),       br(),       FormControl(         InputLabel(shrink = TRUE, \"Count\"),         Input()       )     )   ) }  server <- function(input, output, session) {    }  shinyApp(ui, server)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/articles/textfield.html","id":"floating-label","dir":"Articles","previous_headings":"Text Field > Limitations","what":"Floating label","title":"TextField","text":"floating label absolutely positioned. won’t impact layout page. Make sure input larger label display correctly.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/articles/textfield.html","id":"typenumber","dir":"Articles","previous_headings":"Text Field > Limitations","what":"type=“number”","title":"TextField","text":"need text field number validation, can use MUI Base’s Number Input instead. can follow GitHub issue track progress introducing Number Input component Material UI.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/articles/textfield.html","id":"helper-text","dir":"Articles","previous_headings":"Text Field > Limitations","what":"Helper text","title":"TextField","text":"helper text prop affects height text field. two text fields placed side side, one helper text one without, different heights. example: can fixed passing space character helperText prop:","code":"<TextField   helperText=\"Please enter your name\"   id=\"demo-helper-text-misaligned\"   label=\"Name\" /> <TextField   id=\"demo-helper-text-misaligned-no-helper\"   label=\"Name\" /> <TextField   helperText=\"Please enter your name\"   id=\"demo-helper-text-aligned\"   label=\"Name\" /> <TextField   helperText=\" \"   id=\"demo-helper-text-aligned-no-helper\"   label=\"Name\" /> library(shiny)  ui <- function() {   CssBaseline(     div(       h4(\"Misaligned:\"),       TextField.shinyInput(         inputId = \"demo-helper-text-misaligned\",         value = \"\",         helperText = \"Please enter your name\",         label = \"Name\"       ),       TextField.shinyInput(         inputId = \"demo-helper-text-misaligned-no-helper\",         value = \"\",         label = \"Name\"       ),       h4(\"Aligned:\"),       TextField.shinyInput(         inputId = \"demo-helper-text-aligned\",         value = \"\",         helperText = \"Please enter your name\",         label = \"Name\"       ),       TextField.shinyInput(         inputId = \"demo-helper-text-aligned-no-helper\",         value = \"\",         helperText = \" \",         label = \"Name\"       )     )   ) }  server <- function(input, output, session) {    }  shinyApp(ui, server)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/articles/textfield.html","id":"integration-with-3rd-party-input-libraries","dir":"Articles","previous_headings":"Text Field","what":"Integration with 3rd party input libraries","title":"TextField","text":"can use third-party libraries format input. provide custom implementation <input> element inputComponent property. following demo uses react-imask react-number-format libraries. concept applied , example react-stripe-element. provided input component expose ref value implements following interface:","code":"interface InputElement {   focus(): void;   value?: string; } const MyInputComponent = React.forwardRef((props, ref) => {   const { component: Component, ...other } = props;    // implement `InputElement` interface   React.useImperativeHandle(ref, () => ({     focus: () => {       // logic to focus the rendered component from 3rd party belongs here     },     // hiding the value e.g. react-stripe-elements   }));    // `Component` will be your `SomeThirdPartyComponent` from below   return <Component {...other} />; });  // usage <TextField   slotProps={{     input: {       inputComponent: MyInputComponent,       inputProps: {         component: SomeThirdPartyComponent,       },     },   }} />;"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/articles/textfield.html","id":"accessibility","dir":"Articles","previous_headings":"Text Field","what":"Accessibility","title":"TextField","text":"order text field accessible, input linked label helper text. underlying DOM nodes structure: using TextField component, just provide unique id unless ’re using TextField client-side. UI hydrated TextField without explicit id associated labels. composing component:","code":"<div class=\"form-control\">   <label for=\"my-input\">Email address<\/label>   <input id=\"my-input\" aria-describedby=\"my-helper-text\" />   <span id=\"my-helper-text\">We'll never share your email.<\/span> <\/div> <FormControl>   <InputLabel htmlFor=\"my-input\">Email address<\/InputLabel>   <Input id=\"my-input\" aria-describedby=\"my-helper-text\" />   <FormHelperText id=\"my-helper-text\">We'll never share your email.<\/FormHelperText> <\/FormControl> ui <- function() {   CssBaseline(     FormControl(       InputLabel(htmlFor = \"my-input\", \"Email address\"),       Input(         id = \"my-input\",         \"aria-describedby\" = \"my-helper-text\"       ),       FormHelperText(         id = \"my-helper-text\",         \"We'll never share your email.\"       )     )   ) }  server <- function(input, output, session) {    }  shinyApp(ui, server)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Felix Luginbuhl. Author, maintainer. MUI. Contributor, copyright holder.           MUI template <https://mui.com/>","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Luginbuhl F (2025). shinyMaterialUI: 'Material UI' 'shiny' Apps 'Quarto'. R package version 0.1.0, https://felixluginbuhl.com/shinyMaterialUI.","code":"@Manual{,   title = {shinyMaterialUI: 'Material UI' for 'shiny' Apps and 'Quarto'},   author = {Felix Luginbuhl},   year = {2025},   note = {R package version 0.1.0},   url = {https://felixluginbuhl.com/shinyMaterialUI}, }"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/index.html","id":"shinymaterialui","dir":"","previous_headings":"","what":"Material UI for shiny Apps and Quarto","title":"Material UI for shiny Apps and Quarto","text":"shinyMaterialUI provides wrapper around Material UI, popular React framework.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/index.html","id":"install","dir":"","previous_headings":"","what":"Install","title":"Material UI for shiny Apps and Quarto","text":"","code":"remotes::install_github(\"lgnbhl/shinyMaterialUI\")"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Material UI for shiny Apps and Quarto","text":"quickly get started example: MUI, company behind Material UI, made template examples. Using R package reactRouter, possible reproduce R:","code":"library(shinyMaterialUI)  # all examples available: shinyMaterialUIExample() shinyMaterialUIExample(\"showcase\") shinyMaterialUIExample(\"mui-template-dashboard\")"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/index.html","id":"shiny-inputs-wrappers","dir":"","previous_headings":"","what":"Shiny inputs wrappers","title":"Material UI for shiny Apps and Quarto","text":"use Material UI components Shiny inputs, package provides *.shinyInput wrappers functions (info read article shiny.react documentation). example, use Button component Shiny, use Button.shinyInput() instead.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/index.html","id":"bootstrap-conflict","dir":"","previous_headings":"","what":"Bootstrap conflict","title":"Material UI for shiny Apps and Quarto","text":"shinyMaterialUI can enter conflict Bootstrap CSS framework, used default Shiny functions shiny::fluidPage() friends. normalize CSS page sure components render correctly, please wrap function CssBaseline(). Given Material UI high customization, can easily fix styling issues using CSS proprieties using sx argument. create Shiny app without Bootstrap, can use shinyMaterialUI::shinyMaterialUIPage().","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/index.html","id":"contribute","dir":"","previous_headings":"","what":"Contribute","title":"Material UI for shiny Apps and Quarto","text":"issue, question want contribute pull request, don’t hesitate write https://github.com/lgnbhl/shinyMaterialUI. updates follow Felix Luginbuhl LinkedIn.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 Felix Luginbuhl Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Accordion.html","id":null,"dir":"Reference","previous_headings":"","what":"Accordion — Accordion","title":"Accordion — Accordion","text":"https://mui.com/material-ui/api/accordion/","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Accordion.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Accordion — Accordion","text":"","code":"Accordion(...)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Accordion.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Accordion — Accordion","text":"... Props pass component.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Accordion.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Accordion — Accordion","text":"Object shiny.tag class suitable use UI Shiny app.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Accordion.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Accordion — Accordion","text":"children node  Default - content component. classes object  Default - Override extend styles applied component.See CSS classes API details. defaultExpanded bool  Default FALSE true, expands accordion default. disabled bool  Default FALSE true, component disabled. disableGutters bool  Default FALSE true, removes margin two expanded accordion items increase height. expanded bool  Default - true, expands accordion, otherwise collapse . Setting prop enables control accordion. onChange func  Default - Callback fired expand/collapse state changed.Signature:function(event: React.SyntheticEvent, expanded: boolean) => voidevent event source callback. Warning: generic event change event.expanded expanded state accordion. slotProps { heading?: func| object, root?: func| object, transition?: func| object }  Default  props used slot inside. slots { heading?: elementType, root?: elementType, transition?: elementType }  Default  components used slot inside. square bool  Default FALSE true, rounded corners disabled. sx Array<func| object| bool>| func| object  Default - system prop allows defining system overrides well additional CSS styles.See sx page details. TransitionComponent elementType  Default - component used transition. Follow guide learn requirements component.Deprecated－Use slots.transition instead. prop removed future major release. See Migrating deprecated APIs details. TransitionProps object  Default - Props applied transition element. default, element based Transition component.Deprecated－Use slotProps.transition instead. prop removed future major release. See Migrating deprecated APIs details.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/AccordionActions.html","id":null,"dir":"Reference","previous_headings":"","what":"AccordionActions — AccordionActions","title":"AccordionActions — AccordionActions","text":"https://mui.com/material-ui/api/accordion-actions/","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/AccordionActions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"AccordionActions — AccordionActions","text":"","code":"AccordionActions(...)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/AccordionActions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"AccordionActions — AccordionActions","text":"... Props pass component.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/AccordionActions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"AccordionActions — AccordionActions","text":"Object shiny.tag class suitable use UI Shiny app.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/AccordionActions.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"AccordionActions — AccordionActions","text":"children node  Default - content component. classes object  Default - Override extend styles applied component.See CSS classes API details. disableSpacing bool  Default FALSE true, actions additional margin. sx Array<func| object| bool>| func| object  Default - system prop allows defining system overrides well additional CSS styles.See sx page details.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/AccordionDetails.html","id":null,"dir":"Reference","previous_headings":"","what":"AccordionDetails — AccordionDetails","title":"AccordionDetails — AccordionDetails","text":"https://mui.com/material-ui/api/accordion-details/","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/AccordionDetails.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"AccordionDetails — AccordionDetails","text":"","code":"AccordionDetails(...)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/AccordionDetails.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"AccordionDetails — AccordionDetails","text":"... Props pass component.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/AccordionDetails.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"AccordionDetails — AccordionDetails","text":"Object shiny.tag class suitable use UI Shiny app.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/AccordionDetails.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"AccordionDetails — AccordionDetails","text":"children node  Default NA content component. classes object  Default NA Override extend styles applied component.See CSS classes API details. sx Array<func| object| bool>| func| object  Default NA system prop allows defining system overrides well additional CSS styles.See sx page details.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/AccordionSummary.html","id":null,"dir":"Reference","previous_headings":"","what":"AccordionSummary — AccordionSummary","title":"AccordionSummary — AccordionSummary","text":"https://mui.com/material-ui/api/accordion-summary/","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/AccordionSummary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"AccordionSummary — AccordionSummary","text":"","code":"AccordionSummary(...)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/AccordionSummary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"AccordionSummary — AccordionSummary","text":"... Props pass component.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/AccordionSummary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"AccordionSummary — AccordionSummary","text":"Object shiny.tag class suitable use UI Shiny app.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/AccordionSummary.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"AccordionSummary — AccordionSummary","text":"children node  Default - content component. classes object  Default - Override extend styles applied component.See CSS classes API details. expandIcon node  Default - icon display expand indicator. focusVisibleClassName string  Default - prop can help identify element keyboard focus. class name applied element gains focus keyboard interaction. polyfill CSS :focus-visible selector. rationale using feature explained . polyfill can used apply focus-visible class components needed. slotProps { content?: func| object, expandIconWrapper?: func| object, root?: func| object }  Default  props used slot inside. slots { content?: elementType, expandIconWrapper?: elementType, root?: elementType }  Default  components used slot inside. sx Array<func| object| bool>| func| object  Default - system prop allows defining system overrides well additional CSS styles.See sx page details.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Alert.html","id":null,"dir":"Reference","previous_headings":"","what":"Alert — Alert","title":"Alert — Alert","text":"https://mui.com/material-ui/api/alert/","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Alert.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Alert — Alert","text":"","code":"Alert(...)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Alert.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Alert — Alert","text":"... Props pass component.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Alert.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Alert — Alert","text":"Object shiny.tag class suitable use UI Shiny app.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Alert.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Alert — Alert","text":"action node  Default - action display. renders message, end alert. children node  Default - content component. classes object  Default - Override extend styles applied component.See CSS classes API details. closeText string  Default 'Close' Override default label close popup icon button.localization purposes, can use provided translations. color 'error'| 'info'| 'success'| 'warning'| string  Default - color component. Unless provided, value taken severity prop. supports default custom theme colors, can added shown palette customization guide. components { CloseButton?: elementType, CloseIcon?: elementType }  Default  components used slot inside.Deprecated－use slots prop instead. prop removed future major release. See Migrating deprecated APIs details. componentsProps { closeButton?: object, closeIcon?: object }  Default  extra props slot components. can override existing props add new ones.Deprecated－use slotProps prop instead. prop removed future major release. See Migrating deprecated APIs details. icon node  Default - Override icon displayed children. Unless provided, icon mapped value severity prop. Set false remove icon. iconMapping { error?: node, info?: node, success?: node, warning?: node }  Default - component maps severity prop range different icons, instance success . wish change mapping, can provide . Alternatively, can use icon prop override icon displayed. onClose func  Default - Callback fired component requests closed. provided action prop set, close icon button displayed triggers callback clicked.Signature:function(event: React.SyntheticEvent) => voidevent event source callback. role string  Default 'alert' ARIA role attribute element. severity 'error'| 'info'| 'success'| 'warning'| string  Default 'success' severity alert. defines color icon used. slotProps { action?: func| object, closeButton?: func| object, closeIcon?: func| object, icon?: func| object, message?: func| object, root?: func| object }  Default  props used slot inside. slots { action?: elementType, closeButton?: elementType, closeIcon?: elementType, icon?: elementType, message?: elementType, root?: elementType }  Default  components used slot inside. sx Array<func| object| bool>| func| object  Default - system prop allows defining system overrides well additional CSS styles.See sx page details. variant 'filled'| 'outlined'| 'standard'| string  Default 'standard' variant use.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/AlertTitle.html","id":null,"dir":"Reference","previous_headings":"","what":"AlertTitle — AlertTitle","title":"AlertTitle — AlertTitle","text":"https://mui.com/material-ui/api/alert-title/","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/AlertTitle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"AlertTitle — AlertTitle","text":"","code":"AlertTitle(...)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/AlertTitle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"AlertTitle — AlertTitle","text":"... Props pass component.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/AlertTitle.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"AlertTitle — AlertTitle","text":"Object shiny.tag class suitable use UI Shiny app.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/AlertTitle.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"AlertTitle — AlertTitle","text":"children node  Default NA content component. classes object  Default NA Override extend styles applied component.See CSS classes API details. sx Array<func| object| bool>| func| object  Default NA system prop allows defining system overrides well additional CSS styles.See sx page details.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/AppBar.html","id":null,"dir":"Reference","previous_headings":"","what":"AppBar — AppBar","title":"AppBar — AppBar","text":"https://mui.com/material-ui/api/app-bar/","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/AppBar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"AppBar — AppBar","text":"","code":"AppBar(...)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/AppBar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"AppBar — AppBar","text":"... Props pass component.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/AppBar.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"AppBar — AppBar","text":"Object shiny.tag class suitable use UI Shiny app.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/AppBar.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"AppBar — AppBar","text":"children node  Default - content component. classes object  Default - Override extend styles applied component.See CSS classes API details. color 'default'| 'inherit'| 'primary'| 'secondary'| 'transparent'| 'error'| 'info'| 'success'| 'warning'| string  Default 'primary' color component. supports default custom theme colors, can added shown palette customization guide. enableColorOnDark bool  Default FALSE true, color prop applied dark mode. position 'absolute'| 'fixed'| 'relative'| 'static'| 'sticky'  Default 'fixed' positioning type. behavior different options described MDN web docs. Note: sticky universally supported fall back static unavailable. sx Array<func| object| bool>| func| object  Default - system prop allows defining system overrides well additional CSS styles.See sx page details.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Autocomplete.html","id":null,"dir":"Reference","previous_headings":"","what":"Autocomplete — Autocomplete","title":"Autocomplete — Autocomplete","text":"https://mui.com/material-ui/api/autocomplete/","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Autocomplete.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Autocomplete — Autocomplete","text":"","code":"Autocomplete(...)  Autocomplete.shinyInput(inputId, ..., value = defaultValue)  updateAutocomplete.shinyInput(   session = shiny::getDefaultReactiveDomain(),   inputId,   ... )"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Autocomplete.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Autocomplete — Autocomplete","text":"... Props pass component. inputId ID component. value Starting value. session Object passed `session` argument Shiny server.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Autocomplete.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Autocomplete — Autocomplete","text":"Object shiny.tag class suitable use UI Shiny app.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Autocomplete.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Autocomplete — Autocomplete","text":"options array  Default - list options shown Autocomplete. renderInput func  Default - Render input.Signature:function(params: object) => ReactNode autoComplete bool  Default FALSE true, portion selected suggestion user typed, known completion string, appears inline input cursor textbox. inline completion string visually highlighted selected state. autoHighlight bool  Default FALSE true, first option automatically highlighted. autoSelect bool  Default FALSE true, selected option becomes value input Autocomplete loses focus unless user chooses different option changes character string input.using freeSolo mode, typed value input value Autocomplete loses focus without highlighting option. blurOnSelect 'mouse'| 'touch'| bool  Default FALSE Control input blurred option selected: false input blurred. true input always blurred. touch input blurred touch event. mouse input blurred mouse event. ChipProps object  Default - Props applied Chip element.Deprecated－Use slotProps.chip instead. prop removed future major release. See Migrating deprecated APIs details. classes object  Default - Override extend styles applied component.See CSS classes API details. clearIcon node  Default  icon display place default clear icon. clearOnBlur bool  Default !props.freeSolo true, input's text cleared blur value selected.Set true want help user enter new value. Set false want help user resume search. clearOnEscape bool  Default FALSE true, clear values user presses escape popup closed. clearText string  Default 'Clear' Override default text clear icon button.localization purposes, can use provided translations. closeText string  Default 'Close' Override default text close popup icon button.localization purposes, can use provided translations. componentsProps { clearIndicator?: object, paper?: object, popper?: object, popupIndicator?: object }  Default - props used slot inside.Deprecated－Use slotProps prop instead. prop removed future major release. See Migrating deprecated APIs details. defaultValue  Default props.multiple ? [] : null default value. Use component controlled. disableClearable bool  Default FALSE true, input cleared. disableCloseOnSelect bool  Default FALSE true, popup close value selected. disabled bool  Default FALSE true, component disabled. disabledItemsFocusable bool  Default FALSE true, allow focus disabled items. disableListWrap bool  Default FALSE true, list box popup wrap focus. disablePortal bool  Default FALSE true, Popper content DOM hierarchy parent component. filterOptions func  Default createFilterOptions() function determines filtered options rendered search.Signature:function(options: Array, state: object) => Arrayoptions options render.state state component. filterSelectedOptions bool  Default FALSE true, hide selected options list box. forcePopupIcon 'auto'| bool  Default 'auto' Force visibility display popup icon. freeSolo bool  Default FALSE true, Autocomplete free solo, meaning user input bound provided options. fullWidth bool  Default FALSE true, input take full width container. getLimitTagsText func  Default () => +$label display tags truncated (limitTags).Signature:function(: number) => ReactNodemore number truncated tags. getOptionDisabled func  Default - Used determine disabled state given option.Signature:function(option: Value) => booleanoption option test. getOptionKey func  Default - Used determine key given option. can useful labels options unique (since labels used keys default).Signature:function(option: Value) => string | numberoption option get key . getOptionLabel func  Default (option) => option.label ?? option Used determine string value given option. used fill input (list box options renderOption provided).used free solo mode, must accept type options string.Signature:function(option: Value) => string groupBy func  Default - provided, options grouped returned string. groupBy value also used text group headings renderGroup provided.Signature:function(option: Value) => stringoption Autocomplete option. handleHomeEndKeys bool  Default !props.freeSolo true, component handles \"Home\" \"End\" keys popup open. move focus first option last option, respectively. id string  Default - prop used help implement accessibility logic. provide id fall back randomly generated one. includeInputInList bool  Default FALSE true, highlight can move input. inputValue string  Default - input value. isOptionEqualToValue func  Default - Used determine option represents given value. Uses strict equality default. ⚠️ arguments need handled, option can match one value.Signature:function(option: Value, value: Value) => booleanoption option test.value value test . limitTags integer  Default -1 maximum number tags visible focused. Set -1 disable limit. ListboxComponent elementType  Default 'ul' component used render listbox.Deprecated－Use slotProps.listbox.component instead. prop removed future major release. See Migrating deprecated APIs details. ListboxProps object  Default - Props applied Listbox element.Deprecated－Use slotProps.listbox instead. prop removed future major release. See Migrating deprecated APIs details. loading bool  Default FALSE true, component loading state. shows loadingText place suggestions (suggestions show, example options empty). loadingText node  Default 'Loading…' Text display loading state.localization purposes, can use provided translations. multiple bool  Default FALSE true, value must array menu support multiple selections. noOptionsText node  Default 'options' Text display options.localization purposes, can use provided translations. onChange func  Default - Callback fired value changes.Signature:function(event: React.SyntheticEvent, value: Value | Array, reason: string, details?: string) => voidevent event source callback.value new value component.reason One \"createOption\", \"selectOption\", \"removeOption\", \"blur\" \"clear\". onClose func  Default - Callback fired popup requests closed. Use controlled mode (see open).Signature:function(event: React.SyntheticEvent, reason: string) => voidevent event source callback.reason Can : \"toggleInput\", \"escape\", \"selectOption\", \"removeOption\", \"blur\". onHighlightChange func  Default - Callback fired highlight option changes.Signature:function(event: React.SyntheticEvent, option: Value, reason: string) => voidevent event source callback.option highlighted option.reason Can : \"keyboard\", \"mouse\", \"touch\". onInputChange func  Default - Callback fired input value changes.Signature:function(event: React.SyntheticEvent, value: string, reason: string) => voidevent event source callback.value new value text input.reason Can : \"input\" (user input), \"reset\" (programmatic change), \"clear\", \"blur\", \"selectOption\", \"removeOption\" onOpen func  Default - Callback fired popup requests opened. Use controlled mode (see open).Signature:function(event: React.SyntheticEvent) => voidevent event source callback. open bool  Default - true, component shown. openOnFocus bool  Default FALSE true, popup open input focus. openText string  Default 'Open' Override default text open popup icon button.localization purposes, can use provided translations. PaperComponent elementType  Default Paper component used render body popup.Deprecated－Use slots.paper instead. prop removed future major release. See Migrating deprecated APIs details. PopperComponent elementType  Default Popper component used position popup.Deprecated－Use slots.popper instead. prop removed future major release. See Migrating deprecated APIs details. popupIcon node  Default  icon display place default popup icon. readOnly bool  Default FALSE true, component becomes readonly. also supported multiple tags tag deleted. renderGroup func  Default - Render group.Signature:function(params: AutocompleteRenderGroupParams) => ReactNodeparams group render. renderOption func  Default - Render option, use getOptionLabel default.Signature:function(props: object, option: Value, state: object, ownerState: object) => ReactNodeprops props apply li element.option option render.state state option.ownerState state Autocomplete component. renderTags func  Default - Render selected value.Signature:function(value: Array, getTagProps: function, ownerState: object) => ReactNodevalue value provided component.getTagProps tag props getter.ownerState state Autocomplete component. selectOnFocus bool  Default !props.freeSolo true, input's text selected focus. helps user clear selected value. size 'small'| 'medium'| string  Default 'medium' size component. slotProps { chip?: func| object, clearIndicator?: func| object, listbox?: func| object, paper?: func| object, popper?: func| object, popupIndicator?: func| object }  Default  props used slot inside. slots { listbox?: elementType, paper?: elementType, popper?: elementType }  Default  components used slot inside. sx Array<func| object| bool>| func| object  Default - system prop allows defining system overrides well additional CSS styles.See sx page details. value  Default - value autocomplete.value must reference equality option order selected. can customize equality behavior isOptionEqualToValue prop.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Avatar.html","id":null,"dir":"Reference","previous_headings":"","what":"Avatar — Avatar","title":"Avatar — Avatar","text":"https://mui.com/material-ui/api/avatar/","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Avatar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Avatar — Avatar","text":"","code":"Avatar(...)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Avatar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Avatar — Avatar","text":"... Props pass component.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Avatar.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Avatar — Avatar","text":"Object shiny.tag class suitable use UI Shiny app.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Avatar.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Avatar — Avatar","text":"alt string  Default - Used combination src srcSet provide alt attribute rendered img element. children node  Default - Used render icon text elements inside Avatar src set. can element, just string. classes object  Default - Override extend styles applied component.See CSS classes API details. component elementType  Default - component used root node. Either string use HTML element component. imgProps object  Default - Attributes applied img element component used display image. can used listen loading error event.Deprecated－Use slotProps.img instead. prop removed future major release. See Migrating deprecated APIs details. sizes string  Default - sizes attribute img element. slotProps { img?: func| object }  Default  props used slot inside. slots { img?: elementType }  Default  components used slot inside. src string  Default - src attribute img element. srcSet string  Default - srcSet attribute img element. Use attribute responsive image display. sx Array<func| object| bool>| func| object  Default - system prop allows defining system overrides well additional CSS styles.See sx page details. variant 'circular'| 'rounded'| 'square'| string  Default 'circular' shape avatar.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/AvatarGroup.html","id":null,"dir":"Reference","previous_headings":"","what":"AvatarGroup — AvatarGroup","title":"AvatarGroup — AvatarGroup","text":"https://mui.com/material-ui/api/avatar-group/","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/AvatarGroup.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"AvatarGroup — AvatarGroup","text":"","code":"AvatarGroup(...)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/AvatarGroup.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"AvatarGroup — AvatarGroup","text":"... Props pass component.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/AvatarGroup.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"AvatarGroup — AvatarGroup","text":"Object shiny.tag class suitable use UI Shiny app.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/AvatarGroup.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"AvatarGroup — AvatarGroup","text":"children node  Default - avatars stack. classes object  Default - Override extend styles applied component.See CSS classes API details. component elementType  Default - component used root node. Either string use HTML element component. componentsProps { additionalAvatar?: object }  Default - extra props slot components. can override existing props add new ones.prop alias slotProps prop.Deprecated－use slotProps prop instead. prop removed future major release. See Migrating deprecated APIs details. max number  Default 5 Max avatars show +x. renderSurplus func  Default - custom renderer extraAvatarsSignature:function(surplus: number) => React.ReactNodesurplus number extra avatarsReturns: custom element display slotProps { additionalAvatar?: object, surplus?: func| object }  Default  props used slot inside. slots { surplus?: elementType }  Default  components used slot inside. spacing 'medium'| 'small'| number  Default 'medium' Spacing avatars. sx Array<func| object| bool>| func| object  Default - system prop allows defining system overrides well additional CSS styles.See sx page details. total number  Default children.length total number avatars. Used calculating number extra avatars. variant 'circular'| 'rounded'| 'square'| string  Default 'circular' variant use.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Backdrop.html","id":null,"dir":"Reference","previous_headings":"","what":"Backdrop — Backdrop","title":"Backdrop — Backdrop","text":"https://mui.com/material-ui/api/backdrop/","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Backdrop.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Backdrop — Backdrop","text":"","code":"Backdrop(...)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Backdrop.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Backdrop — Backdrop","text":"... Props pass component.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Backdrop.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Backdrop — Backdrop","text":"Object shiny.tag class suitable use UI Shiny app.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Backdrop.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Backdrop — Backdrop","text":"open bool  Default - true, component shown. children node  Default - content component. classes object  Default - Override extend styles applied component.See CSS classes API details. component elementType  Default - component used root node. Either string use HTML element component. components { Root?: elementType }  Default  components used slot inside.Deprecated－Use slots prop instead. prop removed future major release. See Migrating deprecated APIs details. componentsProps { root?: object }  Default  extra props slot components. can override existing props add new ones.Deprecated－Use slotProps prop instead. prop removed future major release. See Migrating deprecated APIs details. invisible bool  Default FALSE true, backdrop invisible. can used rendering popover custom select component. slotProps { root?: func| object, transition?: func| object }  Default  props used slot inside. slots { root?: elementType, transition?: elementType }  Default  components used slot inside. sx Array<func| object| bool>| func| object  Default - system prop allows defining system overrides well additional CSS styles.See sx page details. TransitionComponent elementType  Default Fade component used transition. Follow guide learn requirements component.Deprecated－Use slots.transition instead. prop removed future major release. See Migrating deprecated APIs details. transitionDuration number| { appear?: number, enter?: number, exit?: number }  Default - duration transition, milliseconds. may specify single timeout transitions, individually object.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Badge.html","id":null,"dir":"Reference","previous_headings":"","what":"Badge — Badge","title":"Badge — Badge","text":"https://mui.com/material-ui/api/badge/","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Badge.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Badge — Badge","text":"","code":"Badge(...)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Badge.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Badge — Badge","text":"... Props pass component.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Badge.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Badge — Badge","text":"Object shiny.tag class suitable use UI Shiny app.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Badge.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Badge — Badge","text":"anchorOrigin { horizontal?: 'left'| 'right', vertical?: 'bottom'| 'top' }  Default    vertical: 'top',   horizontal: 'right',  anchor badge. badgeContent node  Default - content rendered within badge. children node  Default - badge added relative node. classes object  Default - Override extend styles applied component.See CSS classes API details. color 'default'| 'primary'| 'secondary'| 'error'| 'info'| 'success'| 'warning'| string  Default 'default' color component. supports default custom theme colors, can added shown palette customization guide. component elementType  Default - component used root node. Either string use HTML element component. components { Badge?: elementType, Root?: elementType }  Default  components used slot inside.Deprecated－use slots prop instead. prop removed future major release. See Migrating deprecated APIs details. componentsProps { badge?: func| object, root?: func| object }  Default  extra props slot components. can override existing props add new ones.Deprecated－use slotProps prop instead. prop removed future major release. See Migrating deprecated APIs details. invisible bool  Default FALSE true, badge invisible. max number  Default 99 Max count show. overlap 'circular'| 'rectangular'  Default 'rectangular' Wrapped shape badge overlap. showZero bool  Default FALSE Controls whether badge hidden badgeContent zero. slotProps { badge?: func| object, root?: func| object }  Default  props used slot inside Badge. slots { badge?: elementType, root?: elementType }  Default  components used slot inside Badge. Either string use HTML element component. sx Array<func| object| bool>| func| object  Default - system prop allows defining system overrides well additional CSS styles.See sx page details. variant 'dot'| 'standard'| string  Default 'standard' variant use.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/BottomNavigation.html","id":null,"dir":"Reference","previous_headings":"","what":"BottomNavigation — BottomNavigation","title":"BottomNavigation — BottomNavigation","text":"https://mui.com/material-ui/api/bottom-navigation/","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/BottomNavigation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"BottomNavigation — BottomNavigation","text":"","code":"BottomNavigation(...)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/BottomNavigation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"BottomNavigation — BottomNavigation","text":"... Props pass component.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/BottomNavigation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"BottomNavigation — BottomNavigation","text":"Object shiny.tag class suitable use UI Shiny app.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/BottomNavigation.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"BottomNavigation — BottomNavigation","text":"children node  Default - content component. classes object  Default - Override extend styles applied component.See CSS classes API details. component elementType  Default - component used root node. Either string use HTML element component. onChange func  Default - Callback fired value changes.Signature:function(event: React.SyntheticEvent, value: ) => voidevent event source callback. Warning: generic event change event.value default index child. showLabels bool  Default FALSE true, BottomNavigationActions show labels. default, selected BottomNavigationAction show label. sx Array<func| object| bool>| func| object  Default - system prop allows defining system overrides well additional CSS styles.See sx page details. value  Default - value currently selected BottomNavigationAction.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/BottomNavigationAction.html","id":null,"dir":"Reference","previous_headings":"","what":"BottomNavigationAction — BottomNavigationAction","title":"BottomNavigationAction — BottomNavigationAction","text":"https://mui.com/material-ui/api/bottom-navigation-action/","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/BottomNavigationAction.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"BottomNavigationAction — BottomNavigationAction","text":"","code":"BottomNavigationAction(...)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/BottomNavigationAction.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"BottomNavigationAction — BottomNavigationAction","text":"... Props pass component.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/BottomNavigationAction.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"BottomNavigationAction — BottomNavigationAction","text":"Object shiny.tag class suitable use UI Shiny app.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/BottomNavigationAction.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"BottomNavigationAction — BottomNavigationAction","text":"children unsupportedProp  Default NA prop supported. Use component prop need change children structure. classes object  Default NA Override extend styles applied component.See CSS classes API details. icon node  Default NA icon display. label node  Default NA label element. showLabel bool  Default NA true, BottomNavigationAction show label. default, selected BottomNavigationAction inside BottomNavigation show label.prop defaults value (false) inherited parent BottomNavigation component. sx Array<func| object| bool>| func| object  Default NA system prop allows defining system overrides well additional CSS styles.See sx page details. value  Default NA can provide value. Otherwise, fallback child position index.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Box.html","id":null,"dir":"Reference","previous_headings":"","what":"Box — Box","title":"Box — Box","text":"https://mui.com/material-ui/api/box/","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Box.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Box — Box","text":"","code":"Box(...)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Box.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Box — Box","text":"... Props pass component.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Box.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Box — Box","text":"Object shiny.tag class suitable use UI Shiny app.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Box.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Box — Box","text":"component elementType  Default NA component used root node. Either string use HTML element component. sx Array<func| object| bool>| func| object  Default NA system prop allows defining system overrides well additional CSS styles.See sx page details.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Breadcrumbs.html","id":null,"dir":"Reference","previous_headings":"","what":"Breadcrumbs — Breadcrumbs","title":"Breadcrumbs — Breadcrumbs","text":"https://mui.com/material-ui/api/breadcrumbs/","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Breadcrumbs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Breadcrumbs — Breadcrumbs","text":"","code":"Breadcrumbs(...)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Breadcrumbs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Breadcrumbs — Breadcrumbs","text":"... Props pass component.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Breadcrumbs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Breadcrumbs — Breadcrumbs","text":"Object shiny.tag class suitable use UI Shiny app.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Breadcrumbs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Breadcrumbs — Breadcrumbs","text":"children node  Default - content component. classes object  Default - Override extend styles applied component.See CSS classes API details. component elementType  Default - component used root node. Either string use HTML element component. expandText string  Default 'Show path' Override default label expand button.localization purposes, can use provided translations. itemsAfterCollapse integer  Default 1 max items exceeded, number items show ellipsis. itemsBeforeCollapse integer  Default 1 max items exceeded, number items show ellipsis. maxItems integer  Default 8 Specifies maximum number breadcrumbs display. maximum number, first itemsBeforeCollapse last itemsAfterCollapse shown, ellipsis . separator node  Default '/' Custom separator node. slotProps { collapsedIcon?: func| object }  Default  props used slot inside Breadcumb. slots { CollapsedIcon?: elementType }  Default  components used slot inside Breadcumb. Either string use HTML element component. sx Array<func| object| bool>| func| object  Default - system prop allows defining system overrides well additional CSS styles.See sx page details.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Button.html","id":null,"dir":"Reference","previous_headings":"","what":"Button — Button","title":"Button — Button","text":"https://mui.com/material-ui/api/button/","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Button.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Button — Button","text":"","code":"Button(...)  Button.shinyInput(inputId, ...)  updateButton.shinyInput(   session = shiny::getDefaultReactiveDomain(),   inputId,   ... )"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Button.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Button — Button","text":"... Props pass component. inputId ID component. session Object passed `session` argument Shiny server.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Button.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Button — Button","text":"Object shiny.tag class suitable use UI Shiny app.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Button.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Button — Button","text":"children node  Default - content component. classes object  Default - Override extend styles applied component.See CSS classes API details. color 'inherit'| 'primary'| 'secondary'| 'success'| 'error'| 'info'| 'warning'| string  Default 'primary' color component. supports default custom theme colors, can added shown palette customization guide. component elementType  Default - component used root node. Either string use HTML element component. disabled bool  Default FALSE true, component disabled. disableElevation bool  Default FALSE true, elevation used. disableFocusRipple bool  Default FALSE true,  keyboard focus ripple disabled. disableRipple bool  Default FALSE true, ripple effect disabled.⚠️ Without ripple styling :focus-visible default. sure highlight element applying separate styles .Mui-focusVisible class. endIcon node  Default - Element placed children. fullWidth bool  Default FALSE true, button take full width container. href string  Default - URL link button clicked. defined, element used root node. loading bool  Default null true, loading indicator visible button disabled. true | false, loading wrapper always rendered children prevent Google Translation Crash. loadingIndicator node  Default  Element placed children button loading state. node contain element role=\"progressbar\" accessible name. default, renders CircularProgress labeled button . loadingPosition 'center'| 'end'| 'start'  Default 'center' loading indicator can positioned start, end, center button. size 'small'| 'medium'| 'large'| string  Default 'medium' size component. small equivalent dense button styling. startIcon node  Default - Element placed children. sx Array<func| object| bool>| func| object  Default - system prop allows defining system overrides well additional CSS styles.See sx page details. variant 'contained'| 'outlined'| 'text'| string  Default 'text' variant use.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/ButtonBase.html","id":null,"dir":"Reference","previous_headings":"","what":"ButtonBase — ButtonBase","title":"ButtonBase — ButtonBase","text":"https://mui.com/material-ui/api/button-base/","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/ButtonBase.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ButtonBase — ButtonBase","text":"","code":"ButtonBase(...)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/ButtonBase.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ButtonBase — ButtonBase","text":"... Props pass component.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/ButtonBase.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ButtonBase — ButtonBase","text":"Object shiny.tag class suitable use UI Shiny app.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/ButtonBase.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"ButtonBase — ButtonBase","text":"action ref  Default - ref imperative actions. currently supports focusVisible() action. centerRipple bool  Default FALSE true, ripples centered. start cursor interaction position. children node  Default - content component. classes object  Default - Override extend styles applied component.See CSS classes API details. component element type  Default - component used root node. Either string use HTML element component.needs able hold ref. disabled bool  Default FALSE true, component disabled. disableRipple bool  Default FALSE true, ripple effect disabled.⚠️ Without ripple styling :focus-visible default. sure highlight element applying separate styles .Mui-focusVisible class. disableTouchRipple bool  Default FALSE true, touch ripple effect disabled. focusRipple bool  Default FALSE true, base button keyboard focus ripple. focusVisibleClassName string  Default - prop can help identify element keyboard focus. class name applied element gains focus keyboard interaction. polyfill CSS :focus-visible selector. rationale using feature explained . polyfill can used apply focus-visible class components needed. LinkComponent elementType  Default '' component used render link href prop provided. onFocusVisible func  Default - Callback fired component focused keyboard. trigger onFocus callback . sx Array<func| object| bool>| func| object  Default - system prop allows defining system overrides well additional CSS styles.See sx page details. TouchRippleProps object  Default - Props applied TouchRipple element. touchRippleRef func| { current?: { pulsate: func, start: func, stop: func } }  Default - ref points TouchRipple element.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/ButtonGroup.html","id":null,"dir":"Reference","previous_headings":"","what":"ButtonGroup — ButtonGroup","title":"ButtonGroup — ButtonGroup","text":"https://mui.com/material-ui/api/button-group/","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/ButtonGroup.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ButtonGroup — ButtonGroup","text":"","code":"ButtonGroup(...)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/ButtonGroup.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ButtonGroup — ButtonGroup","text":"... Props pass component.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/ButtonGroup.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ButtonGroup — ButtonGroup","text":"Object shiny.tag class suitable use UI Shiny app.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/ButtonGroup.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"ButtonGroup — ButtonGroup","text":"children node  Default - content component. classes object  Default - Override extend styles applied component.See CSS classes API details. color 'inherit'| 'primary'| 'secondary'| 'error'| 'info'| 'success'| 'warning'| string  Default 'primary' color component. supports default custom theme colors, can added shown palette customization guide. component elementType  Default - component used root node. Either string use HTML element component. disabled bool  Default FALSE true, component disabled. disableElevation bool  Default FALSE true, elevation used. disableFocusRipple bool  Default FALSE true, button keyboard focus ripple disabled. disableRipple bool  Default FALSE true, button ripple effect disabled. fullWidth bool  Default FALSE true, buttons take full width container. orientation 'horizontal'| 'vertical'  Default 'horizontal' component orientation (layout flow direction). size 'small'| 'medium'| 'large'| string  Default 'medium' size component. small equivalent dense button styling. sx Array<func| object| bool>| func| object  Default - system prop allows defining system overrides well additional CSS styles.See sx page details. variant 'contained'| 'outlined'| 'text'| string  Default 'outlined' variant use.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Card.html","id":null,"dir":"Reference","previous_headings":"","what":"Card — Card","title":"Card — Card","text":"https://mui.com/material-ui/api/card/","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Card.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Card — Card","text":"","code":"Card(...)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Card.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Card — Card","text":"... Props pass component.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Card.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Card — Card","text":"Object shiny.tag class suitable use UI Shiny app.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Card.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Card — Card","text":"children node  Default - content component. classes object  Default - Override extend styles applied component.See CSS classes API details. raised bool  Default FALSE true, card use raised styling. sx Array<func| object| bool>| func| object  Default - system prop allows defining system overrides well additional CSS styles.See sx page details.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/CardActionArea.html","id":null,"dir":"Reference","previous_headings":"","what":"CardActionArea — CardActionArea","title":"CardActionArea — CardActionArea","text":"https://mui.com/material-ui/api/card-action-area/","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/CardActionArea.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CardActionArea — CardActionArea","text":"","code":"CardActionArea(...)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/CardActionArea.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"CardActionArea — CardActionArea","text":"... Props pass component.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/CardActionArea.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"CardActionArea — CardActionArea","text":"Object shiny.tag class suitable use UI Shiny app.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/CardActionArea.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"CardActionArea — CardActionArea","text":"children node  Default NA content component. classes object  Default NA Override extend styles applied component.See CSS classes API details. sx Array<func| object| bool>| func| object  Default NA system prop allows defining system overrides well additional CSS styles.See sx page details.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/CardActions.html","id":null,"dir":"Reference","previous_headings":"","what":"CardActions — CardActions","title":"CardActions — CardActions","text":"https://mui.com/material-ui/api/card-actions/","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/CardActions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CardActions — CardActions","text":"","code":"CardActions(...)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/CardActions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"CardActions — CardActions","text":"... Props pass component.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/CardActions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"CardActions — CardActions","text":"Object shiny.tag class suitable use UI Shiny app.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/CardActions.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"CardActions — CardActions","text":"children node  Default - content component. classes object  Default - Override extend styles applied component.See CSS classes API details. disableSpacing bool  Default FALSE true, actions additional margin. sx Array<func| object| bool>| func| object  Default - system prop allows defining system overrides well additional CSS styles.See sx page details.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/CardContent.html","id":null,"dir":"Reference","previous_headings":"","what":"CardContent — CardContent","title":"CardContent — CardContent","text":"https://mui.com/material-ui/api/card-content/","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/CardContent.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CardContent — CardContent","text":"","code":"CardContent(...)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/CardContent.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"CardContent — CardContent","text":"... Props pass component.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/CardContent.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"CardContent — CardContent","text":"Object shiny.tag class suitable use UI Shiny app.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/CardContent.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"CardContent — CardContent","text":"children node  Default NA content component. classes object  Default NA Override extend styles applied component.See CSS classes API details. component elementType  Default NA component used root node. Either string use HTML element component. sx Array<func| object| bool>| func| object  Default NA system prop allows defining system overrides well additional CSS styles.See sx page details.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/CardHeader.html","id":null,"dir":"Reference","previous_headings":"","what":"CardHeader — CardHeader","title":"CardHeader — CardHeader","text":"https://mui.com/material-ui/api/card-header/","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/CardHeader.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CardHeader — CardHeader","text":"","code":"CardHeader(...)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/CardHeader.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"CardHeader — CardHeader","text":"... Props pass component.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/CardHeader.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"CardHeader — CardHeader","text":"Object shiny.tag class suitable use UI Shiny app.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/CardHeader.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"CardHeader — CardHeader","text":"action node  Default - action display card header. avatar node  Default - Avatar element display. classes object  Default - Override extend styles applied component.See CSS classes API details. component elementType  Default - component used root node. Either string use HTML element component. disableTypography bool  Default FALSE true, subheader title wrapped Typography component. can useful render alternative Typography variant wrapping title text, optional subheader text Typography component. slotProps { action?: func| object, avatar?: func| object, content?: func| object, root?: func| object, subheader?: func| object, title?: func| object }  Default  props used slot inside. slots { action?: elementType, avatar?: elementType, content?: elementType, root?: elementType, subheader?: elementType, title?: elementType }  Default  components used slot inside. subheader node  Default - content component. subheaderTypographyProps object  Default - props forwarded subheader (long disableTypography true).Deprecated－Use slotProps.subheader instead. prop removed future major release. See Migrating deprecated APIs details. sx Array<func| object| bool>| func| object  Default - system prop allows defining system overrides well additional CSS styles.See sx page details. title node  Default - content component. titleTypographyProps object  Default - props forwarded title (long disableTypography true).Deprecated－Use slotProps.title instead. prop removed future major release. See Migrating deprecated APIs details.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/CardMedia.html","id":null,"dir":"Reference","previous_headings":"","what":"CardMedia — CardMedia","title":"CardMedia — CardMedia","text":"https://mui.com/material-ui/api/card-media/","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/CardMedia.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CardMedia — CardMedia","text":"","code":"CardMedia(...)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/CardMedia.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"CardMedia — CardMedia","text":"... Props pass component.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/CardMedia.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"CardMedia — CardMedia","text":"Object shiny.tag class suitable use UI Shiny app.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/CardMedia.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"CardMedia — CardMedia","text":"children node  Default NA content component. classes object  Default NA Override extend styles applied component.See CSS classes API details. component elementType  Default NA component used root node. Either string use HTML element component. image string  Default NA Image displayed background image. Either image src prop must specified. Note caller must specify height otherwise image visible. src string  Default NA alias image property. Available media components. Media components: video, audio, picture, iframe, img. sx Array<func| object| bool>| func| object  Default NA system prop allows defining system overrides well additional CSS styles.See sx page details.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Checkbox.html","id":null,"dir":"Reference","previous_headings":"","what":"Checkbox — Checkbox","title":"Checkbox — Checkbox","text":"https://mui.com/material-ui/api/checkbox/","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Checkbox.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Checkbox — Checkbox","text":"","code":"Checkbox(...)  Checkbox.shinyInput(inputId, ..., value = defaultValue)  updateCheckbox.shinyInput(   session = shiny::getDefaultReactiveDomain(),   inputId,   ... )"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Checkbox.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Checkbox — Checkbox","text":"... Props pass component. inputId ID component. value Starting value. session Object passed `session` argument Shiny server.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Checkbox.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Checkbox — Checkbox","text":"Object shiny.tag class suitable use UI Shiny app.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Checkbox.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Checkbox — Checkbox","text":"checked bool  Default - true, component checked. checkedIcon node  Default  icon display component checked. classes object  Default - Override extend styles applied component.See CSS classes API details. color 'default'| 'primary'| 'secondary'| 'error'| 'info'| 'success'| 'warning'| string  Default 'primary' color component. supports default custom theme colors, can added shown palette customization guide. defaultChecked bool  Default - default checked state. Use component controlled. disabled bool  Default FALSE true, component disabled. disableRipple bool  Default FALSE true, ripple effect disabled. icon node  Default  icon display component unchecked. id string  Default - id input element. indeterminate bool  Default FALSE true, component appears indeterminate. set native input element indeterminate due inconsistent behavior across browsers. However, set data-indeterminate attribute input. indeterminateIcon node  Default  icon display component indeterminate. inputProps object  Default - Attributes applied input element.Deprecated－Use slotProps.input instead. prop removed future major release. See Migrating deprecated APIs details. onChange func  Default - Callback fired state changed.Signature:function(event: React.ChangeEvent) => voidevent event source callback. can pull new checked state accessing event.target.checked (boolean). required bool  Default FALSE true, input element required. size 'medium'| 'small'| string  Default 'medium' size component. small equivalent dense checkbox styling. slotProps { input?: func| object, root?: func| object }  Default  props used slot inside. slots { input?: elementType, root?: elementType }  Default  components used slot inside. sx Array<func| object| bool>| func| object  Default - system prop allows defining system overrides well additional CSS styles.See sx page details. value  Default - value component. DOM API casts string. browser uses \"\" default value.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Chip.html","id":null,"dir":"Reference","previous_headings":"","what":"Chip — Chip","title":"Chip — Chip","text":"https://mui.com/material-ui/api/chip/","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Chip.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Chip — Chip","text":"","code":"Chip(...)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Chip.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Chip — Chip","text":"... Props pass component.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Chip.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Chip — Chip","text":"Object shiny.tag class suitable use UI Shiny app.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Chip.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Chip — Chip","text":"avatar element  Default - Avatar element display. children unsupportedProp  Default - prop supported. Use component prop need change children structure. classes object  Default - Override extend styles applied component.See CSS classes API details. clickable bool  Default - true, chip appear clickable, raise pressed, even onClick prop defined. false, chip appear clickable, even onClick prop defined. can used, example, along component prop indicate anchor Chip clickable. Note: controls UI affect onClick event. color 'default'| 'primary'| 'secondary'| 'error'| 'info'| 'success'| 'warning'| string  Default 'default' color component. supports default custom theme colors, can added shown palette customization guide. component elementType  Default - component used root node. Either string use HTML element component. deleteIcon element  Default - Override default delete icon element. Shown onDelete set. disabled bool  Default FALSE true, component disabled. icon element  Default - Icon element. label node  Default - content component. onDelete func  Default - Callback fired delete icon clicked. set, delete icon shown. size 'medium'| 'small'| string  Default 'medium' size component. skipFocusWhenDisabled bool  Default FALSE true, allows disabled chip escape focus. false, allows disabled chip receive focus. sx Array<func| object| bool>| func| object  Default - system prop allows defining system overrides well additional CSS styles.See sx page details. variant 'filled'| 'outlined'| string  Default 'filled' variant use.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/CircularProgress.html","id":null,"dir":"Reference","previous_headings":"","what":"CircularProgress — CircularProgress","title":"CircularProgress — CircularProgress","text":"https://mui.com/material-ui/api/circular-progress/","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/CircularProgress.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CircularProgress — CircularProgress","text":"","code":"CircularProgress(...)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/CircularProgress.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"CircularProgress — CircularProgress","text":"... Props pass component.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/CircularProgress.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"CircularProgress — CircularProgress","text":"Object shiny.tag class suitable use UI Shiny app.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/CircularProgress.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"CircularProgress — CircularProgress","text":"classes object  Default - Override extend styles applied component.See CSS classes API details. color 'inherit'| 'primary'| 'secondary'| 'error'| 'info'| 'success'| 'warning'| string  Default 'primary' color component. supports default custom theme colors, can added shown palette customization guide. disableShrink bool  Default FALSE true, shrink animation disabled. works variant indeterminate. size number| string  Default 40 size component. using number, pixel unit assumed. using string, need provide CSS unit, example '3rem'. sx Array<func| object| bool>| func| object  Default - system prop allows defining system overrides well additional CSS styles.See sx page details. thickness number  Default 3.6 thickness circle. value number  Default 0 value progress indicator determinate variant. Value 0 100. variant 'determinate'| 'indeterminate'  Default 'indeterminate' variant use. Use indeterminate progress value.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/ClickAwayListener.html","id":null,"dir":"Reference","previous_headings":"","what":"ClickAwayListener — ClickAwayListener","title":"ClickAwayListener — ClickAwayListener","text":"https://mui.com/material-ui/api/click-away-listener/","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/ClickAwayListener.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ClickAwayListener — ClickAwayListener","text":"","code":"ClickAwayListener(...)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/ClickAwayListener.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ClickAwayListener — ClickAwayListener","text":"... Props pass component.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/ClickAwayListener.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ClickAwayListener — ClickAwayListener","text":"Object shiny.tag class suitable use UI Shiny app.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/ClickAwayListener.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"ClickAwayListener — ClickAwayListener","text":"children element  Default - wrapped element.needs able hold ref. onClickAway func  Default - Callback fired \"click away\" event detected. disableReactTree bool  Default FALSE true, React tree ignored DOM tree considered. prop changes portaled elements handled. mouseEvent 'onClick'| 'onMouseDown'| 'onMouseUp'| 'onPointerDown'| 'onPointerUp'| false  Default 'onClick' mouse event listen . can disable listener providing false. touchEvent 'onTouchEnd'| 'onTouchStart'| false  Default 'onTouchEnd' touch event listen . can disable listener providing false.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Collapse.html","id":null,"dir":"Reference","previous_headings":"","what":"Collapse — Collapse","title":"Collapse — Collapse","text":"https://mui.com/material-ui/api/collapse/","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Collapse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Collapse — Collapse","text":"","code":"Collapse(...)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Collapse.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Collapse — Collapse","text":"... Props pass component.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Collapse.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Collapse — Collapse","text":"Object shiny.tag class suitable use UI Shiny app.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Collapse.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Collapse — Collapse","text":"addEndListener func  Default - Add custom transition end trigger. Called transitioning DOM node done callback. Allows fine grained transition end logic. Note: Timeouts still used fallback provided. children node  Default - content node collapsed. classes object  Default - Override extend styles applied component.See CSS classes API details. collapsedSize number| string  Default '0px' width (horizontal) height (vertical) container collapsed. component element type  Default - component used root node. Either string use HTML element component.needs able hold ref. easing { enter?: string, exit?: string }| string  Default - transition timing function. may specify single easing object containing enter exit values. bool  Default - true, component transition . orientation 'horizontal'| 'vertical'  Default 'vertical' transition orientation. sx Array<func| object| bool>| func| object  Default - system prop allows defining system overrides well additional CSS styles.See sx page details. timeout 'auto'| number| { appear?: number, enter?: number, exit?: number }  Default duration.standard duration transition, milliseconds. may specify single timeout transitions, individually object.Set 'auto' automatically calculate transition time based height.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/component.html","id":null,"dir":"Reference","previous_headings":"","what":"Documentation template for remaining components — component","title":"Documentation template for remaining components — component","text":"Documentation template remaining components","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/component.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Documentation template for remaining components — component","text":"... Props pass component. allowed props listed Details section.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/component.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Documentation template for remaining components — component","text":"Object `shiny.tag` class suitable use UI Shiny app.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Container.html","id":null,"dir":"Reference","previous_headings":"","what":"Container — Container","title":"Container — Container","text":"https://mui.com/material-ui/api/container/","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Container.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Container — Container","text":"","code":"Container(...)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Container.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Container — Container","text":"... Props pass component.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Container.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Container — Container","text":"Object shiny.tag class suitable use UI Shiny app.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Container.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Container — Container","text":"classes object  Default - Override extend styles applied component.See CSS classes API details. component elementType  Default - component used root node. Either string use HTML element component. disableGutters bool  Default FALSE true, left right padding removed. fixed bool  Default FALSE Set max-width match min-width current breakpoint. useful prefer design fixed set sizes instead trying accommodate fully fluid viewport. fluid default. maxWidth 'xs'| 'sm'| 'md'| 'lg'| 'xl'| false| string  Default 'lg' Determine max-width container. container width grows size screen. Set false disable maxWidth. sx Array<func| object| bool>| func| object  Default - system prop allows defining system overrides well additional CSS styles.See sx page details.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/CssBaseline.html","id":null,"dir":"Reference","previous_headings":"","what":"CssBaseline — CssBaseline","title":"CssBaseline — CssBaseline","text":"https://mui.com/material-ui/api/css-baseline/","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/CssBaseline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CssBaseline — CssBaseline","text":"","code":"CssBaseline(...)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/CssBaseline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"CssBaseline — CssBaseline","text":"... Props pass component.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/CssBaseline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"CssBaseline — CssBaseline","text":"Object shiny.tag class suitable use UI Shiny app.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/CssBaseline.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"CssBaseline — CssBaseline","text":"children node  Default - can wrap node. enableColorScheme bool  Default FALSE Enable color-scheme CSS property use theme.palette.mode. details, check https://developer.mozilla.org/en-US/docs/Web/CSS/color-scheme browser support, check https://caniuse.com/?search=color-scheme","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Dialog.html","id":null,"dir":"Reference","previous_headings":"","what":"Dialog — Dialog","title":"Dialog — Dialog","text":"https://mui.com/material-ui/api/dialog/","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Dialog.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dialog — Dialog","text":"","code":"Dialog(...)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Dialog.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dialog — Dialog","text":"... Props pass component.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Dialog.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Dialog — Dialog","text":"Object shiny.tag class suitable use UI Shiny app.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Dialog.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Dialog — Dialog","text":"open bool  Default - true, component shown. aria-describedby string  Default - id(s) element(s) describe dialog. aria-labelledby string  Default - id(s) element(s) label dialog. aria-modal 'false'| 'true'| bool  Default TRUE Informs assistive technologies element modal. added element role=\"dialog\". BackdropComponent elementType  Default styled(Backdrop,    name: 'MuiModal',   slot: 'Backdrop',   overridesResolver: (props, styles) =>      return styles.backdrop;   , )(   zIndex: -1, ) backdrop component. prop enables custom backdrop rendering.Deprecated－Use slots.backdrop instead. prop currently works, removed next major version. children node  Default - Dialog children, usually included sub-components. classes object  Default - Override extend styles applied component.See CSS classes API details. disableEscapeKeyDown bool  Default FALSE true, hitting escape fire onClose callback. fullScreen bool  Default FALSE true, dialog full-screen. fullWidth bool  Default FALSE true, dialog stretches maxWidth.Notice dialog width grow limited default margin. maxWidth 'xs'| 'sm'| 'md'| 'lg'| 'xl'| false| string  Default 'sm' Determine max-width dialog. dialog width grows size screen. Set false disable maxWidth. onClose func  Default - Callback fired component requests closed.Signature:function(event: object, reason: string) => voidevent event source callback.reason Can : \"escapeKeyDown\", \"backdropClick\". PaperComponent elementType  Default Paper component used render body dialog. PaperProps object  Default  Props applied Paper element.Deprecated－Use slotProps.paper instead. prop removed future major release. See Migrating deprecated APIs details. scroll 'body'| 'paper'  Default 'paper' Determine container scrolling dialog. slotProps { backdrop?: func| object, container?: func| object, paper?: func| object, root?: func| object, transition?: func| object }  Default  props used slot inside. slots { backdrop?: elementType, container?: elementType, paper?: elementType, root?: elementType, transition?: elementType }  Default  components used slot inside. sx Array<func| object| bool>| func| object  Default - system prop allows defining system overrides well additional CSS styles.See sx page details. TransitionComponent elementType  Default Fade component used transition. Follow guide learn requirements component.Deprecated－Use slots.transition instead. prop removed future major release. See Migrating deprecated APIs details. transitionDuration number| { appear?: number, enter?: number, exit?: number }  Default    enter: theme.transitions.duration.enteringScreen,   exit: theme.transitions.duration.leavingScreen,  duration transition, milliseconds. may specify single timeout transitions, individually object. TransitionProps object  Default - Props applied transition element. default, element based Transition component.Deprecated－Use slotProps.transition instead. prop removed future major release. See Migrating deprecated APIs details.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/DialogActions.html","id":null,"dir":"Reference","previous_headings":"","what":"DialogActions — DialogActions","title":"DialogActions — DialogActions","text":"https://mui.com/material-ui/api/dialog-actions/","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/DialogActions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DialogActions — DialogActions","text":"","code":"DialogActions(...)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/DialogActions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DialogActions — DialogActions","text":"... Props pass component.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/DialogActions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"DialogActions — DialogActions","text":"Object shiny.tag class suitable use UI Shiny app.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/DialogActions.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"DialogActions — DialogActions","text":"children node  Default - content component. classes object  Default - Override extend styles applied component.See CSS classes API details. disableSpacing bool  Default FALSE true, actions additional margin. sx Array<func| object| bool>| func| object  Default - system prop allows defining system overrides well additional CSS styles.See sx page details.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/DialogContent.html","id":null,"dir":"Reference","previous_headings":"","what":"DialogContent — DialogContent","title":"DialogContent — DialogContent","text":"https://mui.com/material-ui/api/dialog-content/","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/DialogContent.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DialogContent — DialogContent","text":"","code":"DialogContent(...)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/DialogContent.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DialogContent — DialogContent","text":"... Props pass component.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/DialogContent.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"DialogContent — DialogContent","text":"Object shiny.tag class suitable use UI Shiny app.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/DialogContent.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"DialogContent — DialogContent","text":"children node  Default - content component. classes object  Default - Override extend styles applied component.See CSS classes API details. dividers bool  Default FALSE Display top bottom dividers. sx Array<func| object| bool>| func| object  Default - system prop allows defining system overrides well additional CSS styles.See sx page details.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/DialogContentText.html","id":null,"dir":"Reference","previous_headings":"","what":"DialogContentText — DialogContentText","title":"DialogContentText — DialogContentText","text":"https://mui.com/material-ui/api/dialog-content-text/","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/DialogContentText.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DialogContentText — DialogContentText","text":"","code":"DialogContentText(...)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/DialogContentText.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DialogContentText — DialogContentText","text":"... Props pass component.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/DialogContentText.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"DialogContentText — DialogContentText","text":"Object shiny.tag class suitable use UI Shiny app.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/DialogContentText.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"DialogContentText — DialogContentText","text":"children node  Default NA content component. classes object  Default NA Override extend styles applied component.See CSS classes API details. sx Array<func| object| bool>| func| object  Default NA system prop allows defining system overrides well additional CSS styles.See sx page details.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/DialogTitle.html","id":null,"dir":"Reference","previous_headings":"","what":"DialogTitle — DialogTitle","title":"DialogTitle — DialogTitle","text":"https://mui.com/material-ui/api/dialog-title/","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/DialogTitle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DialogTitle — DialogTitle","text":"","code":"DialogTitle(...)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/DialogTitle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DialogTitle — DialogTitle","text":"... Props pass component.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/DialogTitle.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"DialogTitle — DialogTitle","text":"Object shiny.tag class suitable use UI Shiny app.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/DialogTitle.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"DialogTitle — DialogTitle","text":"children node  Default NA content component. classes object  Default NA Override extend styles applied component.See CSS classes API details. sx Array<func| object| bool>| func| object  Default NA system prop allows defining system overrides well additional CSS styles.See sx page details.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Divider.html","id":null,"dir":"Reference","previous_headings":"","what":"Divider — Divider","title":"Divider — Divider","text":"https://mui.com/material-ui/api/divider/","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Divider.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Divider — Divider","text":"","code":"Divider(...)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Divider.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Divider — Divider","text":"... Props pass component.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Divider.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Divider — Divider","text":"Object shiny.tag class suitable use UI Shiny app.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Divider.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Divider — Divider","text":"absolute bool  Default FALSE Absolutely position element. children node  Default - content component. classes object  Default - Override extend styles applied component.See CSS classes API details. component elementType  Default - component used root node. Either string use HTML element component. flexItem bool  Default FALSE true, vertical divider correct height used flex container. (default, vertical divider calculated height 0px child flex container.) light bool  Default FALSE true, divider lighter color.Deprecated－Use <Divider sx= opacity: 0.6  /> (opacity color) instead. See Migrating deprecated APIs details. orientation 'horizontal'| 'vertical'  Default 'horizontal' component orientation. sx Array<func| object| bool>| func| object  Default - system prop allows defining system overrides well additional CSS styles.See sx page details. textAlign 'center'| 'left'| 'right'  Default 'center' text alignment. variant 'fullWidth'| 'inset'| 'middle'| string  Default 'fullWidth' variant use.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Drawer.html","id":null,"dir":"Reference","previous_headings":"","what":"Drawer — Drawer","title":"Drawer — Drawer","text":"https://mui.com/material-ui/api/drawer/","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Drawer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Drawer — Drawer","text":"","code":"Drawer(...)  Drawer.shinyInput(inputId, ...)  updateDrawer.shinyInput(   session = shiny::getDefaultReactiveDomain(),   inputId,   ... )"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Drawer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Drawer — Drawer","text":"... Props pass component. inputId ID component. session Object passed `session` argument Shiny server.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Drawer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Drawer — Drawer","text":"Object shiny.tag class suitable use UI Shiny app.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Drawer.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Drawer — Drawer","text":"anchor 'bottom'| 'left'| 'right'| 'top'  Default 'left' Side drawer appear. children node  Default - content component. classes object  Default - Override extend styles applied component.See CSS classes API details. elevation integer  Default 16 elevation drawer. hideBackdrop bool  Default FALSE true, backdrop rendered. ModalProps object  Default  Props applied Modal element. onClose func  Default - Callback fired component requests closed. reason parameter can optionally used control response onClose.Signature:function(event: object, reason: string) => voidevent event source callback.reason Can : \"escapeKeyDown\", \"backdropClick\". open bool  Default FALSE true, component shown. PaperProps object  Default  Props applied Paper element.Deprecated－use slotProps.paper prop instead. prop removed future major release. See Migrating deprecated APIs details. SlideProps object  Default - Props applied Slide element.Deprecated－use slotProps.transition prop instead. prop removed future major release. See Migrating deprecated APIs details. slotProps { backdrop?: func| object, docked?: func| object, paper?: func| object, root?: func| object, transition?: func| object }  Default  props used slot inside. slots { backdrop?: elementType, docked?: elementType, paper?: elementType, root?: elementType, transition?: elementType }  Default  components used slot inside. sx Array<func| object| bool>| func| object  Default - system prop allows defining system overrides well additional CSS styles.See sx page details. transitionDuration number| { appear?: number, enter?: number, exit?: number }  Default    enter: theme.transitions.duration.enteringScreen,   exit: theme.transitions.duration.leavingScreen,  duration transition, milliseconds. may specify single timeout transitions, individually object. variant 'permanent'| 'persistent'| 'temporary'  Default 'temporary' variant use.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Fab.html","id":null,"dir":"Reference","previous_headings":"","what":"Fab — Fab","title":"Fab — Fab","text":"https://mui.com/material-ui/api/fab/","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Fab.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fab — Fab","text":"","code":"Fab(...)  Fab.shinyInput(inputId, ...)  updateFab.shinyInput(session = shiny::getDefaultReactiveDomain(), inputId, ...)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Fab.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fab — Fab","text":"... Props pass component. inputId ID component. session Object passed `session` argument Shiny server.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Fab.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fab — Fab","text":"Object shiny.tag class suitable use UI Shiny app.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Fab.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fab — Fab","text":"children node  Default - content component. classes object  Default - Override extend styles applied component.See CSS classes API details. color 'default'| 'error'| 'info'| 'inherit'| 'primary'| 'secondary'| 'success'| 'warning'| string  Default 'default' color component. supports default custom theme colors, can added shown palette customization guide. component elementType  Default - component used root node. Either string use HTML element component. disabled bool  Default FALSE true, component disabled. disableFocusRipple bool  Default FALSE true,  keyboard focus ripple disabled. disableRipple bool  Default - true, ripple effect disabled. href string  Default - URL link button clicked. defined, element used root node. size 'small'| 'medium'| 'large'| string  Default 'large' size component. small equivalent dense button styling. sx Array<func| object| bool>| func| object  Default - system prop allows defining system overrides well additional CSS styles.See sx page details. variant 'circular'| 'extended'| string  Default 'circular' variant use.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Fade.html","id":null,"dir":"Reference","previous_headings":"","what":"Fade — Fade","title":"Fade — Fade","text":"https://mui.com/material-ui/api/fade/","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Fade.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fade — Fade","text":"","code":"Fade(...)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Fade.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fade — Fade","text":"... Props pass component.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Fade.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fade — Fade","text":"Object shiny.tag class suitable use UI Shiny app.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Fade.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fade — Fade","text":"children element  Default - single child content element.needs able hold ref. addEndListener func  Default - Add custom transition end trigger. Called transitioning DOM node done callback. Allows fine grained transition end logic. Note: Timeouts still used fallback provided. appear bool  Default TRUE Perform enter transition first mounts also true. Set false disable behavior. easing { enter?: string, exit?: string }| string  Default - transition timing function. may specify single easing object containing enter exit values. bool  Default - true, component transition . timeout number| { appear?: number, enter?: number, exit?: number }  Default    enter: theme.transitions.duration.enteringScreen,   exit: theme.transitions.duration.leavingScreen,  duration transition, milliseconds. may specify single timeout transitions, individually object.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/FilledInput.html","id":null,"dir":"Reference","previous_headings":"","what":"FilledInput — FilledInput","title":"FilledInput — FilledInput","text":"https://mui.com/material-ui/api/filled-input/","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/FilledInput.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FilledInput — FilledInput","text":"","code":"FilledInput(...)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/FilledInput.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FilledInput — FilledInput","text":"... Props pass component.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/FilledInput.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"FilledInput — FilledInput","text":"Object shiny.tag class suitable use UI Shiny app.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/FilledInput.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"FilledInput — FilledInput","text":"autoComplete string  Default - prop helps users fill forms faster, especially mobile devices. name can confusing, like autofill. can learn following specification. autoFocus bool  Default - true, input element focused first mount. classes object  Default - Override extend styles applied component.See CSS classes API details. color 'primary'| 'secondary'| string  Default - color component. supports default custom theme colors, can added shown palette customization guide. prop defaults value ('primary') inherited parent FormControl component. components { Input?: elementType, Root?: elementType }  Default  components used slot inside.Deprecated－use slots prop instead. prop removed future major release. See Migrating deprecated APIs details. componentsProps { input?: object, root?: object }  Default  extra props slot components. can override existing props add new ones.Deprecated－use slotProps prop instead. prop removed future major release. See Migrating deprecated APIs details. defaultValue  Default - default value. Use component controlled. disabled bool  Default - true, component disabled. prop defaults value (false) inherited parent FormControl component. disableUnderline bool  Default FALSE true, input underline. endAdornment node  Default - End InputAdornment component. error bool  Default - true, input indicate error. prop defaults value (false) inherited parent FormControl component. fullWidth bool  Default FALSE true, input take full width container. hiddenLabel bool  Default FALSE true, label hidden. used increase density FilledInput. sure add aria-label input element. id string  Default - id input element. inputComponent elementType  Default 'input' component used input element. Either string use HTML element component. inputProps object  Default  Attributes applied input element. inputRef ref  Default - Pass ref input element. margin 'dense'| 'none'  Default - dense, adjust vertical spacing. normally obtained via context FormControl. prop defaults value ('none') inherited parent FormControl component. maxRows number| string  Default - Maximum number rows display multiline option set true. minRows number| string  Default - Minimum number rows display multiline option set true. multiline bool  Default FALSE true, TextareaAutosize element rendered. name string  Default - Name attribute input element. onChange func  Default - Callback fired value changed.Signature:function(event: React.ChangeEvent) => voidevent event source callback. can pull new value accessing event.target.value (string). placeholder string  Default - short hint displayed input user enters value. readOnly bool  Default - prevents user changing value field (interacting field). required bool  Default - true, input element required. prop defaults value (false) inherited parent FormControl component. rows number| string  Default - Number rows display multiline option set true. slotProps { input?: object, root?: object }  Default  extra props slot components. can override existing props add new ones.prop alias componentsProps prop, deprecated future. slots { input?: elementType, root?: elementType }  Default  components used slot inside.prop alias components prop, deprecated future. startAdornment node  Default - Start InputAdornment component. sx Array<func| object| bool>| func| object  Default - system prop allows defining system overrides well additional CSS styles.See sx page details. type string  Default 'text' Type input element. valid HTML5 input type. value  Default - value input element, required controlled component.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/FormControl.html","id":null,"dir":"Reference","previous_headings":"","what":"FormControl — FormControl","title":"FormControl — FormControl","text":"https://mui.com/material-ui/api/form-control/","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/FormControl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FormControl — FormControl","text":"","code":"FormControl(...)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/FormControl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FormControl — FormControl","text":"... Props pass component.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/FormControl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"FormControl — FormControl","text":"Object shiny.tag class suitable use UI Shiny app.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/FormControl.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"FormControl — FormControl","text":"children node  Default - content component. classes object  Default - Override extend styles applied component.See CSS classes API details. color 'primary'| 'secondary'| 'error'| 'info'| 'success'| 'warning'| string  Default 'primary' color component. supports default custom theme colors, can added shown palette customization guide. component elementType  Default - component used root node. Either string use HTML element component. disabled bool  Default FALSE true, label, input helper text displayed disabled state. error bool  Default FALSE true, label displayed error state. focused bool  Default - true, component displayed focused state. fullWidth bool  Default FALSE true, component take full width container. hiddenLabel bool  Default FALSE true, label hidden. used increase density FilledInput. sure add aria-label input element. margin 'dense'| 'none'| 'normal'  Default 'none' dense normal, adjust vertical spacing contained components. required bool  Default FALSE true, label indicate input required. size 'medium'| 'small'| string  Default 'medium' size component. sx Array<func| object| bool>| func| object  Default - system prop allows defining system overrides well additional CSS styles.See sx page details. variant 'filled'| 'outlined'| 'standard'  Default 'outlined' variant use.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/FormControlLabel.html","id":null,"dir":"Reference","previous_headings":"","what":"FormControlLabel — FormControlLabel","title":"FormControlLabel — FormControlLabel","text":"https://mui.com/material-ui/api/form-control-label/","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/FormControlLabel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FormControlLabel — FormControlLabel","text":"","code":"FormControlLabel(...)  FormControlLabel.shinyInput(inputId, ..., value = defaultValue)  updateFormControlLabel.shinyInput(   session = shiny::getDefaultReactiveDomain(),   inputId,   ... )"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/FormControlLabel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FormControlLabel — FormControlLabel","text":"... Props pass component. inputId ID component. value Starting value. session Object passed `session` argument Shiny server.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/FormControlLabel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"FormControlLabel — FormControlLabel","text":"Object shiny.tag class suitable use UI Shiny app.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/FormControlLabel.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"FormControlLabel — FormControlLabel","text":"control element  Default - control element. instance, can Radio, Switch Checkbox. checked bool  Default - true, component appears selected. classes object  Default - Override extend styles applied component.See CSS classes API details. componentsProps { typography?: object }  Default  props used slot inside.Deprecated－use slotProps prop instead. prop removed future major release. See Migrating deprecated APIs details. disabled bool  Default - true, control disabled. disableTypography bool  Default - true, label rendered passed without additional typography node. inputRef ref  Default - Pass ref input element. label node  Default - text element used enclosing label element. labelPlacement 'bottom'| 'end'| 'start'| 'top'  Default 'end' position label. onChange func  Default - Callback fired state changed.Signature:function(event: React.SyntheticEvent) => voidevent event source callback. can pull new checked state accessing event.target.checked (boolean). required bool  Default - true, label indicate input required. slotProps { typography?: func| object }  Default  props used slot inside. slots { typography?: elementType }  Default  components used slot inside. sx Array<func| object| bool>| func| object  Default - system prop allows defining system overrides well additional CSS styles.See sx page details. value  Default - value component.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/FormGroup.html","id":null,"dir":"Reference","previous_headings":"","what":"FormGroup — FormGroup","title":"FormGroup — FormGroup","text":"https://mui.com/material-ui/api/form-group/","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/FormGroup.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FormGroup — FormGroup","text":"","code":"FormGroup(...)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/FormGroup.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FormGroup — FormGroup","text":"... Props pass component.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/FormGroup.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"FormGroup — FormGroup","text":"Object shiny.tag class suitable use UI Shiny app.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/FormGroup.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"FormGroup — FormGroup","text":"children node  Default - content component. classes object  Default - Override extend styles applied component.See CSS classes API details. row bool  Default FALSE Display group elements compact row. sx Array<func| object| bool>| func| object  Default - system prop allows defining system overrides well additional CSS styles.See sx page details.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/FormHelperText.html","id":null,"dir":"Reference","previous_headings":"","what":"FormHelperText — FormHelperText","title":"FormHelperText — FormHelperText","text":"https://mui.com/material-ui/api/form-helper-text/","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/FormHelperText.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FormHelperText — FormHelperText","text":"","code":"FormHelperText(...)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/FormHelperText.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FormHelperText — FormHelperText","text":"... Props pass component.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/FormHelperText.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"FormHelperText — FormHelperText","text":"Object shiny.tag class suitable use UI Shiny app.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/FormHelperText.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"FormHelperText — FormHelperText","text":"children node  Default NA content component.' ' provided, component reserves one line height displaying future message. classes object  Default NA Override extend styles applied component.See CSS classes API details. component elementType  Default NA component used root node. Either string use HTML element component. disabled bool  Default NA true, helper text displayed disabled state. error bool  Default NA true, helper text displayed error state. filled bool  Default NA true, helper text use filled classes key. focused bool  Default NA true, helper text use focused classes key. margin 'dense'  Default NA dense, adjust vertical spacing. normally obtained via context FormControl. required bool  Default NA true, helper text use required classes key. sx Array<func| object| bool>| func| object  Default NA system prop allows defining system overrides well additional CSS styles.See sx page details. variant 'filled'| 'outlined'| 'standard'| string  Default NA variant use.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/FormLabel.html","id":null,"dir":"Reference","previous_headings":"","what":"FormLabel — FormLabel","title":"FormLabel — FormLabel","text":"https://mui.com/material-ui/api/form-label/","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/FormLabel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FormLabel — FormLabel","text":"","code":"FormLabel(...)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/FormLabel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FormLabel — FormLabel","text":"... Props pass component.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/FormLabel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"FormLabel — FormLabel","text":"Object shiny.tag class suitable use UI Shiny app.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/FormLabel.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"FormLabel — FormLabel","text":"children node  Default NA content component. classes object  Default NA Override extend styles applied component.See CSS classes API details. color 'error'| 'info'| 'primary'| 'secondary'| 'success'| 'warning'| string  Default NA color component. supports default custom theme colors, can added shown palette customization guide. component elementType  Default NA component used root node. Either string use HTML element component. disabled bool  Default NA true, label displayed disabled state. error bool  Default NA true, label displayed error state. filled bool  Default NA true, label use filled classes key. focused bool  Default NA true, input label focused (used FormGroup components). required bool  Default NA true, label indicate input required. sx Array<func| object| bool>| func| object  Default NA system prop allows defining system overrides well additional CSS styles.See sx page details.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/GlobalStyles.html","id":null,"dir":"Reference","previous_headings":"","what":"GlobalStyles — GlobalStyles","title":"GlobalStyles — GlobalStyles","text":"https://mui.com/material-ui/api/global-styles/","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/GlobalStyles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"GlobalStyles — GlobalStyles","text":"","code":"GlobalStyles(...)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/GlobalStyles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"GlobalStyles — GlobalStyles","text":"... Props pass component.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/GlobalStyles.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"GlobalStyles — GlobalStyles","text":"Object shiny.tag class suitable use UI Shiny app.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/GlobalStyles.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"GlobalStyles — GlobalStyles","text":"styles array| func| number| object| string| bool  Default NA styles want apply globally.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Grid.html","id":null,"dir":"Reference","previous_headings":"","what":"Grid — Grid","title":"Grid — Grid","text":"https://mui.com/material-ui/api/grid/","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Grid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Grid — Grid","text":"","code":"Grid(...)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Grid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Grid — Grid","text":"... Props pass component.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Grid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Grid — Grid","text":"Object shiny.tag class suitable use UI Shiny app.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Grid.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Grid — Grid","text":"children node  Default - content component. columns Array<number>| number| object  Default 12 number columns. columnSpacing Array<number| string>| number| object| string  Default - Defines horizontal space type item components. overrides value spacing prop. container bool  Default FALSE true, component flex container behavior. wrapping items container. direction 'column-reverse'| 'column'| 'row-reverse'| 'row'| Array<'column-reverse'| 'column'| 'row-reverse'| 'row'>| object  Default 'row' Defines flex-direction style property. applied screen sizes. offset string| number| Array<string| number>| object  Default - Defines offset value type item components. rowSpacing Array<number| string>| number| object| string  Default - Defines vertical space type item components. overrides value spacing prop. size string| bool| number| Array<string| bool| number>| object  Default - Defines size type item components. spacing Array<number| string>| number| object| string  Default 0 Defines space type item components. can used type container component. wrap 'nowrap'| 'wrap-reverse'| 'wrap'  Default 'wrap' Defines flex-wrap style property. applied screen sizes.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/GridLegacy.html","id":null,"dir":"Reference","previous_headings":"","what":"GridLegacy — GridLegacy","title":"GridLegacy — GridLegacy","text":"https://mui.com/material-ui/api/grid-legacy/","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/GridLegacy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"GridLegacy — GridLegacy","text":"","code":"GridLegacy(...)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/GridLegacy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"GridLegacy — GridLegacy","text":"... Props pass component.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/GridLegacy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"GridLegacy — GridLegacy","text":"Object shiny.tag class suitable use UI Shiny app.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/GridLegacy.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"GridLegacy — GridLegacy","text":"children node  Default - content component. classes object  Default - Override extend styles applied component.See CSS classes API details. columns Array<number>| number| object  Default 12 number columns. columnSpacing Array<number| string>| number| object| string  Default - Defines horizontal space type item components. overrides value spacing prop. component elementType  Default - component used root node. Either string use HTML element component. container bool  Default FALSE true, component flex container behavior. wrapping items container. direction 'column-reverse'| 'column'| 'row-reverse'| 'row'| Array<'column-reverse'| 'column'| 'row-reverse'| 'row'>| object  Default 'row' Defines flex-direction style property. applied screen sizes. item bool  Default FALSE true, component flex item behavior. wrapping items container. lg 'auto'| number| bool  Default FALSE number, sets number columns grid item uses. greater total number columns container (12 default). 'auto', grid item's width matches content. false, prop ignored. true, grid item's width grows use space available grid container. value applied lg breakpoint wider screens overridden. md 'auto'| number| bool  Default FALSE number, sets number columns grid item uses. greater total number columns container (12 default). 'auto', grid item's width matches content. false, prop ignored. true, grid item's width grows use space available grid container. value applied md breakpoint wider screens overridden. rowSpacing Array<number| string>| number| object| string  Default - Defines vertical space type item components. overrides value spacing prop. sm 'auto'| number| bool  Default FALSE number, sets number columns grid item uses. greater total number columns container (12 default). 'auto', grid item's width matches content. false, prop ignored. true, grid item's width grows use space available grid container. value applied sm breakpoint wider screens overridden. spacing Array<number| string>| number| object| string  Default 0 Defines space type item components. can used type container component. sx Array<func| object| bool>| func| object  Default - system prop allows defining system overrides well additional CSS styles.See sx page details. wrap 'nowrap'| 'wrap-reverse'| 'wrap'  Default 'wrap' Defines flex-wrap style property. applied screen sizes. xl 'auto'| number| bool  Default FALSE number, sets number columns grid item uses. greater total number columns container (12 default). 'auto', grid item's width matches content. false, prop ignored. true, grid item's width grows use space available grid container. value applied xl breakpoint wider screens overridden. xs 'auto'| number| bool  Default FALSE number, sets number columns grid item uses. greater total number columns container (12 default). 'auto', grid item's width matches content. false, prop ignored. true, grid item's width grows use space available grid container. value applied screen sizes lowest priority. zeroMinWidth bool  Default FALSE true, sets min-width: 0 item. Refer limitations section documentation better understand use case.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Grow.html","id":null,"dir":"Reference","previous_headings":"","what":"Grow — Grow","title":"Grow — Grow","text":"https://mui.com/material-ui/api/grow/","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Grow.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Grow — Grow","text":"","code":"Grow(...)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Grow.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Grow — Grow","text":"... Props pass component.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Grow.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Grow — Grow","text":"Object shiny.tag class suitable use UI Shiny app.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Grow.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Grow — Grow","text":"children element  Default - single child content element.needs able hold ref. addEndListener func  Default - Add custom transition end trigger. Called transitioning DOM node done callback. Allows fine grained transition end logic. Note: Timeouts still used fallback provided. appear bool  Default TRUE Perform enter transition first mounts also true. Set false disable behavior. easing { enter?: string, exit?: string }| string  Default - transition timing function. may specify single easing object containing enter exit values. bool  Default - true, component transition . timeout 'auto'| number| { appear?: number, enter?: number, exit?: number }  Default 'auto' duration transition, milliseconds. may specify single timeout transitions, individually object.Set 'auto' automatically calculate transition time based height.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Icon.html","id":null,"dir":"Reference","previous_headings":"","what":"Icon — Icon","title":"Icon — Icon","text":"https://mui.com/material-ui/api/icon/","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Icon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Icon — Icon","text":"","code":"Icon(...)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Icon.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Icon — Icon","text":"... Props pass component.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Icon.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Icon — Icon","text":"Object shiny.tag class suitable use UI Shiny app.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Icon.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Icon — Icon","text":"baseClassName string  Default 'material-icons' base class applied icon. Defaults 'material-icons', can changed base class suits icon font using (example material-icons-rounded, fas, etc). children node  Default - name icon font ligature. classes object  Default - Override extend styles applied component.See CSS classes API details. color 'inherit'| 'action'| 'disabled'| 'primary'| 'secondary'| 'error'| 'info'| 'success'| 'warning'| string  Default 'inherit' color component. supports default custom theme colors, can added shown palette customization guide. component elementType  Default - component used root node. Either string use HTML element component. fontSize 'inherit'| 'large'| 'medium'| 'small'| string  Default 'medium' fontSize applied icon. Defaults 24px, can configure inherit font size. sx Array<func| object| bool>| func| object  Default - system prop allows defining system overrides well additional CSS styles.See sx page details.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/IconButton.html","id":null,"dir":"Reference","previous_headings":"","what":"IconButton — IconButton","title":"IconButton — IconButton","text":"https://mui.com/material-ui/api/icon-button/","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/IconButton.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"IconButton — IconButton","text":"","code":"IconButton(...)  IconButton.shinyInput(inputId, ...)  updateIconButton.shinyInput(   session = shiny::getDefaultReactiveDomain(),   inputId,   ... )"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/IconButton.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"IconButton — IconButton","text":"... Props pass component. inputId ID component. session Object passed `session` argument Shiny server.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/IconButton.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"IconButton — IconButton","text":"Object shiny.tag class suitable use UI Shiny app.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/IconButton.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"IconButton — IconButton","text":"children node  Default - icon display. classes object  Default - Override extend styles applied component.See CSS classes API details. color 'inherit'| 'default'| 'primary'| 'secondary'| 'error'| 'info'| 'success'| 'warning'| string  Default 'default' color component. supports default custom theme colors, can added shown palette customization guide. disabled bool  Default FALSE true, component disabled. disableFocusRipple bool  Default FALSE true,  keyboard focus ripple disabled. disableRipple bool  Default FALSE true, ripple effect disabled.⚠️ Without ripple styling :focus-visible default. sure highlight element applying separate styles .Mui-focusVisible class. edge 'end'| 'start'| false  Default FALSE given, uses negative margin counteract padding one side (often helpful aligning left right side icon content , without ruining border size shape). loading bool  Default null true, loading indicator visible button disabled. true | false, loading wrapper always rendered children prevent Google Translation Crash. loadingIndicator node  Default  Element placed children button loading state. node contain element role=\"progressbar\" accessible name. default, renders CircularProgress labeled button . size 'small'| 'medium'| 'large'| string  Default 'medium' size component. small equivalent dense button styling. sx Array<func| object| bool>| func| object  Default - system prop allows defining system overrides well additional CSS styles.See sx page details.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/ImageList.html","id":null,"dir":"Reference","previous_headings":"","what":"ImageList — ImageList","title":"ImageList — ImageList","text":"https://mui.com/material-ui/api/image-list/","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/ImageList.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ImageList — ImageList","text":"","code":"ImageList(...)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/ImageList.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ImageList — ImageList","text":"... Props pass component.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/ImageList.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ImageList — ImageList","text":"Object shiny.tag class suitable use UI Shiny app.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/ImageList.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"ImageList — ImageList","text":"children node  Default - content component, normally ImageListItems. classes object  Default - Override extend styles applied component.See CSS classes API details. cols integer  Default 2 Number columns. component elementType  Default - component used root node. Either string use HTML element component. gap number  Default 4 gap items px. rowHeight 'auto'| number  Default 'auto' height one row px. sx Array<func| object| bool>| func| object  Default - system prop allows defining system overrides well additional CSS styles.See sx page details. variant 'masonry'| 'quilted'| 'standard'| 'woven'| string  Default 'standard' variant use.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/ImageListItem.html","id":null,"dir":"Reference","previous_headings":"","what":"ImageListItem — ImageListItem","title":"ImageListItem — ImageListItem","text":"https://mui.com/material-ui/api/image-list-item/","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/ImageListItem.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ImageListItem — ImageListItem","text":"","code":"ImageListItem(...)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/ImageListItem.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ImageListItem — ImageListItem","text":"... Props pass component.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/ImageListItem.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ImageListItem — ImageListItem","text":"Object shiny.tag class suitable use UI Shiny app.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/ImageListItem.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"ImageListItem — ImageListItem","text":"children node  Default - content component, normally . classes object  Default - Override extend styles applied component.See CSS classes API details. cols integer  Default 1 Width item number grid columns. component elementType  Default - component used root node. Either string use HTML element component. rows integer  Default 1 Height item number grid rows. sx Array<func| object| bool>| func| object  Default - system prop allows defining system overrides well additional CSS styles.See sx page details.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/ImageListItemBar.html","id":null,"dir":"Reference","previous_headings":"","what":"ImageListItemBar — ImageListItemBar","title":"ImageListItemBar — ImageListItemBar","text":"https://mui.com/material-ui/api/image-list-item-bar/","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/ImageListItemBar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ImageListItemBar — ImageListItemBar","text":"","code":"ImageListItemBar(...)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/ImageListItemBar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ImageListItemBar — ImageListItemBar","text":"... Props pass component.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/ImageListItemBar.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ImageListItemBar — ImageListItemBar","text":"Object shiny.tag class suitable use UI Shiny app.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/ImageListItemBar.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"ImageListItemBar — ImageListItemBar","text":"actionIcon node  Default - IconButton element used secondary action target (primary action target item ). actionPosition 'left'| 'right'  Default 'right' Position secondary action IconButton. classes object  Default - Override extend styles applied component.See CSS classes API details. position ''| 'bottom'| 'top'  Default 'bottom' Position title bar. subtitle node  Default - String element serving subtitle (support text). sx Array<func| object| bool>| func| object  Default - system prop allows defining system overrides well additional CSS styles.See sx page details. title node  Default - Title displayed.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Input.html","id":null,"dir":"Reference","previous_headings":"","what":"Input — Input","title":"Input — Input","text":"https://mui.com/material-ui/api/input/","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Input.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Input — Input","text":"","code":"Input(...)  Input.shinyInput(inputId, ..., value = defaultValue)  updateInput.shinyInput(   session = shiny::getDefaultReactiveDomain(),   inputId,   ... )"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Input.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Input — Input","text":"... Props pass component. inputId ID component. value Starting value. session Object passed `session` argument Shiny server.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Input.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Input — Input","text":"Object shiny.tag class suitable use UI Shiny app.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Input.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Input — Input","text":"autoComplete string  Default - prop helps users fill forms faster, especially mobile devices. name can confusing, like autofill. can learn following specification. autoFocus bool  Default - true, input element focused first mount. classes object  Default - Override extend styles applied component.See CSS classes API details. color 'primary'| 'secondary'| string  Default - color component. supports default custom theme colors, can added shown palette customization guide. prop defaults value ('primary') inherited parent FormControl component. components { Input?: elementType, Root?: elementType }  Default  components used slot inside.Deprecated－use slots prop instead. prop removed future major release. See Migrating deprecated APIs details. componentsProps { input?: object, root?: object }  Default  extra props slot components. can override existing props add new ones.Deprecated－use slotProps prop instead. prop removed future major release. See Migrating deprecated APIs details. defaultValue  Default - default value. Use component controlled. disabled bool  Default - true, component disabled. prop defaults value (false) inherited parent FormControl component. disableUnderline bool  Default FALSE true, input underline. endAdornment node  Default - End InputAdornment component. error bool  Default - true, input indicate error. prop defaults value (false) inherited parent FormControl component. fullWidth bool  Default FALSE true, input take full width container. id string  Default - id input element. inputComponent elementType  Default 'input' component used input element. Either string use HTML element component. inputProps object  Default  Attributes applied input element. inputRef ref  Default - Pass ref input element. margin 'dense'| 'none'  Default - dense, adjust vertical spacing. normally obtained via context FormControl. prop defaults value ('none') inherited parent FormControl component. maxRows number| string  Default - Maximum number rows display multiline option set true. minRows number| string  Default - Minimum number rows display multiline option set true. multiline bool  Default FALSE true, TextareaAutosize element rendered. name string  Default - Name attribute input element. onChange func  Default - Callback fired value changed.Signature:function(event: React.ChangeEvent) => voidevent event source callback. can pull new value accessing event.target.value (string). placeholder string  Default - short hint displayed input user enters value. readOnly bool  Default - prevents user changing value field (interacting field). required bool  Default - true, input element required. prop defaults value (false) inherited parent FormControl component. rows number| string  Default - Number rows display multiline option set true. slotProps { input?: object, root?: object }  Default  extra props slot components. can override existing props add new ones.prop alias componentsProps prop, deprecated future. slots { input?: elementType, root?: elementType }  Default  components used slot inside.prop alias components prop, deprecated future. startAdornment node  Default - Start InputAdornment component. sx Array<func| object| bool>| func| object  Default - system prop allows defining system overrides well additional CSS styles.See sx page details. type string  Default 'text' Type input element. valid HTML5 input type. value  Default - value input element, required controlled component.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/InputAdornment.html","id":null,"dir":"Reference","previous_headings":"","what":"InputAdornment — InputAdornment","title":"InputAdornment — InputAdornment","text":"https://mui.com/material-ui/api/input-adornment/","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/InputAdornment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"InputAdornment — InputAdornment","text":"","code":"InputAdornment(...)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/InputAdornment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"InputAdornment — InputAdornment","text":"... Props pass component.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/InputAdornment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"InputAdornment — InputAdornment","text":"Object shiny.tag class suitable use UI Shiny app.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/InputAdornment.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"InputAdornment — InputAdornment","text":"position 'end'| 'start'  Default - position adornment appear relative Input. children node  Default - content component, normally IconButton string. classes object  Default - Override extend styles applied component.See CSS classes API details. component elementType  Default - component used root node. Either string use HTML element component. disablePointerEvents bool  Default FALSE Disable pointer events root. allows content adornment focus input click. disableTypography bool  Default FALSE children string disable wrapping Typography component. sx Array<func| object| bool>| func| object  Default - system prop allows defining system overrides well additional CSS styles.See sx page details. variant 'filled'| 'outlined'| 'standard'  Default - variant use. Note: using TextField component FormControl component set manually.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/InputBase.html","id":null,"dir":"Reference","previous_headings":"","what":"InputBase — InputBase","title":"InputBase — InputBase","text":"https://mui.com/material-ui/api/input-base/","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/InputBase.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"InputBase — InputBase","text":"","code":"InputBase(...)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/InputBase.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"InputBase — InputBase","text":"... Props pass component.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/InputBase.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"InputBase — InputBase","text":"Object shiny.tag class suitable use UI Shiny app.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/InputBase.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"InputBase — InputBase","text":"autoComplete string  Default - prop helps users fill forms faster, especially mobile devices. name can confusing, like autofill. can learn following specification. autoFocus bool  Default - true, input element focused first mount. classes object  Default - Override extend styles applied component.See CSS classes API details. color 'primary'| 'secondary'| 'error'| 'info'| 'success'| 'warning'| string  Default - color component. supports default custom theme colors, can added shown palette customization guide. prop defaults value ('primary') inherited parent FormControl component. components { Input?: elementType, Root?: elementType }  Default  components used slot inside.Deprecated－use slots prop instead. prop removed future major release. See Migrating deprecated APIs details. componentsProps { input?: object, root?: object }  Default  extra props slot components. can override existing props add new ones.Deprecated－use slotProps prop instead. prop removed future major release. See Migrating deprecated APIs details. defaultValue  Default - default value. Use component controlled. disabled bool  Default - true, component disabled. prop defaults value (false) inherited parent FormControl component. disableInjectingGlobalStyles bool  Default FALSE true, GlobalStyles auto-fill keyframes injected/removed mount/unmount. Make sure inject top application. option intended help boosting initial rendering performance loading big amount Input components . endAdornment node  Default - End InputAdornment component. error bool  Default - true, input indicate error. prop defaults value (false) inherited parent FormControl component. fullWidth bool  Default FALSE true, input take full width container. id string  Default - id input element. inputComponent element type  Default 'input' component used input element. Either string use HTML element component.needs able hold ref. inputProps object  Default  Attributes applied input element. inputRef ref  Default - Pass ref input element. margin 'dense'| 'none'  Default - dense, adjust vertical spacing. normally obtained via context FormControl. prop defaults value ('none') inherited parent FormControl component. maxRows number| string  Default - Maximum number rows display multiline option set true. minRows number| string  Default - Minimum number rows display multiline option set true. multiline bool  Default FALSE true, TextareaAutosize element rendered. name string  Default - Name attribute input element. onBlur func  Default - Callback fired input blurred.Notice first argument (event) might undefined. onChange func  Default - Callback fired value changed.Signature:function(event: React.ChangeEvent) => voidevent event source callback. can pull new value accessing event.target.value (string). onInvalid func  Default - Callback fired input satisfy constraints. placeholder string  Default - short hint displayed input user enters value. readOnly bool  Default - prevents user changing value field (interacting field). required bool  Default - true, input element required. prop defaults value (false) inherited parent FormControl component. rows number| string  Default - Number rows display multiline option set true. size 'medium'| 'small'| string  Default - size component. slotProps { input?: object, root?: object }  Default  extra props slot components. can override existing props add new ones.prop alias componentsProps prop, deprecated future. slots { input?: elementType, root?: elementType }  Default  components used slot inside.prop alias components prop, deprecated future. startAdornment node  Default - Start InputAdornment component. sx Array<func| object| bool>| func| object  Default - system prop allows defining system overrides well additional CSS styles.See sx page details. type string  Default 'text' Type input element. valid HTML5 input type. value  Default - value input element, required controlled component.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/InputLabel.html","id":null,"dir":"Reference","previous_headings":"","what":"InputLabel — InputLabel","title":"InputLabel — InputLabel","text":"https://mui.com/material-ui/api/input-label/","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/InputLabel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"InputLabel — InputLabel","text":"","code":"InputLabel(...)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/InputLabel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"InputLabel — InputLabel","text":"... Props pass component.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/InputLabel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"InputLabel — InputLabel","text":"Object shiny.tag class suitable use UI Shiny app.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/InputLabel.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"InputLabel — InputLabel","text":"children node  Default - content component. classes object  Default - Override extend styles applied component.See CSS classes API details. color 'error'| 'info'| 'primary'| 'secondary'| 'success'| 'warning'| string  Default - color component. supports default custom theme colors, can added shown palette customization guide. disableAnimation bool  Default FALSE true, transition animation disabled. disabled bool  Default - true, component disabled. error bool  Default - true, label displayed error state. focused bool  Default - true, input label focused. margin 'dense'  Default - dense, adjust vertical spacing. normally obtained via context FormControl. required bool  Default - true, label indicate input required. shrink bool  Default - true, label shrunk. size 'medium'| 'small'| string  Default 'medium' size component. sx Array<func| object| bool>| func| object  Default - system prop allows defining system overrides well additional CSS styles.See sx page details. variant 'filled'| 'outlined'| 'standard'  Default - variant use.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/LinearProgress.html","id":null,"dir":"Reference","previous_headings":"","what":"LinearProgress — LinearProgress","title":"LinearProgress — LinearProgress","text":"https://mui.com/material-ui/api/linear-progress/","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/LinearProgress.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"LinearProgress — LinearProgress","text":"","code":"LinearProgress(...)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/LinearProgress.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"LinearProgress — LinearProgress","text":"... Props pass component.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/LinearProgress.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"LinearProgress — LinearProgress","text":"Object shiny.tag class suitable use UI Shiny app.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/LinearProgress.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"LinearProgress — LinearProgress","text":"classes object  Default - Override extend styles applied component.See CSS classes API details. color 'inherit'| 'primary'| 'secondary'| string  Default 'primary' color component. supports default custom theme colors, can added shown palette customization guide. sx Array<func| object| bool>| func| object  Default - system prop allows defining system overrides well additional CSS styles.See sx page details. value number  Default - value progress indicator determinate buffer variants. Value 0 100. valueBuffer number  Default - value buffer variant. Value 0 100. variant 'buffer'| 'determinate'| 'indeterminate'| 'query'  Default 'indeterminate' variant use. Use indeterminate query progress value.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Link.html","id":null,"dir":"Reference","previous_headings":"","what":"Link — Link","title":"Link — Link","text":"https://mui.com/material-ui/api/link/","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Link.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Link — Link","text":"","code":"Link(...)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Link.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Link — Link","text":"... Props pass component.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Link.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Link — Link","text":"Object shiny.tag class suitable use UI Shiny app.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Link.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Link — Link","text":"children node  Default - content component. classes object  Default - Override extend styles applied component.See CSS classes API details. color 'primary'| 'secondary'| 'success'| 'error'| 'info'| 'warning'| 'textPrimary'| 'textSecondary'| 'textDisabled'| string  Default 'primary' color link. component element type  Default - component used root node. Either string use HTML element component.needs able hold ref. sx Array<func| object| bool>| func| object  Default - system prop allows defining system overrides well additional CSS styles.See sx page details. TypographyClasses object  Default - classes prop applied Typography element. underline 'always'| 'hover'| 'none'  Default 'always' Controls link underline. variant 'body1'| 'body2'| 'button'| 'caption'| 'h1'| 'h2'| 'h3'| 'h4'| 'h5'| 'h6'| 'inherit'| 'overline'| 'subtitle1'| 'subtitle2'| string  Default 'inherit' Applies theme typography styles.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/List.html","id":null,"dir":"Reference","previous_headings":"","what":"List — List","title":"List — List","text":"https://mui.com/material-ui/api/list/","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/List.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List — List","text":"","code":"List(...)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/List.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List — List","text":"... Props pass component.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/List.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List — List","text":"Object shiny.tag class suitable use UI Shiny app.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/List.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"List — List","text":"children node  Default - content component. classes object  Default - Override extend styles applied component.See CSS classes API details. component elementType  Default - component used root node. Either string use HTML element component. dense bool  Default FALSE true, compact vertical padding designed keyboard mouse input used list list items. prop available descendant components dense context. disablePadding bool  Default FALSE true, vertical padding removed list. subheader node  Default - content subheader, normally ListSubheader. sx Array<func| object| bool>| func| object  Default - system prop allows defining system overrides well additional CSS styles.See sx page details.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/ListItem.html","id":null,"dir":"Reference","previous_headings":"","what":"ListItem — ListItem","title":"ListItem — ListItem","text":"https://mui.com/material-ui/api/list-item/","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/ListItem.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ListItem — ListItem","text":"","code":"ListItem(...)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/ListItem.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ListItem — ListItem","text":"... Props pass component.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/ListItem.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ListItem — ListItem","text":"Object shiny.tag class suitable use UI Shiny app.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/ListItem.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"ListItem — ListItem","text":"alignItems 'center'| 'flex-start'  Default 'center' Defines align-items style property. children node  Default - content component ListItemSecondaryAction used must last child. classes object  Default - Override extend styles applied component.See CSS classes API details. component elementType  Default - component used root node. Either string use HTML element component. components { Root?: elementType }  Default  components used slot inside.Deprecated－Use slots prop instead. prop removed future major release. See Migrating deprecated APIs details. componentsProps { root?: object }  Default  extra props slot components. can override existing props add new ones.Deprecated－Use slotProps prop instead. prop removed future major release. See Migrating deprecated APIs details. ContainerComponent element type  Default 'li' container component used ListItemSecondaryAction last child.needs able hold ref.Deprecated－Use component slots.root prop instead. prop removed future major release. See Migrating deprecated APIs details. ContainerProps object  Default  Props applied container component used.Deprecated－Use slotProps.root prop instead. prop removed future major release. See Migrating deprecated APIs details. dense bool  Default FALSE true, compact vertical padding designed keyboard mouse input used. prop defaults value inherited parent List component. disableGutters bool  Default FALSE true, left right padding removed. disablePadding bool  Default FALSE true, padding removed. divider bool  Default FALSE true, 1px light border added bottom list item. secondaryAction node  Default - element display end ListItem. slotProps { root?: object }  Default  extra props slot components. can override existing props add new ones. slots { root?: elementType }  Default  components used slot inside. sx Array<func| object| bool>| func| object  Default - system prop allows defining system overrides well additional CSS styles.See sx page details.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/ListItemAvatar.html","id":null,"dir":"Reference","previous_headings":"","what":"ListItemAvatar — ListItemAvatar","title":"ListItemAvatar — ListItemAvatar","text":"https://mui.com/material-ui/api/list-item-avatar/","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/ListItemAvatar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ListItemAvatar — ListItemAvatar","text":"","code":"ListItemAvatar(...)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/ListItemAvatar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ListItemAvatar — ListItemAvatar","text":"... Props pass component.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/ListItemAvatar.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ListItemAvatar — ListItemAvatar","text":"Object shiny.tag class suitable use UI Shiny app.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/ListItemAvatar.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"ListItemAvatar — ListItemAvatar","text":"children node  Default NA content component, normally Avatar. classes object  Default NA Override extend styles applied component.See CSS classes API details. sx Array<func| object| bool>| func| object  Default NA system prop allows defining system overrides well additional CSS styles.See sx page details.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/ListItemButton.html","id":null,"dir":"Reference","previous_headings":"","what":"ListItemButton — ListItemButton","title":"ListItemButton — ListItemButton","text":"https://mui.com/material-ui/api/list-item-button/","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/ListItemButton.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ListItemButton — ListItemButton","text":"","code":"ListItemButton(...)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/ListItemButton.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ListItemButton — ListItemButton","text":"... Props pass component.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/ListItemButton.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ListItemButton — ListItemButton","text":"Object shiny.tag class suitable use UI Shiny app.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/ListItemButton.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"ListItemButton — ListItemButton","text":"alignItems 'center'| 'flex-start'  Default 'center' Defines align-items style property. autoFocus bool  Default FALSE true, list item focused first mount. Focus also triggered value changes false true. children node  Default - content component ListItemSecondaryAction used must last child. classes object  Default - Override extend styles applied component.See CSS classes API details. component elementType  Default - component used root node. Either string use HTML element component. dense bool  Default FALSE true, compact vertical padding designed keyboard mouse input used. prop defaults value inherited parent List component. disabled bool  Default FALSE true, component disabled. disableGutters bool  Default FALSE true, left right padding removed. divider bool  Default FALSE true, 1px light border added bottom list item. focusVisibleClassName string  Default - prop can help identify element keyboard focus. class name applied element gains focus keyboard interaction. polyfill CSS :focus-visible selector. rationale using feature explained . polyfill can used apply focus-visible class components needed. selected bool  Default FALSE Use apply selected styling. sx Array<func| object| bool>| func| object  Default - system prop allows defining system overrides well additional CSS styles.See sx page details.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/ListItemIcon.html","id":null,"dir":"Reference","previous_headings":"","what":"ListItemIcon — ListItemIcon","title":"ListItemIcon — ListItemIcon","text":"https://mui.com/material-ui/api/list-item-icon/","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/ListItemIcon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ListItemIcon — ListItemIcon","text":"","code":"ListItemIcon(...)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/ListItemIcon.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ListItemIcon — ListItemIcon","text":"... Props pass component.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/ListItemIcon.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ListItemIcon — ListItemIcon","text":"Object shiny.tag class suitable use UI Shiny app.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/ListItemIcon.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"ListItemIcon — ListItemIcon","text":"children node  Default NA content component, normally Icon, SvgIcon, @mui/icons-material SVG icon element. classes object  Default NA Override extend styles applied component.See CSS classes API details. sx Array<func| object| bool>| func| object  Default NA system prop allows defining system overrides well additional CSS styles.See sx page details.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/ListItemSecondaryAction.html","id":null,"dir":"Reference","previous_headings":"","what":"ListItemSecondaryAction — ListItemSecondaryAction","title":"ListItemSecondaryAction — ListItemSecondaryAction","text":"https://mui.com/material-ui/api/list-item-secondary-action/","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/ListItemSecondaryAction.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ListItemSecondaryAction — ListItemSecondaryAction","text":"","code":"ListItemSecondaryAction(...)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/ListItemSecondaryAction.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ListItemSecondaryAction — ListItemSecondaryAction","text":"... Props pass component.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/ListItemSecondaryAction.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ListItemSecondaryAction — ListItemSecondaryAction","text":"Object shiny.tag class suitable use UI Shiny app.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/ListItemSecondaryAction.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"ListItemSecondaryAction — ListItemSecondaryAction","text":"children node  Default NA content component, normally IconButton selection control. classes object  Default NA Override extend styles applied component.See CSS classes API details. sx Array<func| object| bool>| func| object  Default NA system prop allows defining system overrides well additional CSS styles.See sx page details.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/ListItemText.html","id":null,"dir":"Reference","previous_headings":"","what":"ListItemText — ListItemText","title":"ListItemText — ListItemText","text":"https://mui.com/material-ui/api/list-item-text/","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/ListItemText.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ListItemText — ListItemText","text":"","code":"ListItemText(...)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/ListItemText.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ListItemText — ListItemText","text":"... Props pass component.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/ListItemText.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ListItemText — ListItemText","text":"Object shiny.tag class suitable use UI Shiny app.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/ListItemText.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"ListItemText — ListItemText","text":"children node  Default - Alias primary prop. classes object  Default - Override extend styles applied component.See CSS classes API details. disableTypography bool  Default FALSE true, children wrapped Typography component. can useful render alternative Typography variant wrapping children (primary) text, optional secondary text Typography component. inset bool  Default FALSE true, children indented. used left avatar left icon. primary node  Default - main content element. primaryTypographyProps object  Default - props forwarded primary typography component (long disableTypography true).Deprecated－Use slotProps.primary instead. prop removed future major release. See Migrating deprecated APIs details. secondary node  Default - secondary content element. secondaryTypographyProps object  Default - props forwarded secondary typography component (long disableTypography true).Deprecated－Use slotProps.secondary instead. prop removed future major release. See Migrating deprecated APIs details. slotProps { primary?: func| object, root?: func| object, secondary?: func| object }  Default  props used slot inside. slots { primary?: elementType, root?: elementType, secondary?: elementType }  Default  components used slot inside. sx Array<func| object| bool>| func| object  Default - system prop allows defining system overrides well additional CSS styles.See sx page details.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/ListSubheader.html","id":null,"dir":"Reference","previous_headings":"","what":"ListSubheader — ListSubheader","title":"ListSubheader — ListSubheader","text":"https://mui.com/material-ui/api/list-subheader/","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/ListSubheader.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ListSubheader — ListSubheader","text":"","code":"ListSubheader(...)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/ListSubheader.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ListSubheader — ListSubheader","text":"... Props pass component.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/ListSubheader.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ListSubheader — ListSubheader","text":"Object shiny.tag class suitable use UI Shiny app.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/ListSubheader.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"ListSubheader — ListSubheader","text":"children node  Default - content component. classes object  Default - Override extend styles applied component.See CSS classes API details. color 'default'| 'inherit'| 'primary'  Default 'default' color component. supports theme colors make sense component. component elementType  Default - component used root node. Either string use HTML element component. disableGutters bool  Default FALSE true, List Subheader gutters. disableSticky bool  Default FALSE true, List Subheader stick top scroll. inset bool  Default FALSE true, List Subheader indented. sx Array<func| object| bool>| func| object  Default - system prop allows defining system overrides well additional CSS styles.See sx page details.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Masonry.html","id":null,"dir":"Reference","previous_headings":"","what":"Masonry — Masonry","title":"Masonry — Masonry","text":"https://mui.com/material-ui/api/masonry/","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Masonry.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Masonry — Masonry","text":"","code":"Masonry(...)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Masonry.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Masonry — Masonry","text":"... Props pass component.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Masonry.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Masonry — Masonry","text":"Object shiny.tag class suitable use UI Shiny app.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Masonry.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Masonry — Masonry","text":"children node  Default - content component. classes object  Default - Override extend styles applied component.See CSS classes API details. columns Array<number| string>| number| object| string  Default 4 Number columns. component elementType  Default - component used root node. Either string use HTML element component. defaultColumns number  Default - default number columns component. provided server-side rendering. defaultHeight number  Default - default height component px. provided server-side rendering. defaultSpacing number  Default - default spacing component. Like spacing, factor theme's spacing. provided server-side rendering. sequential bool  Default FALSE Allows using sequential order rather adding shortest column spacing Array<number| string>| number| object| string  Default 1 Defines space children. factor theme's spacing. sx Array<func| object| bool>| func| object  Default - Allows defining system overrides well additional CSS styles.See sx page details.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Menu.html","id":null,"dir":"Reference","previous_headings":"","what":"Menu — Menu","title":"Menu — Menu","text":"https://mui.com/material-ui/api/menu/","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Menu.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Menu — Menu","text":"","code":"Menu(...)  Menu.shinyInput(inputId, ...)  updateMenu.shinyInput(   session = shiny::getDefaultReactiveDomain(),   inputId,   ... )"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Menu.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Menu — Menu","text":"... Props pass component. inputId ID component. session Object passed `session` argument Shiny server.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Menu.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Menu — Menu","text":"Object shiny.tag class suitable use UI Shiny app.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Menu.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Menu — Menu","text":"open bool  Default - true, component shown. anchorEl HTML element| func  Default - HTML element, function returns one. used set position menu. autoFocus bool  Default TRUE true (Default) focus role=\"menu\" focusable child found. Disabled children focusable. set prop false focus placed parent modal container. severe accessibility implications considered manage focus otherwise. children node  Default - Menu contents, normally MenuItems. classes object  Default - Override extend styles applied component.See CSS classes API details. disableAutoFocusItem bool  Default FALSE opening menu focus active item role=\"menu\" unless autoFocus also set false. using default means following WAI-ARIA authoring practices. Please considerate possible accessibility implications. MenuListProps object  Default  Props applied MenuList element.Deprecated－use slotProps.list prop instead. prop removed future major release. See Migrating deprecated APIs details. onClose func  Default - Callback fired component requests closed.Signature:function(event: object, reason: string) => voidevent event source callback.reason Can : \"escapeKeyDown\", \"backdropClick\", \"tabKeyDown\". PopoverClasses object  Default - classes prop applied Popover element. slotProps { backdrop?: func| object, list?: func| object, paper?: func| object, root?: func| object, transition?: func| object }  Default  props used slot inside. slots { backdrop?: elementType, list?: elementType, paper?: elementType, root?: elementType, transition?: elementType }  Default  components used slot inside. sx Array<func| object| bool>| func| object  Default - system prop allows defining system overrides well additional CSS styles.See sx page details. transitionDuration 'auto'| number| { appear?: number, enter?: number, exit?: number }  Default 'auto' length transition ms, 'auto' TransitionProps object  Default  Props applied transition element. default, element based Transition component.Deprecated－use slotProps.transition prop instead. prop removed future major release. See Migrating deprecated APIs details. variant 'menu'| 'selectedMenu'  Default 'selectedMenu' variant use. Use menu prevent selected items impacting initial focus.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/MenuItem.html","id":null,"dir":"Reference","previous_headings":"","what":"MenuItem — MenuItem","title":"MenuItem — MenuItem","text":"https://mui.com/material-ui/api/menu-item/","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/MenuItem.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"MenuItem — MenuItem","text":"","code":"MenuItem(...)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/MenuItem.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"MenuItem — MenuItem","text":"... Props pass component.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/MenuItem.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"MenuItem — MenuItem","text":"Object shiny.tag class suitable use UI Shiny app.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/MenuItem.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"MenuItem — MenuItem","text":"autoFocus bool  Default FALSE true, list item focused first mount. Focus also triggered value changes false true. children node  Default - content component. classes object  Default - Override extend styles applied component.See CSS classes API details. component elementType  Default - component used root node. Either string use HTML element component. dense bool  Default FALSE true, compact vertical padding designed keyboard mouse input used. prop defaults value inherited parent Menu component. disableGutters bool  Default FALSE true, left right padding removed. divider bool  Default FALSE true, 1px light border added bottom menu item. focusVisibleClassName string  Default - prop can help identify element keyboard focus. class name applied element gains focus keyboard interaction. polyfill CSS :focus-visible selector. rationale using feature explained . polyfill can used apply focus-visible class components needed. selected bool  Default FALSE true, component selected. sx Array<func| object| bool>| func| object  Default - system prop allows defining system overrides well additional CSS styles.See sx page details.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/MenuList.html","id":null,"dir":"Reference","previous_headings":"","what":"MenuList — MenuList","title":"MenuList — MenuList","text":"https://mui.com/material-ui/api/menu-list/","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/MenuList.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"MenuList — MenuList","text":"","code":"MenuList(...)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/MenuList.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"MenuList — MenuList","text":"... Props pass component.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/MenuList.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"MenuList — MenuList","text":"Object shiny.tag class suitable use UI Shiny app.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/MenuList.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"MenuList — MenuList","text":"autoFocus bool  Default FALSE true, focus role=\"menu\" container move tab order. autoFocusItem bool  Default FALSE true, focus first menuitem variant=\"menu\" selected item variant=\"selectedMenu\". children node  Default - MenuList contents, normally MenuItems. disabledItemsFocusable bool  Default FALSE true, allow focus disabled items. disableListWrap bool  Default FALSE true, menu items wrap focus. variant 'menu'| 'selectedMenu'  Default 'selectedMenu' variant use. Use menu prevent selected items impacting initial focus vertical alignment relative anchor element.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/MobileStepper.html","id":null,"dir":"Reference","previous_headings":"","what":"MobileStepper — MobileStepper","title":"MobileStepper — MobileStepper","text":"https://mui.com/material-ui/api/mobile-stepper/","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/MobileStepper.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"MobileStepper — MobileStepper","text":"","code":"MobileStepper(...)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/MobileStepper.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"MobileStepper — MobileStepper","text":"... Props pass component.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/MobileStepper.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"MobileStepper — MobileStepper","text":"Object shiny.tag class suitable use UI Shiny app.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/MobileStepper.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"MobileStepper — MobileStepper","text":"steps integer  Default - total steps. activeStep integer  Default 0 Set active step (zero based index). Defines dot highlighted variant 'dots'. backButton node  Default - back button element. instance, can Button IconButton. classes object  Default - Override extend styles applied component.See CSS classes API details. LinearProgressProps object  Default - Props applied LinearProgress element.Deprecated－Use slotProps.progress instead. prop removed future major release. See Migrating deprecated APIs details. nextButton node  Default - next button element. instance, can Button IconButton. position 'bottom'| 'static'| 'top'  Default 'bottom' Set positioning type. slotProps { dot?: func| object, dots?: func| object, progress?: func| object, root?: func| object }  Default  props used slot inside. slots { dot?: elementType, dots?: elementType, progress?: elementType, root?: elementType }  Default  components used slot inside. sx Array<func| object| bool>| func| object  Default - system prop allows defining system overrides well additional CSS styles.See sx page details. variant 'dots'| 'progress'| 'text'  Default 'dots' variant use.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Modal.html","id":null,"dir":"Reference","previous_headings":"","what":"Modal — Modal","title":"Modal — Modal","text":"https://mui.com/material-ui/api/modal/","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Modal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Modal — Modal","text":"","code":"Modal(...)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Modal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Modal — Modal","text":"... Props pass component.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Modal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Modal — Modal","text":"Object shiny.tag class suitable use UI Shiny app.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Modal.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Modal — Modal","text":"children element  Default - single child content element.needs able hold ref. open bool  Default - true, component shown. BackdropComponent elementType  Default styled(Backdrop,    name: 'MuiModal',   slot: 'Backdrop',   overridesResolver: (props, styles) =>      return styles.backdrop;   , )(   zIndex: -1, ) backdrop component. prop enables custom backdrop rendering.Deprecated－Use slots.backdrop instead. prop currently works, removed next major version. BackdropProps object  Default - Props applied Backdrop element.Deprecated－Use slotProps.backdrop instead. classes object  Default - Override extend styles applied component.See CSS classes API details. closeAfterTransition bool  Default FALSE set true Modal waits nested Transition completed closing. component elementType  Default - component used root node. Either string use HTML element component. components { Backdrop?: elementType, Root?: elementType }  Default  components used slot inside.Deprecated－Use slots prop instead. prop removed future major release. See Migrating deprecated APIs details. componentsProps { backdrop?: func| object, root?: func| object }  Default  extra props slot components. can override existing props add new ones.Deprecated－Use slotProps prop instead. prop removed future major release. See Migrating deprecated APIs details. container HTML element| func  Default - HTML element function returns one. container portal children appended .can also provide callback, called React layout effect. lets set container ref, also makes server-side rendering possible.default, uses body top-level document object, simply document.body time. disableAutoFocus bool  Default FALSE true, modal automatically shift focus opens, replace last focused element closes. also works correctly modal children disableAutoFocus prop.Generally never set true makes modal less accessible assistive technologies, like screen readers. disableEnforceFocus bool  Default FALSE true, modal prevent focus leaving modal open.Generally never set true makes modal less accessible assistive technologies, like screen readers. disableEscapeKeyDown bool  Default FALSE true, hitting escape fire onClose callback. disablePortal bool  Default FALSE children DOM hierarchy parent component. disableRestoreFocus bool  Default FALSE true, modal restore focus previously focused element modal hidden unmounted. disableScrollLock bool  Default FALSE Disable scroll lock behavior. hideBackdrop bool  Default FALSE true, backdrop rendered. keepMounted bool  Default FALSE Always keep children DOM. prop can useful SEO situation want maximize responsiveness Modal. onClose func  Default - Callback fired component requests closed. reason parameter can optionally used control response onClose.Signature:function(event: object, reason: string) => voidevent event source callback.reason Can : \"escapeKeyDown\", \"backdropClick\". onTransitionEnter func  Default - function called transition enters. onTransitionExited func  Default - function called transition exited. slotProps { backdrop?: func| object, root?: func| object }  Default  props used slot inside Modal. slots { backdrop?: elementType, root?: elementType }  Default  components used slot inside Modal. Either string use HTML element component. sx Array<func| object| bool>| func| object  Default - system prop allows defining system overrides well additional CSS styles.See sx page details.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/NativeSelect.html","id":null,"dir":"Reference","previous_headings":"","what":"NativeSelect — NativeSelect","title":"NativeSelect — NativeSelect","text":"https://mui.com/material-ui/api/native-select/","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/NativeSelect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"NativeSelect — NativeSelect","text":"","code":"NativeSelect(...)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/NativeSelect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"NativeSelect — NativeSelect","text":"... Props pass component.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/NativeSelect.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"NativeSelect — NativeSelect","text":"Object shiny.tag class suitable use UI Shiny app.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/NativeSelect.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"NativeSelect — NativeSelect","text":"children node  Default - option elements populate select . Can  elements. classes object  Default  Override extend styles applied component.See CSS classes API details. IconComponent elementType  Default ArrowDropDownIcon icon displays arrow. input element  Default  Input element; material-ui specific Input. inputProps object  Default - Attributes applied select element. onChange func  Default - Callback fired menu item selected.Signature:function(event: React.ChangeEvent) => voidevent event source callback. can pull new value accessing event.target.value (string). sx Array<func| object| bool>| func| object  Default - system prop allows defining system overrides well additional CSS styles.See sx page details. value  Default - input value. DOM API casts string. variant 'filled'| 'outlined'| 'standard'  Default - variant use.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/NoSsr.html","id":null,"dir":"Reference","previous_headings":"","what":"NoSsr — NoSsr","title":"NoSsr — NoSsr","text":"https://mui.com/material-ui/api/-ssr/","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/NoSsr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"NoSsr — NoSsr","text":"","code":"NoSsr(...)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/NoSsr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"NoSsr — NoSsr","text":"... Props pass component.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/NoSsr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"NoSsr — NoSsr","text":"Object shiny.tag class suitable use UI Shiny app.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/NoSsr.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"NoSsr — NoSsr","text":"children node  Default - can wrap node. defer bool  Default FALSE true, component prevent server-side rendering. also defer rendering children different screen frame. fallback node  Default null fallback content display.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/OutlinedInput.html","id":null,"dir":"Reference","previous_headings":"","what":"OutlinedInput — OutlinedInput","title":"OutlinedInput — OutlinedInput","text":"https://mui.com/material-ui/api/outlined-input/","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/OutlinedInput.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"OutlinedInput — OutlinedInput","text":"","code":"OutlinedInput(...)  OutlinedInput.shinyInput(inputId, ..., value = defaultValue)  updateOutlinedInput.shinyInput(   session = shiny::getDefaultReactiveDomain(),   inputId,   ... )"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/OutlinedInput.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"OutlinedInput — OutlinedInput","text":"... Props pass component. inputId ID component. value Starting value. session Object passed `session` argument Shiny server.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/OutlinedInput.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"OutlinedInput — OutlinedInput","text":"Object shiny.tag class suitable use UI Shiny app.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/OutlinedInput.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"OutlinedInput — OutlinedInput","text":"autoComplete string  Default - prop helps users fill forms faster, especially mobile devices. name can confusing, like autofill. can learn following specification. autoFocus bool  Default - true, input element focused first mount. classes object  Default - Override extend styles applied component.See CSS classes API details. color 'primary'| 'secondary'| string  Default - color component. supports default custom theme colors, can added shown palette customization guide. prop defaults value ('primary') inherited parent FormControl component. components { Input?: elementType, Root?: elementType }  Default  components used slot inside.Deprecated－use slots prop instead. prop removed future major release. See Migrating deprecated APIs details. defaultValue  Default - default value. Use component controlled. disabled bool  Default - true, component disabled. prop defaults value (false) inherited parent FormControl component. endAdornment node  Default - End InputAdornment component. error bool  Default - true, input indicate error. prop defaults value (false) inherited parent FormControl component. fullWidth bool  Default FALSE true, input take full width container. id string  Default - id input element. inputComponent elementType  Default 'input' component used input element. Either string use HTML element component. inputProps object  Default  Attributes applied input element. inputRef ref  Default - Pass ref input element. label node  Default - label input. used layout. actual labelling handled InputLabel. margin 'dense'| 'none'  Default - dense, adjust vertical spacing. normally obtained via context FormControl. prop defaults value ('none') inherited parent FormControl component. maxRows number| string  Default - Maximum number rows display multiline option set true. minRows number| string  Default - Minimum number rows display multiline option set true. multiline bool  Default FALSE true, TextareaAutosize element rendered. name string  Default - Name attribute input element. notched bool  Default - true, outline notched accommodate label. onChange func  Default - Callback fired value changed.Signature:function(event: React.ChangeEvent) => voidevent event source callback. can pull new value accessing event.target.value (string). placeholder string  Default - short hint displayed input user enters value. readOnly bool  Default - prevents user changing value field (interacting field). required bool  Default - true, input element required. prop defaults value (false) inherited parent FormControl component. rows number| string  Default - Number rows display multiline option set true. slots { input?: elementType, root?: elementType }  Default  components used slot inside.prop alias components prop, deprecated future. startAdornment node  Default - Start InputAdornment component. sx Array<func| object| bool>| func| object  Default - system prop allows defining system overrides well additional CSS styles.See sx page details. type string  Default 'text' Type input element. valid HTML5 input type. value  Default - value input element, required controlled component.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Pagination.html","id":null,"dir":"Reference","previous_headings":"","what":"Pagination — Pagination","title":"Pagination — Pagination","text":"https://mui.com/material-ui/api/pagination/","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Pagination.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pagination — Pagination","text":"","code":"Pagination(...)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Pagination.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pagination — Pagination","text":"... Props pass component.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Pagination.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pagination — Pagination","text":"Object shiny.tag class suitable use UI Shiny app.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Pagination.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Pagination — Pagination","text":"boundaryCount integer  Default 1 Number always visible pages beginning end. classes object  Default - Override extend styles applied component.See CSS classes API details. color 'primary'| 'secondary'| 'standard'| string  Default 'standard' active color. supports default custom theme colors, can added shown palette customization guide. count integer  Default 1 total number pages. defaultPage integer  Default 1 page selected default component uncontrolled. disabled bool  Default FALSE true, component disabled. getItemAriaLabel func  Default - Accepts function returns string value provides user-friendly name current page. important screen reader users.localization purposes, can use provided translations.Signature:function(type: string, page: number | null, selected: boolean) => stringtype link button type format ('page' | 'first' | 'last' | 'next' | 'previous' | 'start-ellipsis' | 'end-ellipsis'). Defaults 'page'.page page number format.selected true, current page selected. hideNextButton bool  Default FALSE true, hide next-page button. hidePrevButton bool  Default FALSE true, hide previous-page button. onChange func  Default - Callback fired page changed.Signature:function(event: React.ChangeEvent, page: number) => voidevent event source callback.page page selected. page integer  Default - current page. Unlike TablePagination, starts numbering 0, pagination starts 1. renderItem func  Default (item) => <PaginationItem ...item /> Render item.Signature:function(params: PaginationRenderItemParams) => ReactNodeparams props spread PaginationItem. shape 'circular'| 'rounded'  Default 'circular' shape pagination items. showFirstButton bool  Default FALSE true, show first-page button. showLastButton bool  Default FALSE true, show last-page button. siblingCount integer  Default 1 Number always visible pages current page. size 'small'| 'medium'| 'large'| string  Default 'medium' size component. sx Array<func| object| bool>| func| object  Default - system prop allows defining system overrides well additional CSS styles.See sx page details. variant 'outlined'| 'text'| string  Default 'text' variant use.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/PaginationItem.html","id":null,"dir":"Reference","previous_headings":"","what":"PaginationItem — PaginationItem","title":"PaginationItem — PaginationItem","text":"https://mui.com/material-ui/api/pagination-item/","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/PaginationItem.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"PaginationItem — PaginationItem","text":"","code":"PaginationItem(...)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/PaginationItem.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"PaginationItem — PaginationItem","text":"... Props pass component.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/PaginationItem.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"PaginationItem — PaginationItem","text":"Object shiny.tag class suitable use UI Shiny app.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/PaginationItem.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"PaginationItem — PaginationItem","text":"classes object  Default - Override extend styles applied component.See CSS classes API details. color 'primary'| 'secondary'| 'standard'| string  Default 'standard' active color. supports default custom theme colors, can added shown palette customization guide. component elementType  Default - component used root node. Either string use HTML element component. components { first?: elementType, last?: elementType, next?: elementType, previous?: elementType }  Default  components used slot inside.prop alias slots prop. recommended use slots prop instead.Deprecated－use slots prop instead. prop removed future major release. See Migrating deprecated APIs details. disabled bool  Default FALSE true, component disabled. page node  Default - current page number. selected bool  Default FALSE true pagination item selected. shape 'circular'| 'rounded'  Default 'circular' shape pagination item. size 'small'| 'medium'| 'large'| string  Default 'medium' size component. slotProps { first?: func| object, last?: func| object, next?: func| object, previous?: func| object }  Default  props used slot inside. slots { first?: elementType, last?: elementType, next?: elementType, previous?: elementType }  Default  components used slot inside. sx Array<func| object| bool>| func| object  Default - system prop allows defining system overrides well additional CSS styles.See sx page details. type 'end-ellipsis'| 'first'| 'last'| 'next'| 'page'| 'previous'| 'start-ellipsis'  Default 'page' type pagination item. variant 'outlined'| 'text'| string  Default 'text' variant use.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Paper.html","id":null,"dir":"Reference","previous_headings":"","what":"Paper — Paper","title":"Paper — Paper","text":"https://mui.com/material-ui/api/paper/","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Paper.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Paper — Paper","text":"","code":"Paper(...)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Paper.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Paper — Paper","text":"... Props pass component.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Paper.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Paper — Paper","text":"Object shiny.tag class suitable use UI Shiny app.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Paper.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Paper — Paper","text":"children node  Default - content component. classes object  Default - Override extend styles applied component.See CSS classes API details. component elementType  Default - component used root node. Either string use HTML element component. elevation integer  Default 1 Shadow depth, corresponds dp spec. accepts values 0 24 inclusive. square bool  Default FALSE true, rounded corners disabled. sx Array<func| object| bool>| func| object  Default - system prop allows defining system overrides well additional CSS styles.See sx page details. variant 'elevation'| 'outlined'| string  Default 'elevation' variant use.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/PigmentContainer.html","id":null,"dir":"Reference","previous_headings":"","what":"PigmentContainer — PigmentContainer","title":"PigmentContainer — PigmentContainer","text":"https://mui.com/material-ui/api/pigment-container/","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/PigmentContainer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"PigmentContainer — PigmentContainer","text":"","code":"PigmentContainer(...)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/PigmentContainer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"PigmentContainer — PigmentContainer","text":"... Props pass component.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/PigmentContainer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"PigmentContainer — PigmentContainer","text":"Object shiny.tag class suitable use UI Shiny app.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/PigmentContainer.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"PigmentContainer — PigmentContainer","text":"classes object  Default - Override extend styles applied component.See CSS classes API details. disableGutters bool  Default FALSE true, left right padding removed. fixed bool  Default FALSE Set max-width match min-width current breakpoint. useful prefer design fixed set sizes instead trying accommodate fully fluid viewport. fluid default. maxWidth 'lg'| 'md'| 'sm'| 'xl'| 'xs'| false  Default 'lg' Determine max-width container. container width grows size screen. Set false disable maxWidth. sx Array<func| object| bool>| func| object  Default - system prop allows defining system overrides well additional CSS styles.See sx page details.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/PigmentGrid.html","id":null,"dir":"Reference","previous_headings":"","what":"PigmentGrid — PigmentGrid","title":"PigmentGrid — PigmentGrid","text":"https://mui.com/material-ui/api/pigment-grid/","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/PigmentGrid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"PigmentGrid — PigmentGrid","text":"","code":"PigmentGrid(...)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/PigmentGrid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"PigmentGrid — PigmentGrid","text":"... Props pass component.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/PigmentGrid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"PigmentGrid — PigmentGrid","text":"Object shiny.tag class suitable use UI Shiny app.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/PigmentGrid.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"PigmentGrid — PigmentGrid","text":"children node  Default - content component. columns Array<number>| number| object  Default 12 number columns. columnSpacing Array<number| string>| number| object| string  Default - Defines horizontal space type item components. overrides value spacing prop. container bool  Default FALSE true, component flex container behavior. wrapping items container. direction 'column'| 'column-reverse'| 'row'| 'row-reverse'| Array<'column'| 'column-reverse'| 'row'| 'row-reverse'>| object  Default 'row' Defines flex-direction style property. applied screen sizes. offset Array<number>| number| object  Default - Defines offset grid. rowSpacing Array<number| string>| number| object| string  Default - Defines vertical space type item components. overrides value spacing prop. size Array<number>| number| object  Default - Defines column size grid. spacing Array<number| string>| number| object| string  Default 0 Defines space type item components. can used type container component. wrap 'nowrap'| 'wrap-reverse'| 'wrap'  Default 'wrap' Defines flex-wrap style property. applied screen sizes.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/PigmentStack.html","id":null,"dir":"Reference","previous_headings":"","what":"PigmentStack — PigmentStack","title":"PigmentStack — PigmentStack","text":"https://mui.com/material-ui/api/pigment-stack/","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/PigmentStack.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"PigmentStack — PigmentStack","text":"","code":"PigmentStack(...)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/PigmentStack.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"PigmentStack — PigmentStack","text":"... Props pass component.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/PigmentStack.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"PigmentStack — PigmentStack","text":"Object shiny.tag class suitable use UI Shiny app.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/PigmentStack.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"PigmentStack — PigmentStack","text":"children node  Default - content component. direction 'column-reverse'| 'column'| 'row-reverse'| 'row'| Array<'column-reverse'| 'column'| 'row-reverse'| 'row'>| { lg?: 'column-reverse'| 'column'| 'row-reverse'| 'row', md?: 'column-reverse'| 'column'| 'row-reverse'| 'row', sm?: 'column-reverse'| 'column'| 'row-reverse'| 'row', xl?: 'column-reverse'| 'column'| 'row-reverse'| 'row', xs?: 'column-reverse'| 'column'| 'row-reverse'| 'row' }  Default 'column' Defines flex-direction style property. applied screen sizes. divider node  Default - Add element child. spacing Array<number| string>| number| { lg?: number| string, md?: number| string, sm?: number| string, xl?: number| string, xs?: number| string }| string  Default 0 Defines space immediate children. sx Array<func| object| bool>| func| object  Default - system prop, allows defining system overrides well additional CSS styles.See sx page details.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Popover.html","id":null,"dir":"Reference","previous_headings":"","what":"Popover — Popover","title":"Popover — Popover","text":"https://mui.com/material-ui/api/popover/","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Popover.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Popover — Popover","text":"","code":"Popover(...)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Popover.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Popover — Popover","text":"... Props pass component.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Popover.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Popover — Popover","text":"Object shiny.tag class suitable use UI Shiny app.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Popover.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Popover — Popover","text":"open bool  Default - true, component shown. action ref  Default - ref imperative actions. currently supports updatePosition() action. anchorEl HTML element| func  Default - HTML element, PopoverVirtualElement, function returns either. used set position popover. anchorOrigin { horizontal: 'center'| 'left'| 'right'| number, vertical: 'bottom'| 'center'| 'top'| number }  Default    vertical: 'top',   horizontal: 'left',  point anchor popover's anchorEl attach . used anchorReference 'anchorPosition'.Options: vertical: top, center, bottom; horizontal: left, center, right. anchorPosition { left: number, top: number }  Default - position may used set position popover. coordinates relative application's client area. anchorReference 'anchorEl'| 'anchorPosition'| 'none'  Default 'anchorEl' determines anchor prop refer setting position popover. BackdropComponent elementType  Default styled(Backdrop,    name: 'MuiModal',   slot: 'Backdrop',   overridesResolver: (props, styles) =>      return styles.backdrop;   , )(   zIndex: -1, ) backdrop component. prop enables custom backdrop rendering.Deprecated－Use slots.backdrop instead. prop removed future major release. See Migrating deprecated APIs details. BackdropProps object  Default - Props applied Backdrop element.Deprecated－Use slotProps.backdrop instead. prop removed future major release. See Migrating deprecated APIs details. children node  Default - content component. classes object  Default - Override extend styles applied component.See CSS classes API details. container HTML element| func  Default - HTML element, component instance, function returns either. container passed Modal component.default, uses body anchorEl's top-level document object, simply document.body time. disableScrollLock bool  Default FALSE Disable scroll lock behavior. elevation integer  Default 8 elevation popover. marginThreshold number  Default 16 Specifies close edge window popover can appear. null, popover constrained window. onClose func  Default - Callback fired component requests closed. reason parameter can optionally used control response onClose. PaperProps { component?: element type }  Default  Props applied Paper element.prop alias slotProps.paper overriden used.Deprecated－Use slotProps.paper instead. slotProps { backdrop?: func| object, paper?: func| object, root?: func| object, transition?: func| object }  Default  props used slot inside. slots { backdrop?: elementType, paper?: elementType, root?: elementType, transition?: elementType }  Default  components used slot inside. sx Array<func| object| bool>| func| object  Default - system prop allows defining system overrides well additional CSS styles.See sx page details. transformOrigin { horizontal: 'center'| 'left'| 'right'| number, vertical: 'bottom'| 'center'| 'top'| number }  Default    vertical: 'top',   horizontal: 'left',  point popover attach anchor's origin.Options: vertical: top, center, bottom, x(px); horizontal: left, center, right, x(px). TransitionComponent elementType  Default Grow component used transition. Follow guide learn requirements component.Deprecated－use slots.transition prop instead. prop removed future major release. See Migrating deprecated APIs details. transitionDuration 'auto'| number| { appear?: number, enter?: number, exit?: number }  Default 'auto' Set 'auto' automatically calculate transition time based height. TransitionProps object  Default  Props applied transition element. default, element based Transition component.Deprecated－use slotProps.transition prop instead. prop removed future major release. See Migrating deprecated APIs details.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Popper.html","id":null,"dir":"Reference","previous_headings":"","what":"Popper — Popper","title":"Popper — Popper","text":"https://mui.com/material-ui/api/popper/","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Popper.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Popper — Popper","text":"","code":"Popper(...)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Popper.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Popper — Popper","text":"... Props pass component.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Popper.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Popper — Popper","text":"Object shiny.tag class suitable use UI Shiny app.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Popper.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Popper — Popper","text":"open bool  Default - true, component shown. anchorEl HTML element| object| func  Default - HTML element, virtualElement, function returns either. used set position popper. return value passed reference object Popper instance. children node| func  Default - Popper render function node. component elementType  Default - component used root node. Either string use HTML element component. components { Root?: elementType }  Default  components used slot inside Popper. Either string use HTML element component.Deprecated－use slots prop instead. prop removed future major release. migrate. componentsProps { root?: func| object }  Default  props used slot inside Popper.Deprecated－use slotProps prop instead. prop removed future major release. migrate. container HTML element| func  Default - HTML element function returns one. container portal children appended .can also provide callback, called React layout effect. lets set container ref, also makes server-side rendering possible.default, uses body top-level document object, simply document.body time. disablePortal bool  Default FALSE children DOM hierarchy parent component. keepMounted bool  Default FALSE Always keep children DOM. prop can useful SEO situation want maximize responsiveness Popper. modifiers Array<{ data?: object, effect?: func, enabled?: bool, fn?: func, name?: , options?: object, phase?: 'afterMain'| 'afterRead'| 'afterWrite'| 'beforeMain'| 'beforeRead'| 'beforeWrite'| 'main'| 'read'| 'write', requires?: Array<string>, requiresIfExists?: Array<string> }>  Default - Popper.js based \"plugin-like\" architecture, features fully encapsulated \"modifiers\".modifier function called time Popper.js needs compute position popper. reason, modifiers performant avoid bottlenecks. learn create modifier, read modifiers documentation. placement 'auto-end'| 'auto-start'| 'auto'| 'bottom-end'| 'bottom-start'| 'bottom'| 'left-end'| 'left-start'| 'left'| 'right-end'| 'right-start'| 'right'| 'top-end'| 'top-start'| 'top'  Default 'bottom' Popper placement. popperOptions { modifiers?: array, onFirstUpdate?: func, placement?: 'auto-end'| 'auto-start'| 'auto'| 'bottom-end'| 'bottom-start'| 'bottom'| 'left-end'| 'left-start'| 'left'| 'right-end'| 'right-start'| 'right'| 'top-end'| 'top-start'| 'top', strategy?: 'absolute'| 'fixed' }  Default  Options provided Popper.js instance. popperRef ref  Default - ref points used popper instance. slotProps { root?: func| object }  Default  props used slot inside Popper. slots { root?: elementType }  Default  components used slot inside Popper. Either string use HTML element component. sx Array<func| object| bool>| func| object  Default - system prop allows defining system overrides well additional CSS styles.See sx page details. transition bool  Default FALSE Help supporting react-transition-group/Transition component.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Portal.html","id":null,"dir":"Reference","previous_headings":"","what":"Portal — Portal","title":"Portal — Portal","text":"https://mui.com/material-ui/api/portal/","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Portal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Portal — Portal","text":"","code":"Portal(...)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Portal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Portal — Portal","text":"... Props pass component.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Portal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Portal — Portal","text":"Object shiny.tag class suitable use UI Shiny app.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Portal.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Portal — Portal","text":"children node  Default - children render container. container HTML element| func  Default - HTML element function returns one. container portal children appended .can also provide callback, called React layout effect. lets set container ref, also makes server-side rendering possible.default, uses body top-level document object, simply document.body time. disablePortal bool  Default FALSE children DOM hierarchy parent component.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Radio.html","id":null,"dir":"Reference","previous_headings":"","what":"Radio — Radio","title":"Radio — Radio","text":"https://mui.com/material-ui/api/radio/","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Radio.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Radio — Radio","text":"","code":"Radio(...)  Radio.shinyInput(inputId, ..., value = defaultValue)  updateRadio.shinyInput(   session = shiny::getDefaultReactiveDomain(),   inputId,   ... )"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Radio.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Radio — Radio","text":"... Props pass component. inputId ID component. value Starting value. session Object passed `session` argument Shiny server.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Radio.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Radio — Radio","text":"Object shiny.tag class suitable use UI Shiny app.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Radio.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Radio — Radio","text":"checked bool  Default - true, component checked. checkedIcon node  Default  icon display component checked. classes object  Default - Override extend styles applied component.See CSS classes API details. color 'default'| 'primary'| 'secondary'| 'error'| 'info'| 'success'| 'warning'| string  Default 'primary' color component. supports default custom theme colors, can added shown palette customization guide. disabled bool  Default - true, component disabled. disableRipple bool  Default FALSE true, ripple effect disabled. icon node  Default  icon display component unchecked. id string  Default - id input element. inputProps object  Default - Attributes applied input element.Deprecated－Use slotProps.input instead. prop removed future major release. See Migrating deprecated APIs details. inputRef ref  Default - Pass ref input element.Deprecated－Use slotProps.input.ref instead. prop removed future major release. See Migrating deprecated APIs details. name string  Default - Name attribute input element. onChange func  Default - Callback fired state changed.Signature:function(event: React.ChangeEvent) => voidevent event source callback. can pull new value accessing event.target.value (string). can pull new checked state accessing event.target.checked (boolean). required bool  Default FALSE true, input element required. size 'medium'| 'small'| string  Default 'medium' size component. small equivalent dense radio styling. slotProps { input?: func| object, root?: func| object }  Default  props used slot inside. slots { input?: elementType, root?: elementType }  Default  components used slot inside. sx Array<func| object| bool>| func| object  Default - system prop allows defining system overrides well additional CSS styles.See sx page details. value  Default - value component. DOM API casts string.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/RadioGroup.html","id":null,"dir":"Reference","previous_headings":"","what":"RadioGroup — RadioGroup","title":"RadioGroup — RadioGroup","text":"https://mui.com/material-ui/api/radio-group/","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/RadioGroup.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"RadioGroup — RadioGroup","text":"","code":"RadioGroup(...)  RadioGroup.shinyInput(inputId, ..., value = defaultValue)  updateRadioGroup.shinyInput(   session = shiny::getDefaultReactiveDomain(),   inputId,   ... )"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/RadioGroup.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"RadioGroup — RadioGroup","text":"... Props pass component. inputId ID component. value Starting value. session Object passed `session` argument Shiny server.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/RadioGroup.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"RadioGroup — RadioGroup","text":"Object shiny.tag class suitable use UI Shiny app.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/RadioGroup.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"RadioGroup — RadioGroup","text":"children node  Default NA content component. defaultValue  Default NA default value. Use component controlled. name string  Default NA name used reference value control. provide prop, falls back randomly generated name. onChange func  Default NA Callback fired radio button selected.Signature:function(event: React.ChangeEvent, value: string) => voidevent event source callback.value value selected radio button. can pull new value accessing event.target.value (string). value  Default NA Value selected radio button. DOM API casts string.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Rating.html","id":null,"dir":"Reference","previous_headings":"","what":"Rating — Rating","title":"Rating — Rating","text":"https://mui.com/material-ui/api/rating/","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Rating.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rating — Rating","text":"","code":"Rating(...)  Rating.shinyInput(inputId, ..., value = defaultValue)  updateRating.shinyInput(   session = shiny::getDefaultReactiveDomain(),   inputId,   ... )"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Rating.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rating — Rating","text":"... Props pass component. inputId ID component. value Starting value. session Object passed `session` argument Shiny server.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Rating.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rating — Rating","text":"Object shiny.tag class suitable use UI Shiny app.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Rating.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Rating — Rating","text":"classes object  Default - Override extend styles applied component.See CSS classes API details. component elementType  Default - component used root node. Either string use HTML element component. defaultValue number  Default null default value. Use component controlled. disabled bool  Default FALSE true, component disabled. emptyIcon node  Default  icon display empty. emptyLabelText node  Default 'Empty' label read rating input empty. getLabelText func  Default function defaultLabelText(value)    return $value || '0' Star$value !== 1 ? 's' : '';  Accepts function returns string value provides user-friendly name current value rating. important screen reader users.localization purposes, can use provided translations.Signature:function(value: number) => stringvalue rating label's value format. highlightSelectedOnly bool  Default FALSE true, selected icon highlighted. icon node  Default  icon display. IconContainerComponent elementType  Default function IconContainer(props)    const  value, ... = props;   return <span .../>;  component containing icon.Deprecated－Use slotProps.icon.component instead. prop removed future major release. See Migrating deprecated APIs details. max number  Default 5 Maximum rating. name string  Default - name attribute radio input elements. input name unique within page. unique within form insufficient since name used generate IDs. onChange func  Default - Callback fired value changes.Signature:function(event: React.SyntheticEvent, value: number | null) => voidevent event source callback.value new value. onChangeActive func  Default - Callback function fired hover state changes.Signature:function(event: React.SyntheticEvent, value: number) => voidevent event source callback.value new value. precision number  Default 1 minimum increment value change allowed. readOnly bool  Default FALSE Removes hover effects pointer events. size 'small'| 'medium'| 'large'| string  Default 'medium' size component. slotProps { decimal?: func| object, icon?: func| object, label?: func| object, root?: func| object }  Default  props used slot inside. slots { decimal?: elementType, icon?: elementType, label?: elementType, root?: elementType }  Default  components used slot inside. sx Array<func| object| bool>| func| object  Default - system prop allows defining system overrides well additional CSS styles.See sx page details. value number  Default - rating value.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. shiny.react JS, reactOutput, renderReact, setInput, triggerEvent","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/ScopedCssBaseline.html","id":null,"dir":"Reference","previous_headings":"","what":"ScopedCssBaseline — ScopedCssBaseline","title":"ScopedCssBaseline — ScopedCssBaseline","text":"https://mui.com/material-ui/api/scoped-css-baseline/","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/ScopedCssBaseline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ScopedCssBaseline — ScopedCssBaseline","text":"","code":"ScopedCssBaseline(...)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/ScopedCssBaseline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ScopedCssBaseline — ScopedCssBaseline","text":"... Props pass component.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/ScopedCssBaseline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ScopedCssBaseline — ScopedCssBaseline","text":"Object shiny.tag class suitable use UI Shiny app.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/ScopedCssBaseline.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"ScopedCssBaseline — ScopedCssBaseline","text":"children node  Default NA content component. classes object  Default NA Override extend styles applied component.See CSS classes API details. component elementType  Default NA component used root node. Either string use HTML element component. enableColorScheme bool  Default NA Enable color-scheme CSS property use theme.palette.mode. details, check https://developer.mozilla.org/en-US/docs/Web/CSS/color-scheme browser support, check https://caniuse.com/?search=color-scheme sx Array<func| object| bool>| func| object  Default NA system prop allows defining system overrides well additional CSS styles.See sx page details.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Select.html","id":null,"dir":"Reference","previous_headings":"","what":"Select — Select","title":"Select — Select","text":"https://mui.com/material-ui/api/select/","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Select.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select — Select","text":"","code":"Select(...)  Select.shinyInput(inputId, ..., value = defaultValue)  updateSelect.shinyInput(   session = shiny::getDefaultReactiveDomain(),   inputId,   ... )"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Select.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select — Select","text":"... Props pass component. inputId ID component. value Starting value. session Object passed `session` argument Shiny server.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Select.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Select — Select","text":"Object shiny.tag class suitable use UI Shiny app.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Select.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Select — Select","text":"autoWidth bool  Default FALSE true, width popover automatically set according items inside menu, otherwise least width select input. children node  Default - option elements populate select . Can MenuItem native false option native true.⚠️MenuItem elements must direct descendants native false. classes object  Default  Override extend styles applied component.See CSS classes API details. defaultOpen bool  Default FALSE true, component initially open. Use component open state controlled (.e. open prop defined). can use native prop false (default). defaultValue  Default - default value. Use component controlled. displayEmpty bool  Default FALSE true, value displayed even items selected.order display meaningful value, function can passed renderValue prop returns value displayed items selected.⚠️ using prop, make sure label overlap empty displayed value. label either hidden forced shrunk state. IconComponent elementType  Default ArrowDropDownIcon icon displays arrow. id string  Default - id wrapper element select element native. input element  Default - Input element; material-ui specific Input. inputProps object  Default - Attributes applied input element. native true, attributes applied select element. label node  Default - See OutlinedInput#label labelId string  Default - ID element acts additional label. Select labelled additional label selected value. MenuProps object  Default - Props applied Menu element. multiple bool  Default FALSE true, value must array menu support multiple selections. native bool  Default FALSE true, component uses native select element. onChange func  Default - Callback fired menu item selected.Signature:function(event: SelectChangeEvent, child?: object) => voidevent event source callback. can pull new value accessing event.target.value (). Warning: generic event, change event, unless change event caused browser autofill.child react element selected native false (default). onClose func  Default - Callback fired component requests closed. Use either controlled (see open prop), uncontrolled mode (detect Select collapses).Signature:function(event: object) => voidevent event source callback. onOpen func  Default - Callback fired component requests opened. Use either controlled (see open prop), uncontrolled mode (detect Select expands).Signature:function(event: object) => voidevent event source callback. open bool  Default - true, component shown. can use native prop false (default). renderValue func  Default - Render selected value. can use native prop false (default).Signature:function(value: ) => ReactNodevalue value provided component. SelectDisplayProps object  Default - Props applied clickable div element. sx Array<func| object| bool>| func| object  Default - system prop allows defining system overrides well additional CSS styles.See sx page details. value ''|  Default - input value. Providing empty string select options. Set empty string ” want available options selected.value object must reference equality option order selected. value object, string representation must match string representation option order selected. variant 'filled'| 'outlined'| 'standard'  Default 'outlined' variant use.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/shinyInput.html","id":null,"dir":"Reference","previous_headings":"","what":"Documentation template for components with `.shinyInput` wrappers — shinyInput","title":"Documentation template for components with `.shinyInput` wrappers — shinyInput","text":"Documentation template components `.shinyInput` wrappers","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/shinyInput.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Documentation template for components with `.shinyInput` wrappers — shinyInput","text":"inputId ID component. value Starting value. session Object passed `session` argument Shiny server. ... Props pass component. allowed props listed Details section.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/shinyInput.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Documentation template for components with `.shinyInput` wrappers — shinyInput","text":"Object `shiny.tag` class suitable use UI Shiny app. update functions return nothing (called side effects).","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/shinyMaterialUIExample.html","id":null,"dir":"Reference","previous_headings":"","what":"Run shinyMaterialUI example — shinyMaterialUIExample","title":"Run shinyMaterialUI example — shinyMaterialUIExample","text":"Launch Shiny example app list available examples. Use `shinyMaterialUI::runExample(\"showcase\")` run showcase app components.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/shinyMaterialUIExample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run shinyMaterialUI example — shinyMaterialUIExample","text":"","code":"shinyMaterialUIExample(example = NULL, ...)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/shinyMaterialUIExample.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run shinyMaterialUI example — shinyMaterialUIExample","text":"example name example run, `NULL` retrieve list examples. ... Additional arguments pass `shiny::runApp()`.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/shinyMaterialUIExample.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run shinyMaterialUI example — shinyMaterialUIExample","text":"function normally return; interrupt R stop application (usually pressing Ctrl+C Esc).","code":""},{"path":[]},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/shinyMaterialUIPage.html","id":null,"dir":"Reference","previous_headings":"","what":"HTML body without Bootstrap and margins — shinyMaterialUIPage","title":"HTML body without Bootstrap and margins — shinyMaterialUIPage","text":"Creates Material UI page without using CssBaseline, can use regular Shiny inputs shiny.router.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/shinyMaterialUIPage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"HTML body without Bootstrap and margins — shinyMaterialUIPage","text":"","code":"shinyMaterialUIPage(..., suppressBootstrap = TRUE, debug_react = FALSE)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/shinyMaterialUIPage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"HTML body without Bootstrap and margins — shinyMaterialUIPage","text":"... contents document body. suppressBootstrap Whether suppress Bootstrap. debug_react Whether enable react debug mode. Default FALSE.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/shinyMaterialUIPage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"HTML body without Bootstrap and margins — shinyMaterialUIPage","text":"html object 'margin:0' can passed UI Shiny app.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/shinyMaterialUIPage.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"HTML body without Bootstrap and margins — shinyMaterialUIPage","text":"Bootstrap library suppressed default, work well Material UI general. default Material UI styles apply, .e. margin removed browser font size. https://mui.com/material-ui/react-css-baseline/","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Skeleton.html","id":null,"dir":"Reference","previous_headings":"","what":"Skeleton — Skeleton","title":"Skeleton — Skeleton","text":"https://mui.com/material-ui/api/skeleton/","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Skeleton.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Skeleton — Skeleton","text":"","code":"Skeleton(...)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Skeleton.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Skeleton — Skeleton","text":"... Props pass component.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Skeleton.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Skeleton — Skeleton","text":"Object shiny.tag class suitable use UI Shiny app.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Skeleton.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Skeleton — Skeleton","text":"animation 'pulse'| 'wave'| false  Default 'pulse' animation. false animation effect disabled. children node  Default - Optional children infer width height . classes object  Default - Override extend styles applied component.See CSS classes API details. component elementType  Default - component used root node. Either string use HTML element component. height number| string  Default - Height skeleton. Useful want adapt skeleton text element instance card. sx Array<func| object| bool>| func| object  Default - system prop allows defining system overrides well additional CSS styles.See sx page details. variant 'circular'| 'rectangular'| 'rounded'| 'text'| string  Default 'text' type content rendered. width number| string  Default - Width skeleton. Useful skeleton inside inline element width .","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Slide.html","id":null,"dir":"Reference","previous_headings":"","what":"Slide — Slide","title":"Slide — Slide","text":"https://mui.com/material-ui/api/slide/","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Slide.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Slide — Slide","text":"","code":"Slide(...)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Slide.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Slide — Slide","text":"... Props pass component.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Slide.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Slide — Slide","text":"Object shiny.tag class suitable use UI Shiny app.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Slide.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Slide — Slide","text":"children element  Default - single child content element.needs able hold ref. addEndListener func  Default - Add custom transition end trigger. Called transitioning DOM node done callback. Allows fine grained transition end logic. Note: Timeouts still used fallback provided. appear bool  Default TRUE Perform enter transition first mounts also true. Set false disable behavior. container HTML element| func  Default - HTML element, function returns one. used set container Slide transitioning . direction ''| 'left'| 'right'| ''  Default '' Direction child node enter . easing { enter?: string, exit?: string }| string  Default    enter: theme.transitions.easing.easeOut,   exit: theme.transitions.easing.sharp,  transition timing function. may specify single easing object containing enter exit values. bool  Default - true, component transition . timeout number| { appear?: number, enter?: number, exit?: number }  Default    enter: theme.transitions.duration.enteringScreen,   exit: theme.transitions.duration.leavingScreen,  duration transition, milliseconds. may specify single timeout transitions, individually object.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Slider.html","id":null,"dir":"Reference","previous_headings":"","what":"Slider — Slider","title":"Slider — Slider","text":"https://mui.com/material-ui/api/slider/","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Slider.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Slider — Slider","text":"","code":"Slider(...)  Slider.shinyInput(inputId, ..., value = defaultValue)  updateSlider.shinyInput(   session = shiny::getDefaultReactiveDomain(),   inputId,   ... )"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Slider.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Slider — Slider","text":"... Props pass component. inputId ID component. value Starting value. session Object passed `session` argument Shiny server.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Slider.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Slider — Slider","text":"Object shiny.tag class suitable use UI Shiny app.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Slider.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Slider — Slider","text":"aria-label string  Default - label slider. aria-labelledby string  Default - id element containing label slider. aria-valuetext string  Default - string value provides user-friendly name current value slider. classes object  Default - Override extend styles applied component.See CSS classes API details. color 'primary'| 'secondary'| 'error'| 'info'| 'success'| 'warning'| string  Default 'primary' color component. supports default custom theme colors, can added shown palette customization guide. components { Input?: elementType, Mark?: elementType, MarkLabel?: elementType, Rail?: elementType, Root?: elementType, Thumb?: elementType, Track?: elementType, ValueLabel?: elementType }  Default  components used slot inside.Deprecated－use slots prop instead. prop removed future major release. See Migrating deprecated APIs details. componentsProps { input?: func| object, mark?: func| object, markLabel?: func| object, rail?: func| object, root?: func| object, thumb?: func| object, track?: func| object, valueLabel?: func| { children?: element, className?: string, open?: bool, style?: object, value?: node, valueLabelDisplay?: 'auto'| ''| '' } }  Default  extra props slot components. can override existing props add new ones.Deprecated－use slotProps prop instead. prop removed future major release. See Migrating deprecated APIs details. defaultValue Array<number>| number  Default - default value. Use component controlled. disabled bool  Default FALSE true, component disabled. disableSwap bool  Default FALSE true, active thumb swap moving pointer thumb dragging another thumb. getAriaLabel func  Default - Accepts function returns string value provides user-friendly name thumb labels slider. important screen reader users.Signature:function(index: number) => stringindex thumb label's index format. getAriaValueText func  Default - Accepts function returns string value provides user-friendly name current value slider. important screen reader users.Signature:function(value: number, index: number) => stringvalue thumb label's value format.index thumb label's index format. marks Array<{ label?: node, value: number }>| bool  Default FALSE Marks indicate predetermined values user can move slider. true marks spaced according value step prop. array, contain objects value optional label keys. max number  Default 100 maximum allowed value slider. equal min. min number  Default 0 minimum allowed value slider. equal max. name string  Default - Name attribute hidden input element. onChange func  Default - Callback function fired slider's value changed.Signature:function(event: Event, value: Value, activeThumb: number) => voidevent event source callback. can pull new value accessing event.target.value (). Warning: generic event change event.value new value.activeThumb Index currently moved thumb. onChangeCommitted func  Default - Callback function fired mouseup triggered.Signature:function(event: React.SyntheticEvent | Event, value: Value) => voidevent event source callback. Warning: generic event change event.value new value. orientation 'horizontal'| 'vertical'  Default 'horizontal' component orientation. scale func  Default function Identity(x)    return x;  transformation function, change scale slider.Signature:function(x: ) => shiftStep number  Default 10 granularity slider can step values using Page /Page Shift + Arrow /Arrow . size 'small'| 'medium'| string  Default 'medium' size slider. slotProps { input?: func| object, mark?: func| object, markLabel?: func| object, rail?: func| object, root?: func| object, thumb?: func| object, track?: func| object, valueLabel?: func| { children?: element, className?: string, open?: bool, style?: object, value?: node, valueLabelDisplay?: 'auto'| ''| '' } }  Default  props used slot inside Slider. slots { input?: elementType, mark?: elementType, markLabel?: elementType, rail?: elementType, root?: elementType, thumb?: elementType, track?: elementType, valueLabel?: elementType }  Default  components used slot inside Slider. Either string use HTML element component. step number  Default 1 granularity slider can step values. (\"discrete\" slider.) min prop serves origin valid values. recommend (max - min) evenly divisible step.step null, thumb can slid onto marks provided marks prop. sx Array<func| object| bool>| func| object  Default - system prop allows defining system overrides well additional CSS styles.See sx page details. tabIndex number  Default - Tab index attribute hidden input element. track 'inverted'| 'normal'| false  Default 'normal' track presentation: normal track render bar representing slider value. inverted track render bar representing remaining slider value. false track render without bar. value Array<number>| number  Default - value slider. ranged sliders, provide array two values. valueLabelDisplay 'auto'| ''| ''  Default '' Controls value label displayed: auto value label display thumb hovered focused. display persistently. never display. valueLabelFormat func| string  Default function Identity(x)    return x;  format function value label's value.function provided, following signature:- number value value label's value format - number index value label's index format","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Snackbar.html","id":null,"dir":"Reference","previous_headings":"","what":"Snackbar — Snackbar","title":"Snackbar — Snackbar","text":"https://mui.com/material-ui/api/snackbar/","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Snackbar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Snackbar — Snackbar","text":"","code":"Snackbar(...)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Snackbar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Snackbar — Snackbar","text":"... Props pass component.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Snackbar.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Snackbar — Snackbar","text":"Object shiny.tag class suitable use UI Shiny app.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Snackbar.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Snackbar — Snackbar","text":"action node  Default - action display. renders message, end snackbar. anchorOrigin { horizontal: 'center'| 'left'| 'right', vertical: 'bottom'| 'top' }  Default  vertical: 'bottom', horizontal: 'left'  anchor Snackbar. smaller screens, component grows occupy available width, horizontal alignment ignored. autoHideDuration number  Default null number milliseconds wait automatically calling onClose function. onClose set state open prop hide Snackbar. behavior disabled default null value. children element  Default - Replace SnackbarContent component. classes object  Default - Override extend styles applied component.See CSS classes API details. ClickAwayListenerProps object  Default - Props applied ClickAwayListener element.Deprecated－Use slotProps.clickAwayListener instead. prop removed future major release. See Migrating deprecated APIs details. ContentProps object  Default - Props applied SnackbarContent element.Deprecated－Use slotProps.content instead. prop removed future major release. See Migrating deprecated APIs details. disableWindowBlurListener bool  Default FALSE true, autoHideDuration timer expire even window focused. key  Default - displaying multiple consecutive snackbars using single parent-rendered , add key prop ensure independent treatment message. instance, use . Otherwise, messages might update place, features like autoHideDuration affected. message node  Default - message display. onClose func  Default - Callback fired component requests closed. Typically onClose used set state parent component, used control Snackbar open prop. reason parameter can optionally used control response onClose, example ignoring clickaway.Signature:function(event: React.SyntheticEvent | Event, reason: string) => voidevent event source callback.reason Can : \"timeout\" (autoHideDuration expired), \"clickaway\", \"escapeKeyDown\". open bool  Default - true, component shown. resumeHideDuration number  Default - number milliseconds wait dismissing user interaction. autoHideDuration prop specified, nothing. autoHideDuration prop specified resumeHideDuration , default autoHideDuration / 2 ms. slotProps { clickAwayListener?: func| { children: element, disableReactTree?: bool, mouseEvent?: 'onClick'| 'onMouseDown'| 'onMouseUp'| 'onPointerDown'| 'onPointerUp'| false, onClickAway?: func, touchEvent?: 'onTouchEnd'| 'onTouchStart'| false }, content?: func| object, root?: func| object, transition?: func| object }  Default  props used slot inside. slots { clickAwayListener?: elementType, content?: elementType, root?: elementType, transition?: elementType }  Default  components used slot inside. sx Array<func| object| bool>| func| object  Default - system prop allows defining system overrides well additional CSS styles.See sx page details. TransitionComponent elementType  Default Grow component used transition. Follow guide learn requirements component.Deprecated－Use slots.transition instead. prop removed future major release. See Migrating deprecated APIs details. transitionDuration number| { appear?: number, enter?: number, exit?: number }  Default    enter: theme.transitions.duration.enteringScreen,   exit: theme.transitions.duration.leavingScreen,  duration transition, milliseconds. may specify single timeout transitions, individually object. TransitionProps object  Default  Props applied transition element. default, element based Transition component.Deprecated－Use slotProps.transition instead. prop removed future major release. See Migrating deprecated APIs details.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/SnackbarContent.html","id":null,"dir":"Reference","previous_headings":"","what":"SnackbarContent — SnackbarContent","title":"SnackbarContent — SnackbarContent","text":"https://mui.com/material-ui/api/snackbar-content/","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/SnackbarContent.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SnackbarContent — SnackbarContent","text":"","code":"SnackbarContent(...)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/SnackbarContent.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SnackbarContent — SnackbarContent","text":"... Props pass component.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/SnackbarContent.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"SnackbarContent — SnackbarContent","text":"Object shiny.tag class suitable use UI Shiny app.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/SnackbarContent.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"SnackbarContent — SnackbarContent","text":"action node  Default - action display. renders message, end snackbar. classes object  Default - Override extend styles applied component.See CSS classes API details. message node  Default - message display. role string  Default 'alert' ARIA role attribute element. sx Array<func| object| bool>| func| object  Default - system prop allows defining system overrides well additional CSS styles.See sx page details.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/SpeedDial.html","id":null,"dir":"Reference","previous_headings":"","what":"SpeedDial — SpeedDial","title":"SpeedDial — SpeedDial","text":"https://mui.com/material-ui/api/speed-dial/","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/SpeedDial.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SpeedDial — SpeedDial","text":"","code":"SpeedDial(...)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/SpeedDial.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SpeedDial — SpeedDial","text":"... Props pass component.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/SpeedDial.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"SpeedDial — SpeedDial","text":"Object shiny.tag class suitable use UI Shiny app.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/SpeedDial.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"SpeedDial — SpeedDial","text":"ariaLabel string  Default - aria-label button element. Also used provide id SpeedDial element children. children node  Default - SpeedDialActions display SpeedDial open. classes object  Default - Override extend styles applied component.See CSS classes API details. direction ''| 'left'| 'right'| ''  Default '' direction actions open relative floating action button. FabProps object  Default  Props applied Fab element. hidden bool  Default FALSE true, SpeedDial hidden. icon node  Default - icon display SpeedDial Fab. SpeedDialIcon component provides default Icon animation. onClose func  Default - Callback fired component requests closed.Signature:function(event: object, reason: string) => voidevent event source callback.reason Can : \"toggle\", \"blur\", \"mouseLeave\", \"escapeKeyDown\". onOpen func  Default - Callback fired component requests open.Signature:function(event: object, reason: string) => voidevent event source callback.reason Can : \"toggle\", \"focus\", \"mouseEnter\". open bool  Default - true, component shown. openIcon node  Default - icon display SpeedDial Fab SpeedDial open. slotProps { root?: func| object, transition?: func| object }  Default  props used slot inside. slots { root?: elementType, transition?: elementType }  Default  components used slot inside. sx Array<func| object| bool>| func| object  Default - system prop allows defining system overrides well additional CSS styles.See sx page details. TransitionComponent elementType  Default Zoom * @deprecated Use slots.transition instead. prop removed future major release. migrate component used transition. Follow guide learn requirements component.Deprecated－Use slots.transition instead. prop removed future major release. migrate transitionDuration number| { appear?: number, enter?: number, exit?: number }  Default    enter: theme.transitions.duration.enteringScreen,   exit: theme.transitions.duration.leavingScreen,  duration transition, milliseconds. may specify single timeout transitions, individually object. TransitionProps object  Default - Props applied transition element. default, element based Transition component.Deprecated－Use slotProps.transition instead. prop removed future major release. migrate","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/SpeedDialAction.html","id":null,"dir":"Reference","previous_headings":"","what":"SpeedDialAction — SpeedDialAction","title":"SpeedDialAction — SpeedDialAction","text":"https://mui.com/material-ui/api/speed-dial-action/","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/SpeedDialAction.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SpeedDialAction — SpeedDialAction","text":"","code":"SpeedDialAction(...)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/SpeedDialAction.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SpeedDialAction — SpeedDialAction","text":"... Props pass component.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/SpeedDialAction.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"SpeedDialAction — SpeedDialAction","text":"Object shiny.tag class suitable use UI Shiny app.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/SpeedDialAction.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"SpeedDialAction — SpeedDialAction","text":"classes object  Default - Override extend styles applied component.See CSS classes API details. delay number  Default 0 Adds transition delay, allow series SpeedDialActions animated. FabProps object  Default  Props applied Fab component.Deprecated－Use slotProps.fab instead. prop removed future major release. See Migrating deprecated APIs details. icon node  Default - icon display SpeedDial Fab. id string  Default - prop used help implement accessibility logic. provide prop. falls back randomly generated id. open bool  Default - true, component shown. slotProps { fab?: func| object, staticTooltip?: func| object, staticTooltipLabel?: func| object, tooltip?: func| object }  Default  props used slot inside. slots { fab?: elementType, staticTooltip?: elementType, staticTooltipLabel?: elementType, tooltip?: elementType }  Default  components used slot inside. sx Array<func| object| bool>| func| object  Default - system prop allows defining system overrides well additional CSS styles.See sx page details. TooltipClasses object  Default - classes prop applied Tooltip element.Deprecated－Use slotProps.tooltip.classes instead. prop removed future major release. See Migrating deprecated APIs details. tooltipOpen bool  Default FALSE Make tooltip always visible SpeedDial open.Deprecated－Use slotProps.tooltip.open instead. prop removed future major release. See Migrating deprecated APIs details. tooltipPlacement 'auto-end'| 'auto-start'| 'auto'| 'bottom-end'| 'bottom-start'| 'bottom'| 'left-end'| 'left-start'| 'left'| 'right-end'| 'right-start'| 'right'| 'top-end'| 'top-start'| 'top'  Default 'left' Placement tooltip.Deprecated－Use slotProps.tooltip.placement instead. prop removed future major release. See Migrating deprecated APIs details. tooltipTitle node  Default - Label display tooltip.Deprecated－Use slotProps.tooltip.title instead. prop removed future major release. See Migrating deprecated APIs details.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/SpeedDialIcon.html","id":null,"dir":"Reference","previous_headings":"","what":"SpeedDialIcon — SpeedDialIcon","title":"SpeedDialIcon — SpeedDialIcon","text":"https://mui.com/material-ui/api/speed-dial-icon/","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/SpeedDialIcon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SpeedDialIcon — SpeedDialIcon","text":"","code":"SpeedDialIcon(...)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/SpeedDialIcon.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SpeedDialIcon — SpeedDialIcon","text":"... Props pass component.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/SpeedDialIcon.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"SpeedDialIcon — SpeedDialIcon","text":"Object shiny.tag class suitable use UI Shiny app.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/SpeedDialIcon.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"SpeedDialIcon — SpeedDialIcon","text":"classes object  Default NA Override extend styles applied component.See CSS classes API details. icon node  Default NA icon display. openIcon node  Default NA icon display SpeedDial Floating Action Button SpeedDial open. sx Array<func| object| bool>| func| object  Default NA system prop allows defining system overrides well additional CSS styles.See sx page details.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Stack.html","id":null,"dir":"Reference","previous_headings":"","what":"Stack — Stack","title":"Stack — Stack","text":"https://mui.com/material-ui/api/stack/","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Stack.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stack — Stack","text":"","code":"Stack(...)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Stack.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Stack — Stack","text":"... Props pass component.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Stack.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Stack — Stack","text":"Object shiny.tag class suitable use UI Shiny app.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Stack.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Stack — Stack","text":"children node  Default - content component. component elementType  Default - component used root node. Either string use HTML element component. direction 'column-reverse'| 'column'| 'row-reverse'| 'row'| Array<'column-reverse'| 'column'| 'row-reverse'| 'row'>| object  Default 'column' Defines flex-direction style property. applied screen sizes. divider node  Default - Add element child. spacing Array<number| string>| number| object| string  Default 0 Defines space immediate children. sx Array<func| object| bool>| func| object  Default - system prop, allows defining system overrides well additional CSS styles.See sx page details. useFlexGap bool  Default FALSE true, CSS flexbox gap used instead applying margin children.CSS gap removes known limitations, fully supported browsers. recommend checking https://caniuse.com/?search=flex%20gap using flag.enable flag globally, follow theme's default props configuration.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Step.html","id":null,"dir":"Reference","previous_headings":"","what":"Step — Step","title":"Step — Step","text":"https://mui.com/material-ui/api/step/","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Step.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Step — Step","text":"","code":"Step(...)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Step.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Step — Step","text":"... Props pass component.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Step.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Step — Step","text":"Object shiny.tag class suitable use UI Shiny app.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Step.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Step — Step","text":"active bool  Default - Sets step active. passed child components. children node  Default - Step sub-components StepLabel, StepContent. classes object  Default - Override extend styles applied component.See CSS classes API details. completed bool  Default - Mark step completed. passed child components. component elementType  Default - component used root node. Either string use HTML element component. disabled bool  Default - true, step disabled, also disable button StepButton child Step. passed child components. expanded bool  Default FALSE Expand step. index integer  Default - position step. prop defaults value inherited parent Stepper component. last bool  Default - true, Step displayed rendered last. prop defaults value inherited parent Stepper component. sx Array<func| object| bool>| func| object  Default - system prop allows defining system overrides well additional CSS styles.See sx page details.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/StepButton.html","id":null,"dir":"Reference","previous_headings":"","what":"StepButton — StepButton","title":"StepButton — StepButton","text":"https://mui.com/material-ui/api/step-button/","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/StepButton.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"StepButton — StepButton","text":"","code":"StepButton(...)  StepButton.shinyInput(inputId, ...)  updateStepButton.shinyInput(   session = shiny::getDefaultReactiveDomain(),   inputId,   ... )"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/StepButton.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"StepButton — StepButton","text":"... Props pass component. inputId ID component. session Object passed `session` argument Shiny server.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/StepButton.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"StepButton — StepButton","text":"Object shiny.tag class suitable use UI Shiny app.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/StepButton.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"StepButton — StepButton","text":"children node  Default NA Can StepLabel node place inside StepLabel children. classes object  Default NA Override extend styles applied component.See CSS classes API details. icon node  Default NA icon displayed step label. optional node  Default NA optional node display. sx Array<func| object| bool>| func| object  Default NA system prop allows defining system overrides well additional CSS styles.See sx page details.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/StepConnector.html","id":null,"dir":"Reference","previous_headings":"","what":"StepConnector — StepConnector","title":"StepConnector — StepConnector","text":"https://mui.com/material-ui/api/step-connector/","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/StepConnector.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"StepConnector — StepConnector","text":"","code":"StepConnector(...)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/StepConnector.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"StepConnector — StepConnector","text":"... Props pass component.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/StepConnector.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"StepConnector — StepConnector","text":"Object shiny.tag class suitable use UI Shiny app.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/StepConnector.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"StepConnector — StepConnector","text":"classes object  Default NA Override extend styles applied component.See CSS classes API details. sx Array<func| object| bool>| func| object  Default NA system prop allows defining system overrides well additional CSS styles.See sx page details.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/StepContent.html","id":null,"dir":"Reference","previous_headings":"","what":"StepContent — StepContent","title":"StepContent — StepContent","text":"https://mui.com/material-ui/api/step-content/","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/StepContent.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"StepContent — StepContent","text":"","code":"StepContent(...)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/StepContent.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"StepContent — StepContent","text":"... Props pass component.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/StepContent.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"StepContent — StepContent","text":"Object shiny.tag class suitable use UI Shiny app.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/StepContent.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"StepContent — StepContent","text":"children node  Default - content component. classes object  Default - Override extend styles applied component.See CSS classes API details. slotProps { transition?: func| object }  Default  props used slot inside. slots { transition?: elementType }  Default  components used slot inside. sx Array<func| object| bool>| func| object  Default - system prop allows defining system overrides well additional CSS styles.See sx page details. TransitionComponent elementType  Default Collapse component used transition. Follow guide learn requirements component.Deprecated－Use slots.transition instead. prop removed future major release. migrate. transitionDuration 'auto'| number| { appear?: number, enter?: number, exit?: number }  Default 'auto' Adjust duration content expand transition. Passed prop transition component.Set 'auto' automatically calculate transition time based height. TransitionProps object  Default - Props applied transition element. default, element based Transition component.Deprecated－Use slotProps.transition instead. prop removed future major release. See Migrating deprecated APIs details.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/StepIcon.html","id":null,"dir":"Reference","previous_headings":"","what":"StepIcon — StepIcon","title":"StepIcon — StepIcon","text":"https://mui.com/material-ui/api/step-icon/","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/StepIcon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"StepIcon — StepIcon","text":"","code":"StepIcon(...)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/StepIcon.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"StepIcon — StepIcon","text":"... Props pass component.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/StepIcon.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"StepIcon — StepIcon","text":"Object shiny.tag class suitable use UI Shiny app.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/StepIcon.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"StepIcon — StepIcon","text":"active bool  Default FALSE Whether step active. classes object  Default - Override extend styles applied component.See CSS classes API details. completed bool  Default FALSE Mark step completed. passed child components. error bool  Default FALSE true, step marked failed. icon node  Default - label displayed step icon. sx Array<func| object| bool>| func| object  Default - system prop allows defining system overrides well additional CSS styles.See sx page details.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/StepLabel.html","id":null,"dir":"Reference","previous_headings":"","what":"StepLabel — StepLabel","title":"StepLabel — StepLabel","text":"https://mui.com/material-ui/api/step-label/","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/StepLabel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"StepLabel — StepLabel","text":"","code":"StepLabel(...)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/StepLabel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"StepLabel — StepLabel","text":"... Props pass component.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/StepLabel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"StepLabel — StepLabel","text":"Object shiny.tag class suitable use UI Shiny app.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/StepLabel.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"StepLabel — StepLabel","text":"children node  Default - cases simply string containing title label. classes object  Default - Override extend styles applied component.See CSS classes API details. componentsProps { label?: object }  Default  props used slot inside.Deprecated－use slotProps prop instead. prop removed future major release. See Migrating deprecated APIs details. error bool  Default FALSE true, step marked failed. icon node  Default - Override default label step icon. optional node  Default - optional node display. slotProps { label?: func| object, root?: func| object, stepIcon?: func| object }  Default  props used slot inside. slots { label?: elementType, root?: elementType, stepIcon?: elementType }  Default  components used slot inside. StepIconComponent elementType  Default - component render place StepIcon.Deprecated－Use slots.stepIcon instead. prop removed future major release. See Migrating deprecated APIs details. StepIconProps object  Default - Props applied StepIcon element.Deprecated－Use slotProps.stepIcon instead. prop removed future major release. See Migrating deprecated APIs details. sx Array<func| object| bool>| func| object  Default - system prop allows defining system overrides well additional CSS styles.See sx page details.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Stepper.html","id":null,"dir":"Reference","previous_headings":"","what":"Stepper — Stepper","title":"Stepper — Stepper","text":"https://mui.com/material-ui/api/stepper/","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Stepper.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stepper — Stepper","text":"","code":"Stepper(...)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Stepper.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Stepper — Stepper","text":"... Props pass component.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Stepper.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Stepper — Stepper","text":"Object shiny.tag class suitable use UI Shiny app.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Stepper.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Stepper — Stepper","text":"activeStep integer  Default 0 Set active step (zero based index). Set -1 disable steps. alternativeLabel bool  Default FALSE set 'true' orientation horizontal, step label positioned icon. children node  Default - Two  components. classes object  Default - Override extend styles applied component.See CSS classes API details. component elementType  Default - component used root node. Either string use HTML element component. connector element  Default  element placed step. nonLinear bool  Default FALSE set Stepper assist controlling steps linear flow. orientation 'horizontal'| 'vertical'  Default 'horizontal' component orientation (layout flow direction). sx Array<func| object| bool>| func| object  Default - system prop allows defining system overrides well additional CSS styles.See sx page details.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/SvgIcon.html","id":null,"dir":"Reference","previous_headings":"","what":"SvgIcon — SvgIcon","title":"SvgIcon — SvgIcon","text":"https://mui.com/material-ui/api/svg-icon/","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/SvgIcon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SvgIcon — SvgIcon","text":"","code":"SvgIcon(...)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/SvgIcon.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SvgIcon — SvgIcon","text":"... Props pass component.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/SvgIcon.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"SvgIcon — SvgIcon","text":"Object shiny.tag class suitable use UI Shiny app.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/SvgIcon.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"SvgIcon — SvgIcon","text":"children node  Default - Node passed SVG element. classes object  Default - Override extend styles applied component.See CSS classes API details. color 'inherit'| 'action'| 'disabled'| 'primary'| 'secondary'| 'error'| 'info'| 'success'| 'warning'| string  Default 'inherit' color component. supports default custom theme colors, can added shown palette customization guide. can use htmlColor prop apply color attribute SVG element. component elementType  Default - component used root node. Either string use HTML element component. fontSize 'inherit'| 'large'| 'medium'| 'small'| string  Default 'medium' fontSize applied icon. Defaults 24px, can configure inherit font size. htmlColor string  Default - Applies color attribute SVG element. inheritViewBox bool  Default FALSE true, root node inherit custom component's viewBox viewBox prop ignored. Useful want reference custom component SvgIcon pass component's viewBox root node. shapeRendering string  Default - shape-rendering attribute. behavior different options described MDN Web Docs. issues blurry icons investigate prop. sx Array<func| object| bool>| func| object  Default - system prop allows defining system overrides well additional CSS styles.See sx page details. titleAccess string  Default - Provides human-readable title element contains . https://www.w3.org/TR/SVG-access/#Equivalent viewBox string  Default '0 0 24 24' Allows redefine coordinates without units mean inside SVG element. example, SVG element 500 (width) 200 (height), pass viewBox=\"0 0 50 20\", means coordinates inside SVG go top left corner (0,0) bottom right (50,20) unit worth 10px.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/SwipeableDrawer.html","id":null,"dir":"Reference","previous_headings":"","what":"SwipeableDrawer — SwipeableDrawer","title":"SwipeableDrawer — SwipeableDrawer","text":"https://mui.com/material-ui/api/swipeable-drawer/","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/SwipeableDrawer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SwipeableDrawer — SwipeableDrawer","text":"","code":"SwipeableDrawer(...)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/SwipeableDrawer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SwipeableDrawer — SwipeableDrawer","text":"... Props pass component.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/SwipeableDrawer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"SwipeableDrawer — SwipeableDrawer","text":"Object shiny.tag class suitable use UI Shiny app.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/SwipeableDrawer.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"SwipeableDrawer — SwipeableDrawer","text":"onClose func  Default - Callback fired component requests closed.Signature:function(event: React.SyntheticEvent<>) => voidevent event source callback. onOpen func  Default - Callback fired component requests opened.Signature:function(event: React.SyntheticEvent<>) => voidevent event source callback. allowSwipeInChildren func| bool  Default FALSE set true, swipe event open drawer even user begins swipe one drawer's children. can useful scenarios drawer partially visible. can customize callback determines children user can drag open drawer (example, ignore elements handle touch move events, like sliders). children node  Default - content component. disableBackdropTransition bool  Default FALSE Disable backdrop transition. can improve FPS low-end devices. disableDiscovery bool  Default FALSE true, touching screen near edge drawer slide drawer bit promote accidental discovery swipe gesture. disableSwipeToOpen bool  Default typeof navigator !== 'undefined' && /iPad|iPhone|iPod/.test(navigator.userAgent) true, swipe open disabled. useful browsers swiping triggers navigation actions. Swipe open disabled iOS browsers default. hysteresis number  Default 0.52 Affects far drawer must opened/closed change state. Specified percent (0-1) width drawer minFlingVelocity number  Default 450 Defines, (average) velocity , swipe defined complete although hysteresis reached. Good threshold 250 - 1000 px/s open bool  Default FALSE true, component shown. slotProps { backdrop?: func| object, docked?: func| object, paper?: func| object, root?: func| object, swipeArea?: func| object, transition?: func| object }  Default  props used slot inside. slots { backdrop?: elementType, docked?: elementType, paper?: elementType, root?: elementType, swipeArea?: elementType, transition?: elementType }  Default  components used slot inside. SwipeAreaProps object  Default - element used intercept touch events edge.Deprecated－use slotProps.swipeArea prop instead. prop removed future major release. See Migrating deprecated APIs details. swipeAreaWidth number  Default 20 width left (right ) area px drawer can swiped open . transitionDuration number| { appear?: number, enter?: number, exit?: number }  Default    enter: theme.transitions.duration.enteringScreen,   exit: theme.transitions.duration.leavingScreen,  duration transition, milliseconds. may specify single timeout transitions, individually object.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Switch.html","id":null,"dir":"Reference","previous_headings":"","what":"Switch — Switch","title":"Switch — Switch","text":"https://mui.com/material-ui/api/switch/","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Switch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Switch — Switch","text":"","code":"Switch(...)  Switch.shinyInput(inputId, ..., value = defaultValue)  updateSwitch.shinyInput(   session = shiny::getDefaultReactiveDomain(),   inputId,   ... )"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Switch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Switch — Switch","text":"... Props pass component. inputId ID component. value Starting value. session Object passed `session` argument Shiny server.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Switch.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Switch — Switch","text":"Object shiny.tag class suitable use UI Shiny app.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Switch.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Switch — Switch","text":"checked bool  Default - true, component checked. checkedIcon node  Default - icon display component checked. classes object  Default - Override extend styles applied component.See CSS classes API details. color 'default'| 'primary'| 'secondary'| 'error'| 'info'| 'success'| 'warning'| string  Default 'primary' color component. supports default custom theme colors, can added shown palette customization guide. defaultChecked bool  Default - default checked state. Use component controlled. disabled bool  Default - true, component disabled. disableRipple bool  Default FALSE true, ripple effect disabled. edge 'end'| 'start'| false  Default FALSE given, uses negative margin counteract padding one side (often helpful aligning left right side icon content , without ruining border size shape). icon node  Default - icon display component unchecked. id string  Default - id input element. inputProps object  Default - Attributes applied input element.Deprecated－Use slotProps.input instead. prop removed future major release. See Migrating deprecated APIs details. inputRef ref  Default - Pass ref input element.Deprecated－Use slotProps.input.ref instead. prop removed future major release. See Migrating deprecated APIs details. onChange func  Default - Callback fired state changed.Signature:function(event: React.ChangeEvent) => voidevent event source callback. can pull new value accessing event.target.value (string). can pull new checked state accessing event.target.checked (boolean). required bool  Default FALSE true, input element required. size 'medium'| 'small'| string  Default 'medium' size component. small equivalent dense switch styling. slotProps { input?: func| object, root?: func| object, switchBase?: func| object, thumb?: func| object, track?: func| object }  Default  props used slot inside. slots { input?: elementType, root?: elementType, switchBase?: elementType, thumb?: elementType, track?: elementType }  Default  components used slot inside. sx Array<func| object| bool>| func| object  Default - system prop allows defining system overrides well additional CSS styles.See sx page details. value  Default - value component. DOM API casts string. browser uses \"\" default value.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Tab.html","id":null,"dir":"Reference","previous_headings":"","what":"Tab — Tab","title":"Tab — Tab","text":"https://mui.com/material-ui/api/tab/","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Tab.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tab — Tab","text":"","code":"Tab(...)  Tab.shinyInput(inputId, ..., value = defaultValue)  updateTab.shinyInput(session = shiny::getDefaultReactiveDomain(), inputId, ...)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Tab.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tab — Tab","text":"... Props pass component. inputId ID component. value Starting value. session Object passed `session` argument Shiny server.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Tab.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tab — Tab","text":"Object shiny.tag class suitable use UI Shiny app.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Tab.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Tab — Tab","text":"children unsupportedProp  Default - prop supported. Use component prop need change children structure. classes object  Default - Override extend styles applied component.See CSS classes API details. disabled bool  Default FALSE true, component disabled. disableFocusRipple bool  Default FALSE true,  keyboard focus ripple disabled. disableRipple bool  Default FALSE true, ripple effect disabled.⚠️ Without ripple styling :focus-visible default. sure highlight element applying separate styles .Mui-focusVisible class. icon element| string  Default - icon display. iconPosition 'bottom'| 'end'| 'start'| 'top'  Default 'top' position icon relative label. label node  Default - label element. sx Array<func| object| bool>| func| object  Default - system prop allows defining system overrides well additional CSS styles.See sx page details. value  Default - can provide value. Otherwise, fallback child position index. wrapped bool  Default FALSE Tab labels appear single row. can use second line needed.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/TabContext.html","id":null,"dir":"Reference","previous_headings":"","what":"TabContext — TabContext","title":"TabContext — TabContext","text":"https://mui.com/material-ui/api/tab-context/","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/TabContext.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"TabContext — TabContext","text":"","code":"TabContext(...)  TabContext.shinyInput(inputId, ..., value = defaultValue)  updateTabContext.shinyInput(   session = shiny::getDefaultReactiveDomain(),   inputId,   ... )  TabContext(...)  TabContext.shinyInput(inputId, ..., value = defaultValue)  updateTabContext.shinyInput(   session = shiny::getDefaultReactiveDomain(),   inputId,   ... )"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/TabContext.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"TabContext — TabContext","text":"... Props pass component. inputId ID component. value Starting value. session Object passed `session` argument Shiny server.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/TabContext.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"TabContext — TabContext","text":"Object shiny.tag class suitable use UI Shiny app.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/TabContext.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"TabContext — TabContext","text":"value number| string  Default NA value currently selected Tab. children node  Default NA content component.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Table.html","id":null,"dir":"Reference","previous_headings":"","what":"Table — Table","title":"Table — Table","text":"https://mui.com/material-ui/api/table/","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Table — Table","text":"","code":"Table(...)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Table — Table","text":"... Props pass component.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Table — Table","text":"Object shiny.tag class suitable use UI Shiny app.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Table.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Table — Table","text":"children node  Default - content table, normally TableHead TableBody. classes object  Default - Override extend styles applied component.See CSS classes API details. component elementType  Default - component used root node. Either string use HTML element component. padding 'checkbox'| 'none'| 'normal'  Default 'normal' Allows TableCells inherit padding Table. size 'medium'| 'small'| string  Default 'medium' Allows TableCells inherit size Table. stickyHeader bool  Default FALSE Set header sticky. sx Array<func| object| bool>| func| object  Default - system prop allows defining system overrides well additional CSS styles.See sx page details.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/TableBody.html","id":null,"dir":"Reference","previous_headings":"","what":"TableBody — TableBody","title":"TableBody — TableBody","text":"https://mui.com/material-ui/api/table-body/","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/TableBody.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"TableBody — TableBody","text":"","code":"TableBody(...)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/TableBody.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"TableBody — TableBody","text":"... Props pass component.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/TableBody.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"TableBody — TableBody","text":"Object shiny.tag class suitable use UI Shiny app.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/TableBody.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"TableBody — TableBody","text":"children node  Default NA content component, normally TableRow. classes object  Default NA Override extend styles applied component.See CSS classes API details. component elementType  Default NA component used root node. Either string use HTML element component. sx Array<func| object| bool>| func| object  Default NA system prop allows defining system overrides well additional CSS styles.See sx page details.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/TableCell.html","id":null,"dir":"Reference","previous_headings":"","what":"TableCell — TableCell","title":"TableCell — TableCell","text":"https://mui.com/material-ui/api/table-cell/","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/TableCell.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"TableCell — TableCell","text":"","code":"TableCell(...)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/TableCell.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"TableCell — TableCell","text":"... Props pass component.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/TableCell.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"TableCell — TableCell","text":"Object shiny.tag class suitable use UI Shiny app.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/TableCell.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"TableCell — TableCell","text":"align 'center'| 'inherit'| 'justify'| 'left'| 'right'  Default 'inherit' Set text-align table cell content.Monetary generally number fields right aligned allows add quickly head without worry decimals. children node  Default - content component. classes object  Default - Override extend styles applied component.See CSS classes API details. component elementType  Default - component used root node. Either string use HTML element component. padding 'checkbox'| 'none'| 'normal'  Default - Sets padding applied cell. prop defaults value ('default') inherited parent Table component. scope string  Default - Set scope attribute. size 'medium'| 'small'| string  Default - Specify size cell. prop defaults value ('medium') inherited parent Table component. sortDirection 'asc'| 'desc'| false  Default - Set aria-sort direction. sx Array<func| object| bool>| func| object  Default - system prop allows defining system overrides well additional CSS styles.See sx page details. variant 'body'| 'footer'| 'head'| string  Default - Specify cell type. prop defaults value inherited parent TableHead, TableBody, TableFooter components.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/TableContainer.html","id":null,"dir":"Reference","previous_headings":"","what":"TableContainer — TableContainer","title":"TableContainer — TableContainer","text":"https://mui.com/material-ui/api/table-container/","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/TableContainer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"TableContainer — TableContainer","text":"","code":"TableContainer(...)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/TableContainer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"TableContainer — TableContainer","text":"... Props pass component.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/TableContainer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"TableContainer — TableContainer","text":"Object shiny.tag class suitable use UI Shiny app.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/TableContainer.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"TableContainer — TableContainer","text":"children node  Default NA content component, normally Table. classes object  Default NA Override extend styles applied component.See CSS classes API details. component elementType  Default NA component used root node. Either string use HTML element component. sx Array<func| object| bool>| func| object  Default NA system prop allows defining system overrides well additional CSS styles.See sx page details.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/TableFooter.html","id":null,"dir":"Reference","previous_headings":"","what":"TableFooter — TableFooter","title":"TableFooter — TableFooter","text":"https://mui.com/material-ui/api/table-footer/","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/TableFooter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"TableFooter — TableFooter","text":"","code":"TableFooter(...)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/TableFooter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"TableFooter — TableFooter","text":"... Props pass component.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/TableFooter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"TableFooter — TableFooter","text":"Object shiny.tag class suitable use UI Shiny app.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/TableFooter.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"TableFooter — TableFooter","text":"children node  Default NA content component, normally TableRow. classes object  Default NA Override extend styles applied component.See CSS classes API details. component elementType  Default NA component used root node. Either string use HTML element component. sx Array<func| object| bool>| func| object  Default NA system prop allows defining system overrides well additional CSS styles.See sx page details.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/TableHead.html","id":null,"dir":"Reference","previous_headings":"","what":"TableHead — TableHead","title":"TableHead — TableHead","text":"https://mui.com/material-ui/api/table-head/","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/TableHead.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"TableHead — TableHead","text":"","code":"TableHead(...)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/TableHead.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"TableHead — TableHead","text":"... Props pass component.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/TableHead.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"TableHead — TableHead","text":"Object shiny.tag class suitable use UI Shiny app.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/TableHead.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"TableHead — TableHead","text":"children node  Default NA content component, normally TableRow. classes object  Default NA Override extend styles applied component.See CSS classes API details. component elementType  Default NA component used root node. Either string use HTML element component. sx Array<func| object| bool>| func| object  Default NA system prop allows defining system overrides well additional CSS styles.See sx page details.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/TablePagination.html","id":null,"dir":"Reference","previous_headings":"","what":"TablePagination — TablePagination","title":"TablePagination — TablePagination","text":"https://mui.com/material-ui/api/table-pagination/","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/TablePagination.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"TablePagination — TablePagination","text":"","code":"TablePagination(...)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/TablePagination.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"TablePagination — TablePagination","text":"... Props pass component.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/TablePagination.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"TablePagination — TablePagination","text":"Object shiny.tag class suitable use UI Shiny app.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/TablePagination.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"TablePagination — TablePagination","text":"count integer  Default - total number rows.enable server side pagination unknown number items, provide -1. onPageChange func  Default - Callback fired page changed.Signature:function(event: React.MouseEvent | null, page: number) => voidevent event source callback.page page selected. page integer  Default - zero-based index current page. rowsPerPage integer  Default - number rows per page.Set -1 display rows. ActionsComponent elementType  Default TablePaginationActions component used displaying actions. Either string use HTML element component. backIconButtonProps object  Default - Props applied back arrow IconButton component.prop alias slotProps.actions.previousButton overriden used.Deprecated－Use slotProps.actions.previousButton instead. classes object  Default - Override extend styles applied component.See CSS classes API details. component elementType  Default - component used root node. Either string use HTML element component. disabled bool  Default FALSE true, component disabled. getItemAriaLabel func  Default function defaultGetAriaLabel(type)    return Go $type page;  Accepts function returns string value provides user-friendly name current page. important screen reader users.localization purposes, can use provided translations.Signature:function(type: string) => stringtype link button type format ('first' | 'last' | 'next' | 'previous'). labelDisplayedRows func  Default function defaultLabelDisplayedRows( , , count )    return $–$$count !== -1 ? count : $“;  Customize displayed rows label. Invoked  , , count, page  object.localization purposes, can use provided translations. labelRowsPerPage node  Default 'Rows per page:' Customize rows per page label.localization purposes, can use provided translations. nextIconButtonProps `object`  Default - Props applied next arrow IconButton element.prop alias slotProps.actions.nextButton overriden used.Deprecated－Use slotProps.actions.nextButton instead. onRowsPerPageChange `func`  Default - Callback fired number rows per page changed.Signature:function(event: React.ChangeEvent) => voidevent event source callback. rowsPerPageOptions `Array<number|  label: string, value: number >`  Default 10, 25, 50, 100 Customizes options rows per page select field. less two options available, select field displayed. Use -1 value custom label show rows. SelectProps `object`  Default  Props applied rows per page Select element.prop alias slotProps.select overriden used.Deprecated－Use slotProps.select instead. showFirstButton `bool`  Default FALSE true, show first-page button. showLastButton `bool`  Default FALSE true, show last-page button. slotProps ` actions?:  firstButton?: object, firstButtonIcon?: object, lastButton?: object, lastButtonIcon?: object, nextButton?: object, nextButtonIcon?: object, previousButton?: object, previousButtonIcon?: object , displayedRows?: func| object, menuItem?: func| object, root?: func| object, select?: object, selectLabel?: func| object, spacer?: func| object, toolbar?: func| object `  Default  props used slot inside. slots ` actions?:  firstButton?: elementType, firstButtonIcon?: elementType, lastButton?: elementType, lastButtonIcon?: elementType, nextButton?: elementType, nextButtonIcon?: elementType, previousButton?: elementType, previousButtonIcon?: elementType , displayedRows?: elementType, menuItem?: elementType, root?: elementType, select?: elementType, selectLabel?: elementType, spacer?: elementType, toolbar?: elementType `  Default  components used slot inside. sx `Array<func| object| bool>| func| object`  Default - system prop allows defining system overrides well additional CSS styles.See `sx` page details.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/TableRow.html","id":null,"dir":"Reference","previous_headings":"","what":"TableRow — TableRow","title":"TableRow — TableRow","text":"https://mui.com/material-ui/api/table-row/","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/TableRow.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"TableRow — TableRow","text":"","code":"TableRow(...)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/TableRow.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"TableRow — TableRow","text":"... Props pass component.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/TableRow.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"TableRow — TableRow","text":"Object shiny.tag class suitable use UI Shiny app.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/TableRow.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"TableRow — TableRow","text":"children node  Default - valid classes object  Default - Override extend styles applied component.See CSS classes API details. component elementType  Default - component used root node. Either string use HTML element component. hover bool  Default FALSE true, table row shade hover. selected bool  Default FALSE true, table row selected shading. sx Array<func| object| bool>| func| object  Default - system prop allows defining system overrides well additional CSS styles.See sx page details. Developed Felix Luginbuhl. Site built pkgdown 2.1.2.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/TableSortLabel.html","id":null,"dir":"Reference","previous_headings":"","what":"TableSortLabel — TableSortLabel","title":"TableSortLabel — TableSortLabel","text":"https://mui.com/material-ui/api/table-sort-label/","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/TableSortLabel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"TableSortLabel — TableSortLabel","text":"","code":"TableSortLabel(...)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/TableSortLabel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"TableSortLabel — TableSortLabel","text":"... Props pass component.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/TableSortLabel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"TableSortLabel — TableSortLabel","text":"Object shiny.tag class suitable use UI Shiny app.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/TableSortLabel.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"TableSortLabel — TableSortLabel","text":"active bool  Default FALSE true, label active styling (true sorted column). children node  Default - Label contents, arrow appended automatically. classes object  Default - Override extend styles applied component.See CSS classes API details. direction 'asc'| 'desc'  Default 'asc' current sort direction. hideSortIcon bool  Default FALSE Hide sort icon active false. IconComponent elementType  Default ArrowDownwardIcon Sort icon use. slotProps { icon?: func| object, root?: func| object }  Default  props used slot inside. slots { icon?: elementType, root?: elementType }  Default  components used slot inside. sx Array<func| object| bool>| func| object  Default - system prop allows defining system overrides well additional CSS styles.See sx page details.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/TabList.html","id":null,"dir":"Reference","previous_headings":"","what":"TabList — TabList","title":"TabList — TabList","text":"https://mui.com/material-ui/api/tab-list/","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/TabList.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"TabList — TabList","text":"","code":"TabList(...)  TabList.shinyInput(inputId, ..., value = defaultValue)  updateTabList.shinyInput(   session = shiny::getDefaultReactiveDomain(),   inputId,   ... )  TabList(...)  TabList.shinyInput(inputId, ..., value = defaultValue)  updateTabList.shinyInput(   session = shiny::getDefaultReactiveDomain(),   inputId,   ... )"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/TabList.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"TabList — TabList","text":"... Props pass component. inputId ID component. value Starting value. session Object passed `session` argument Shiny server.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/TabList.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"TabList — TabList","text":"Object shiny.tag class suitable use UI Shiny app.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/TabList.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"TabList — TabList","text":"children node  Default NA list  elements.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/TabPanel.html","id":null,"dir":"Reference","previous_headings":"","what":"TabPanel — TabPanel","title":"TabPanel — TabPanel","text":"https://mui.com/material-ui/api/tab-panel/","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/TabPanel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"TabPanel — TabPanel","text":"","code":"TabPanel(...)  TabPanel.shinyInput(inputId, ..., value = defaultValue)  updateTabPanel.shinyInput(   session = shiny::getDefaultReactiveDomain(),   inputId,   ... )  TabPanel(...)  TabPanel.shinyInput(inputId, ..., value = defaultValue)  updateTabPanel.shinyInput(   session = shiny::getDefaultReactiveDomain(),   inputId,   ... )"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/TabPanel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"TabPanel — TabPanel","text":"... Props pass component. inputId ID component. value Starting value. session Object passed `session` argument Shiny server.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/TabPanel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"TabPanel — TabPanel","text":"Object shiny.tag class suitable use UI Shiny app.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/TabPanel.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"TabPanel — TabPanel","text":"value number| string  Default - value corresponding Tab. Must use index Tab value passed Tab. children node  Default - content component. classes object  Default - Override extend styles applied component.See CSS classes API details. keepMounted bool  Default FALSE Always keep children DOM. sx Array<func| object| bool>| func| object  Default - system prop allows defining system overrides well additional CSS styles.See sx page details.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Tabs.html","id":null,"dir":"Reference","previous_headings":"","what":"Tabs — Tabs","title":"Tabs — Tabs","text":"https://mui.com/material-ui/api/tabs/","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Tabs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tabs — Tabs","text":"","code":"Tabs(...)  Tabs.shinyInput(inputId, ..., value = defaultValue)  updateTabs.shinyInput(   session = shiny::getDefaultReactiveDomain(),   inputId,   ... )"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Tabs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tabs — Tabs","text":"... Props pass component. inputId ID component. value Starting value. session Object passed `session` argument Shiny server.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Tabs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tabs — Tabs","text":"Object shiny.tag class suitable use UI Shiny app.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Tabs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Tabs — Tabs","text":"action ref  Default - Callback fired component mounts. useful want trigger action programmatically. supports two actions: updateIndicator() updateScrollButtons() allowScrollButtonsMobile bool  Default FALSE true, scroll buttons forced hidden mobile. default scroll buttons hidden mobile takes precedence scrollButtons. aria-label string  Default - label Tabs string. aria-labelledby string  Default - id list ids separated space label Tabs. centered bool  Default FALSE true, tabs centered. prop intended large views. children node  Default - content component. classes object  Default - Override extend styles applied component.See CSS classes API details. component elementType  Default - component used root node. Either string use HTML element component. indicatorColor 'primary'| 'secondary'| string  Default 'primary' Determines color indicator. onChange func  Default - Callback fired value changes.Signature:function(event: React.SyntheticEvent, value: ) => voidevent event source callback. Warning: generic event change event.value default index child (number) orientation 'horizontal'| 'vertical'  Default 'horizontal' component orientation (layout flow direction). ScrollButtonComponent elementType  Default TabScrollButton component used render scroll buttons.Deprecated－use slots.scrollButtons prop instead. prop removed future major release. See Migrating deprecated APIs details. scrollButtons 'auto'| false| true  Default 'auto' Determine behavior scroll buttons tabs set scroll: auto present items visible. true always present . false never present . default scroll buttons hidden mobile. behavior can disabled allowScrollButtonsMobile. selectionFollowsFocus bool  Default - true selected tab changes focus. Otherwise changes activation. slotProps { endScrollButtonIcon?: func| object, indicator?: func| object, list?: func| object, root?: func| object, scrollbar?: func| object, scrollButtons?: func| object, scroller?: func| object, startScrollButtonIcon?: func| object }  Default  props used slot inside. slots { endScrollButtonIcon?: elementType, EndScrollButtonIcon?: elementType, indicator?: elementType, list?: elementType, root?: elementType, scrollbar?: elementType, scrollButtons?: elementType, scroller?: elementType, startScrollButtonIcon?: elementType, StartScrollButtonIcon?: elementType }  Default  components used slot inside. sx Array<func| object| bool>| func| object  Default - system prop allows defining system overrides well additional CSS styles.See sx page details. TabIndicatorProps object  Default  Props applied tab indicator element.Deprecated－use slotProps.indicator prop instead. prop removed future major release. See Migrating deprecated APIs details. TabScrollButtonProps object  Default  Props applied TabScrollButton element.Deprecated－use slotProps.scrollButtons prop instead. prop removed future major release. See Migrating deprecated APIs details. textColor 'inherit'| 'primary'| 'secondary'  Default 'primary' Determines color Tab. value  Default - value currently selected Tab. want selected Tab, can set prop false. variant 'fullWidth'| 'scrollable'| 'standard'  Default 'standard' Determines additional display behavior tabs: scrollable invoke scrolling properties allow horizontally  scrolling (swiping) tab bar. fullWidth make tabs grow use available space,  used small views, like mobile. standard render default state. visibleScrollbar bool  Default FALSE true, scrollbar visible. can useful displaying long vertical list tabs.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/TabScrollButton.html","id":null,"dir":"Reference","previous_headings":"","what":"TabScrollButton — TabScrollButton","title":"TabScrollButton — TabScrollButton","text":"https://mui.com/material-ui/api/tab-scroll-button/","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/TabScrollButton.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"TabScrollButton — TabScrollButton","text":"","code":"TabScrollButton(...)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/TabScrollButton.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"TabScrollButton — TabScrollButton","text":"... Props pass component.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/TabScrollButton.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"TabScrollButton — TabScrollButton","text":"Object shiny.tag class suitable use UI Shiny app.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/TabScrollButton.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"TabScrollButton — TabScrollButton","text":"direction 'left'| 'right'  Default - direction button indicate. orientation 'horizontal'| 'vertical'  Default - component orientation (layout flow direction). children node  Default - content component. classes object  Default - Override extend styles applied component.See CSS classes API details. disabled bool  Default FALSE true, component disabled. slotProps { endScrollButtonIcon?: func| object, startScrollButtonIcon?: func| object }  Default  extra props slot components. can override existing props add new ones. slots { EndScrollButtonIcon?: elementType, StartScrollButtonIcon?: elementType }  Default  components used slot inside. sx Array<func| object| bool>| func| object  Default - system prop allows defining system overrides well additional CSS styles.See sx page details.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/TextareaAutosize.html","id":null,"dir":"Reference","previous_headings":"","what":"TextareaAutosize — TextareaAutosize","title":"TextareaAutosize — TextareaAutosize","text":"https://mui.com/material-ui/api/textarea-autosize/","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/TextareaAutosize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"TextareaAutosize — TextareaAutosize","text":"","code":"TextareaAutosize(...)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/TextareaAutosize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"TextareaAutosize — TextareaAutosize","text":"... Props pass component.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/TextareaAutosize.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"TextareaAutosize — TextareaAutosize","text":"Object shiny.tag class suitable use UI Shiny app.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/TextareaAutosize.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"TextareaAutosize — TextareaAutosize","text":"maxRows number| string  Default - Maximum number rows display. minRows number| string  Default 1 Minimum number rows display.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/TextField.html","id":null,"dir":"Reference","previous_headings":"","what":"TextField — TextField","title":"TextField — TextField","text":"https://mui.com/material-ui/api/text-field/","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/TextField.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"TextField — TextField","text":"","code":"TextField(...)  TextField.shinyInput(inputId, ..., value = defaultValue)  updateTextField.shinyInput(   session = shiny::getDefaultReactiveDomain(),   inputId,   ... )"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/TextField.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"TextField — TextField","text":"... Props pass component. inputId ID component. value Starting value. session Object passed `session` argument Shiny server.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/TextField.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"TextField — TextField","text":"Object shiny.tag class suitable use UI Shiny app.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/TextField.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"TextField — TextField","text":"autoComplete string  Default - prop helps users fill forms faster, especially mobile devices. name can confusing, like autofill. can learn following specification. autoFocus bool  Default FALSE true, input element focused first mount. classes object  Default - Override extend styles applied component.See CSS classes API details. color 'primary'| 'secondary'| 'error'| 'info'| 'success'| 'warning'| string  Default 'primary' color component. supports default custom theme colors, can added shown palette customization guide. defaultValue  Default - default value. Use component controlled. disabled bool  Default FALSE true, component disabled. error bool  Default FALSE true, label displayed error state. FormHelperTextProps object  Default - Props applied FormHelperText element.Deprecated－Use slotProps.formHelperText instead. prop removed future major release. See Migrating deprecated APIs details. fullWidth bool  Default FALSE true, input take full width container. helperText node  Default - helper text content. id string  Default - id input element. Use prop make label helperText accessible screen readers. InputLabelProps object  Default - Props applied InputLabel element. Pointer events like onClick enabled shrink true.Deprecated－Use slotProps.inputLabel instead. prop removed future major release. See Migrating deprecated APIs details. inputProps object  Default - Attributes applied input element.Deprecated－Use slotProps.htmlInput instead. prop removed future major release. See Migrating deprecated APIs details. InputProps object  Default - Props applied Input element. FilledInput, OutlinedInput Input component depending variant prop value.Deprecated－Use slotProps.input instead. prop removed future major release. See Migrating deprecated APIs details. inputRef ref  Default - Pass ref input element. label node  Default - label content. margin 'dense'| 'none'| 'normal'  Default 'none' dense normal, adjust vertical spacing contained components. maxRows number| string  Default - Maximum number rows display multiline option set true. minRows number| string  Default - Minimum number rows display multiline option set true. multiline bool  Default FALSE true, textarea element rendered instead input. name string  Default - Name attribute input element. onChange func  Default - Callback fired value changed.Signature:function(event: object) => voidevent event source callback. can pull new value accessing event.target.value (string). placeholder string  Default - short hint displayed input user enters value. required bool  Default FALSE true, label displayed required input element required. rows number| string  Default - Number rows display multiline option set true. select bool  Default FALSE Render Select element passing Input element Select input parameter. option set must pass options select children. SelectProps object  Default - Props applied Select element.Deprecated－Use slotProps.select instead. prop removed future major release. See Migrating deprecated APIs details. size 'medium'| 'small'| string  Default 'medium' size component. slotProps { formHelperText?: func| object, htmlInput?: func| object, input?: func| object, inputLabel?: func| object, select?: func| object }  Default  props used slot inside. slots { formHelperText?: elementType, htmlInput?: elementType, input?: elementType, inputLabel?: elementType, root?: elementType, select?: elementType }  Default  components used slot inside. sx Array<func| object| bool>| func| object  Default - system prop allows defining system overrides well additional CSS styles.See sx page details. type string  Default - Type input element. valid HTML5 input type. value  Default - value input element, required controlled component. variant 'filled'| 'outlined'| 'standard'  Default 'outlined' variant use.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/ThemeProvider.html","id":null,"dir":"Reference","previous_headings":"","what":"ThemeProvider — ThemeProvider","title":"ThemeProvider — ThemeProvider","text":"Visit documentation https://mui.com/api/Theme-Provider/ information.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/ThemeProvider.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ThemeProvider — ThemeProvider","text":"","code":"ThemeProvider(...)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/ThemeProvider.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ThemeProvider — ThemeProvider","text":"... args pass element","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/ThemeProvider.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"ThemeProvider — ThemeProvider","text":"Custom ThemeProvider built MuiThemeProvider. See 'js/src/ThemeProvider.tsx'.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Timeline.html","id":null,"dir":"Reference","previous_headings":"","what":"Timeline — Timeline","title":"Timeline — Timeline","text":"https://mui.com/material-ui/api/timeline/","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Timeline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Timeline — Timeline","text":"","code":"Timeline(...)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Timeline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Timeline — Timeline","text":"... Props pass component.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Timeline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Timeline — Timeline","text":"Object shiny.tag class suitable use UI Shiny app.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Timeline.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Timeline — Timeline","text":"children node  Default - content component. classes object  Default - Override extend styles applied component.See CSS classes API details. className string  Default - className applied root element. position 'alternate-reverse'| 'alternate'| 'left'| 'right'  Default 'right' position TimelineContent appear relative time axis. sx Array<func| object| bool>| func| object  Default - system prop allows defining system overrides well additional CSS styles.See sx page details.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/TimelineConnector.html","id":null,"dir":"Reference","previous_headings":"","what":"TimelineConnector — TimelineConnector","title":"TimelineConnector — TimelineConnector","text":"https://mui.com/material-ui/api/timeline-connector/","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/TimelineConnector.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"TimelineConnector — TimelineConnector","text":"","code":"TimelineConnector(...)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/TimelineConnector.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"TimelineConnector — TimelineConnector","text":"... Props pass component.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/TimelineConnector.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"TimelineConnector — TimelineConnector","text":"Object shiny.tag class suitable use UI Shiny app.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/TimelineConnector.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"TimelineConnector — TimelineConnector","text":"children node  Default NA content component. classes object  Default NA Override extend styles applied component.See CSS classes API details. sx Array<func| object| bool>| func| object  Default NA system prop allows defining system overrides well additional CSS styles.See sx page details.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/TimelineContent.html","id":null,"dir":"Reference","previous_headings":"","what":"TimelineContent — TimelineContent","title":"TimelineContent — TimelineContent","text":"https://mui.com/material-ui/api/timeline-content/","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/TimelineContent.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"TimelineContent — TimelineContent","text":"","code":"TimelineContent(...)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/TimelineContent.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"TimelineContent — TimelineContent","text":"... Props pass component.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/TimelineContent.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"TimelineContent — TimelineContent","text":"Object shiny.tag class suitable use UI Shiny app.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/TimelineContent.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"TimelineContent — TimelineContent","text":"children node  Default NA content component. classes object  Default NA Override extend styles applied component.See CSS classes API details. sx Array<func| object| bool>| func| object  Default NA system prop allows defining system overrides well additional CSS styles.See sx page details.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/TimelineDot.html","id":null,"dir":"Reference","previous_headings":"","what":"TimelineDot — TimelineDot","title":"TimelineDot — TimelineDot","text":"https://mui.com/material-ui/api/timeline-dot/","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/TimelineDot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"TimelineDot — TimelineDot","text":"","code":"TimelineDot(...)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/TimelineDot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"TimelineDot — TimelineDot","text":"... Props pass component.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/TimelineDot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"TimelineDot — TimelineDot","text":"Object shiny.tag class suitable use UI Shiny app.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/TimelineDot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"TimelineDot — TimelineDot","text":"children node  Default - content component. classes object  Default - Override extend styles applied component.See CSS classes API details. color 'error'| 'grey'| 'info'| 'inherit'| 'primary'| 'secondary'| 'success'| 'warning'| string  Default 'grey' dot can different colors. sx Array<func| object| bool>| func| object  Default - system prop allows defining system overrides well additional CSS styles.See sx page details. variant 'filled'| 'outlined'| string  Default 'filled' dot can appear filled outlined.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/TimelineItem.html","id":null,"dir":"Reference","previous_headings":"","what":"TimelineItem — TimelineItem","title":"TimelineItem — TimelineItem","text":"https://mui.com/material-ui/api/timeline-item/","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/TimelineItem.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"TimelineItem — TimelineItem","text":"","code":"TimelineItem(...)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/TimelineItem.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"TimelineItem — TimelineItem","text":"... Props pass component.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/TimelineItem.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"TimelineItem — TimelineItem","text":"Object shiny.tag class suitable use UI Shiny app.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/TimelineItem.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"TimelineItem — TimelineItem","text":"children node  Default NA content component. classes object  Default NA Override extend styles applied component.See CSS classes API details. position 'alternate-reverse'| 'alternate'| 'left'| 'right'  Default NA position timeline's item appear. sx Array<func| object| bool>| func| object  Default NA system prop allows defining system overrides well additional CSS styles.See sx page details.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/TimelineOppositeContent.html","id":null,"dir":"Reference","previous_headings":"","what":"TimelineOppositeContent — TimelineOppositeContent","title":"TimelineOppositeContent — TimelineOppositeContent","text":"https://mui.com/material-ui/api/timeline-opposite-content/","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/TimelineOppositeContent.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"TimelineOppositeContent — TimelineOppositeContent","text":"","code":"TimelineOppositeContent(...)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/TimelineOppositeContent.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"TimelineOppositeContent — TimelineOppositeContent","text":"... Props pass component.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/TimelineOppositeContent.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"TimelineOppositeContent — TimelineOppositeContent","text":"Object shiny.tag class suitable use UI Shiny app.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/TimelineOppositeContent.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"TimelineOppositeContent — TimelineOppositeContent","text":"children node  Default NA content component. classes object  Default NA Override extend styles applied component.See CSS classes API details. sx Array<func| object| bool>| func| object  Default NA system prop allows defining system overrides well additional CSS styles.See sx page details.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/TimelineSeparator.html","id":null,"dir":"Reference","previous_headings":"","what":"TimelineSeparator — TimelineSeparator","title":"TimelineSeparator — TimelineSeparator","text":"https://mui.com/material-ui/api/timeline-separator/","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/TimelineSeparator.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"TimelineSeparator — TimelineSeparator","text":"","code":"TimelineSeparator(...)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/TimelineSeparator.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"TimelineSeparator — TimelineSeparator","text":"... Props pass component.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/TimelineSeparator.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"TimelineSeparator — TimelineSeparator","text":"Object shiny.tag class suitable use UI Shiny app.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/TimelineSeparator.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"TimelineSeparator — TimelineSeparator","text":"children node  Default NA content component. classes object  Default NA Override extend styles applied component.See CSS classes API details. sx Array<func| object| bool>| func| object  Default NA system prop allows defining system overrides well additional CSS styles.See sx page details.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/ToggleButton.html","id":null,"dir":"Reference","previous_headings":"","what":"ToggleButton — ToggleButton","title":"ToggleButton — ToggleButton","text":"https://mui.com/material-ui/api/toggle-button/","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/ToggleButton.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ToggleButton — ToggleButton","text":"","code":"ToggleButton(...)  ToggleButton.shinyInput(inputId, ...)  updateToggleButton.shinyInput(   session = shiny::getDefaultReactiveDomain(),   inputId,   ... )"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/ToggleButton.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ToggleButton — ToggleButton","text":"... Props pass component. inputId ID component. session Object passed `session` argument Shiny server.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/ToggleButton.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ToggleButton — ToggleButton","text":"Object shiny.tag class suitable use UI Shiny app.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/ToggleButton.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"ToggleButton — ToggleButton","text":"value  Default - value associate button selected ToggleButtonGroup. children node  Default - content component. classes object  Default - Override extend styles applied component.See CSS classes API details. color 'standard'| 'primary'| 'secondary'| 'error'| 'info'| 'success'| 'warning'| string  Default 'standard' color button active state. supports default custom theme colors, can added shown palette customization guide. disabled bool  Default FALSE true, component disabled. disableFocusRipple bool  Default FALSE true,  keyboard focus ripple disabled. disableRipple bool  Default FALSE true, ripple effect disabled.⚠️ Without ripple styling :focus-visible default. sure highlight element applying separate styles .Mui-focusVisible class. fullWidth bool  Default FALSE true, button take full width container. onChange func  Default - Callback fired state changes.Signature:function(event: React.MouseEvent, value: ) => voidevent event source callback.value selected button. onClick func  Default - Callback fired button clicked.Signature:function(event: React.MouseEvent, value: ) => voidevent event source callback.value selected button. selected bool  Default - true, button rendered active state. size 'small'| 'medium'| 'large'| string  Default 'medium' size component. prop defaults value inherited parent ToggleButtonGroup component. sx Array<func| object| bool>| func| object  Default - system prop allows defining system overrides well additional CSS styles.See sx page details.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/ToggleButtonGroup.html","id":null,"dir":"Reference","previous_headings":"","what":"ToggleButtonGroup — ToggleButtonGroup","title":"ToggleButtonGroup — ToggleButtonGroup","text":"https://mui.com/material-ui/api/toggle-button-group/","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/ToggleButtonGroup.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ToggleButtonGroup — ToggleButtonGroup","text":"","code":"ToggleButtonGroup(...)  ToggleButtonGroup.shinyInput(inputId, ..., value = defaultValue)  updateToggleButtonGroup.shinyInput(   session = shiny::getDefaultReactiveDomain(),   inputId,   ... )"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/ToggleButtonGroup.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ToggleButtonGroup — ToggleButtonGroup","text":"... Props pass component. inputId ID component. value Starting value. session Object passed `session` argument Shiny server.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/ToggleButtonGroup.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ToggleButtonGroup — ToggleButtonGroup","text":"Object shiny.tag class suitable use UI Shiny app.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/ToggleButtonGroup.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"ToggleButtonGroup — ToggleButtonGroup","text":"children node  Default - content component. classes object  Default - Override extend styles applied component.See CSS classes API details. color 'standard'| 'primary'| 'secondary'| 'error'| 'info'| 'success'| 'warning'| string  Default 'standard' color button selected. supports default custom theme colors, can added shown palette customization guide. disabled bool  Default FALSE true, component disabled. implies ToggleButton children disabled. exclusive bool  Default FALSE true, allow one child ToggleButton values selected. fullWidth bool  Default FALSE true, button group take full width container. onChange func  Default - Callback fired value changes.Signature:function(event: React.MouseEvent, value: ) => voidevent event source callback.value selected buttons. exclusive true single value; false array selected values. value selected exclusive true value null; false empty array. orientation 'horizontal'| 'vertical'  Default 'horizontal' component orientation (layout flow direction). size 'small'| 'medium'| 'large'| string  Default 'medium' size component. sx Array<func| object| bool>| func| object  Default - system prop allows defining system overrides well additional CSS styles.See sx page details. value  Default - currently selected value within group array selected values exclusive false.value must reference equality option order selected.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Toolbar.html","id":null,"dir":"Reference","previous_headings":"","what":"Toolbar — Toolbar","title":"Toolbar — Toolbar","text":"https://mui.com/material-ui/api/toolbar/","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Toolbar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Toolbar — Toolbar","text":"","code":"Toolbar(...)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Toolbar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Toolbar — Toolbar","text":"... Props pass component.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Toolbar.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Toolbar — Toolbar","text":"Object shiny.tag class suitable use UI Shiny app.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Toolbar.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Toolbar — Toolbar","text":"children node  Default - Toolbar children, usually mixture IconButton, Button Typography. Toolbar flex container, allowing flex item properties used lay children. classes object  Default - Override extend styles applied component.See CSS classes API details. component elementType  Default - component used root node. Either string use HTML element component. disableGutters bool  Default FALSE true, disables gutter padding. sx Array<func| object| bool>| func| object  Default - system prop allows defining system overrides well additional CSS styles.See sx page details. variant 'dense'| 'regular'| string  Default 'regular' variant use.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Tooltip.html","id":null,"dir":"Reference","previous_headings":"","what":"Tooltip — Tooltip","title":"Tooltip — Tooltip","text":"https://mui.com/material-ui/api/tooltip/","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Tooltip.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tooltip — Tooltip","text":"","code":"Tooltip(...)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Tooltip.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tooltip — Tooltip","text":"... Props pass component.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Tooltip.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tooltip — Tooltip","text":"Object shiny.tag class suitable use UI Shiny app.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Tooltip.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Tooltip — Tooltip","text":"children element  Default - Tooltip reference element.needs able hold ref. arrow bool  Default FALSE true, adds arrow tooltip. classes object  Default - Override extend styles applied component.See CSS classes API details. components { Arrow?: elementType, Popper?: elementType, Tooltip?: elementType, Transition?: elementType }  Default  components used slot inside.Deprecated－use slots prop instead. prop removed future major release. See Migrating deprecated APIs details. componentsProps { arrow?: object, popper?: object, tooltip?: object, transition?: object }  Default  extra props slot components. can override existing props add new ones.Deprecated－use slotProps prop instead. prop removed future major release. See Migrating deprecated APIs details. describeChild bool  Default FALSE Set true title acts accessible description. default title acts accessible label child. disableFocusListener bool  Default FALSE respond focus-visible events. disableHoverListener bool  Default FALSE respond hover events. disableInteractive bool  Default FALSE Makes tooltip interactive, .e. close user hovers tooltip leaveDelay expired. disableTouchListener bool  Default FALSE respond long press touch events. enterDelay number  Default 100 number milliseconds wait showing tooltip. prop impact enter touch delay (enterTouchDelay). enterNextDelay number  Default 0 number milliseconds wait showing tooltip one already recently opened. enterTouchDelay number  Default 700 number milliseconds user must touch element showing tooltip. followCursor bool  Default FALSE true, tooltip follow cursor wrapped element. id string  Default - prop used help implement accessibility logic. provide prop. falls back randomly generated id. leaveDelay number  Default 0 number milliseconds wait hiding tooltip. prop impact leave touch delay (leaveTouchDelay). leaveTouchDelay number  Default 1500 number milliseconds user stops touching element hiding tooltip. onClose func  Default - Callback fired component requests closed.Signature:function(event: React.SyntheticEvent) => voidevent event source callback. onOpen func  Default - Callback fired component requests open.Signature:function(event: React.SyntheticEvent) => voidevent event source callback. open bool  Default - true, component shown. placement 'auto-end'| 'auto-start'| 'auto'| 'bottom-end'| 'bottom-start'| 'bottom'| 'left-end'| 'left-start'| 'left'| 'right-end'| 'right-start'| 'right'| 'top-end'| 'top-start'| 'top'  Default 'bottom' Tooltip placement. PopperComponent elementType  Default - component used popper.Deprecated－use slots.popper prop instead. prop removed future major release. See Migrating deprecated APIs details. PopperProps object  Default  Props applied Popper element.Deprecated－use slotProps.popper prop instead. prop removed future major release. See Migrating deprecated APIs details. slotProps { arrow?: func| object, popper?: func| object, tooltip?: func| object, transition?: func| object }  Default  props used slot inside. slots { arrow?: elementType, popper?: elementType, tooltip?: elementType, transition?: elementType }  Default  components used slot inside. sx Array<func| object| bool>| func| object  Default - system prop allows defining system overrides well additional CSS styles.See sx page details. title node  Default - Tooltip title. Zero-length titles string, undefined, null false never displayed. TransitionComponent elementType  Default - component used transition. Follow guide learn requirements component.Deprecated－use slots.transition prop instead. prop removed future major release. See Migrating deprecated APIs details. TransitionProps object  Default  Props applied transition element. default, element based Transition component.Deprecated－use slotProps.transition prop instead. prop removed future major release. See Migrating deprecated APIs details.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Typography.html","id":null,"dir":"Reference","previous_headings":"","what":"Typography — Typography","title":"Typography — Typography","text":"https://mui.com/material-ui/api/typography/","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Typography.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Typography — Typography","text":"","code":"Typography(...)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Typography.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Typography — Typography","text":"... Props pass component.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Typography.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Typography — Typography","text":"Object shiny.tag class suitable use UI Shiny app.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Typography.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Typography — Typography","text":"align 'center'| 'inherit'| 'justify'| 'left'| 'right'  Default 'inherit' Set text-align component. children node  Default - content component. classes object  Default - Override extend styles applied component.See CSS classes API details. color 'primary'| 'secondary'| 'success'| 'error'| 'info'| 'warning'| 'textPrimary'| 'textSecondary'| 'textDisabled'| string  Default - color component. supports default custom theme colors, can added shown palette customization guide. component elementType  Default - component used root node. Either string use HTML element component. gutterBottom bool  Default FALSE true, text bottom margin. noWrap bool  Default FALSE true, text wrap, instead truncate text overflow ellipsis.Note text overflow can happen block inline-block level elements (element needs width order overflow). paragraph bool  Default FALSE true, element paragraph element.Deprecated－Use component prop instead. prop removed future major release. See Migrating deprecated APIs details. sx Array<func| object| bool>| func| object  Default - system prop allows defining system overrides well additional CSS styles.See sx page details. variant 'body1'| 'body2'| 'button'| 'caption'| 'h1'| 'h2'| 'h3'| 'h4'| 'h5'| 'h6'| 'inherit'| 'overline'| 'subtitle1'| 'subtitle2'| string  Default 'body1' Applies theme typography styles. variantMapping object  Default    h1: 'h1',   h2: 'h2',   h3: 'h3',   h4: 'h4',   h5: 'h5',   h6: 'h6',   subtitle1: 'h6',   subtitle2: 'h6',   body1: 'p',   body2: 'p',   inherit: 'p',  component maps variant prop range different HTML element types. instance, subtitle1 ","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Zoom.html","id":null,"dir":"Reference","previous_headings":"","what":"Zoom — Zoom","title":"Zoom — Zoom","text":"https://mui.com/material-ui/api/zoom/","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Zoom.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Zoom — Zoom","text":"","code":"Zoom(...)"},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Zoom.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Zoom — Zoom","text":"... Props pass component.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Zoom.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Zoom — Zoom","text":"Object shiny.tag class suitable use UI Shiny app.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/reference/Zoom.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Zoom — Zoom","text":"children element  Default - single child content element.needs able hold ref. addEndListener func  Default - Add custom transition end trigger. Called transitioning DOM node done callback. Allows fine grained transition end logic. Note: Timeouts still used fallback provided. appear bool  Default TRUE Perform enter transition first mounts also true. Set false disable behavior. easing { enter?: string, exit?: string }| string  Default - transition timing function. may specify single easing object containing enter exit values. bool  Default - true, component transition . timeout number| { appear?: number, enter?: number, exit?: number }  Default    enter: theme.transitions.duration.enteringScreen,   exit: theme.transitions.duration.leavingScreen,  duration transition, milliseconds. may specify single timeout transitions, individually object.","code":""},{"path":"https://felixluginbuhl.com/shinyMaterialUI/news/index.html","id":"shinymaterialui-010","dir":"Changelog","previous_headings":"","what":"shinyMaterialUI 0.1.0","title":"shinyMaterialUI 0.1.0","text":"initial commit","code":""}]
